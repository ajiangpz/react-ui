{"version":3,"file":"dep-CsTff4aB.js","sources":["../../../components/checkbox/index.ts","../../../components/notification/Notify.ts","../../../components/notification/NotifyItem.tsx","../../../components/notification/NotifyContainer.tsx","../../../components/notification/NotifyContext.tsx"],"sourcesContent":["import _Checkbox from './Checkbox';\n\nimport './style/index.js';\n\n\nexport type { CheckboxProps } from './Checkbox';\nexport type { CheckboxGroupProps } from './CheckboxGroup';\nexport * from './type';\n\nexport const Checkbox = _Checkbox;\nexport default Checkbox;\n","// notification.ts\ntype NotificationType = \"default\" | \"success\" | \"error\" | \"info\" | \"warning\";\ntype NotificationMessage = {\n  id: string;\n  type: NotificationType;\n  message: string;\n  title: string;\n};\n\nlet addNotification: (notification: NotificationMessage) => void = () => {};\n\nexport function notification(message: string, type: NotificationType = \"default\",title:string) {\n  const id = new Date().getTime().toString();\n  addNotification({\n    id,\n    message,\n    type,\n    title\n  });\n}\n\nexport function registerNotificationHandler(cb: typeof addNotification) {\n  addNotification = cb;\n}\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { XCircle, CheckCircle, AlertCircle, Info } from \"lucide-react\";\nimport useConfig from \"../hooks/useConfig\";\n\nconst NotificationItem: React.FC<{\n  id: string;\n  message: string;\n  type: string;\n  heights: { toastId: string; height: number }[];\n  gap: number;\n  setHeights: React.Dispatch<\n    React.SetStateAction<\n      { toastId: string; height: number; message: string; type: string }[]\n    >\n  >;\n  isRemoved: boolean;\n  isExpanded: boolean;\n  title: string\n}> = ({\n  message,\n  type,\n  heights,\n  setHeights,\n  id,\n  gap,\n  isExpanded,\n  isRemoved,\n  title\n}) => {\n    const [initialHeight, setInitialHeight] = useState(0);\n    const [isMounted, setIsMounted] = useState(false);\n    const nofityItem = useRef<HTMLDivElement>(null);\n    const { classPrefix: prefix } = useConfig();\n    React.useEffect(() => {\n      setIsMounted(true);\n    }, []);\n\n    React.useEffect(() => {\n      const notifyNode = nofityItem.current;\n      if (notifyNode) {\n        const height = notifyNode.getBoundingClientRect().height;\n        setInitialHeight(height);\n        setHeights(h => {\n          // 如果不存在，则添加\n          return [{ toastId: id, height, message, type }, ...h];\n        });\n        return () => {\n          setHeights(h => h.filter(h => h.toastId !== id));\n        };\n      }\n    }, [setHeights, id]);\n\n    useLayoutEffect(() => {\n      if (!isMounted) return;\n      const notifyNode = nofityItem.current;\n      if (notifyNode) {\n        const originalHeight = notifyNode.style.height;\n        notifyNode.style.height = \"auto\";\n        const newHeight = notifyNode.getBoundingClientRect().height;\n        notifyNode.style.height = originalHeight;\n        setInitialHeight(newHeight);\n        setHeights(heights => {\n          const isExist = heights.some(h => h.toastId === id);\n          if (isExist) {\n            // 如果存在，则更新高度\n            return heights.map(h =>\n              h.toastId === id ? { ...h, height: newHeight, message, type } : h\n            );\n          }\n          // 如果不存在，则添加\n          return [{ toastId: id, height: newHeight, message, type }, ...heights];\n        });\n      }\n    }, [isMounted, initialHeight, setHeights, id, message, type]);\n    const heightIndex = React.useMemo(() => {\n      return heights.findIndex(h => h.toastId === id);\n    }, [heights, id]);\n    const toastHeightBefore = React.useMemo(() => {\n      return heights.reduce((acc, h, reduceIndex) => {\n        if (reduceIndex < heightIndex) {\n          return acc + h.height;\n        }\n        return acc;\n      }, 0);\n    }, [initialHeight, heightIndex, heights]);\n\n    const offset = React.useMemo(\n      () => heightIndex * gap + toastHeightBefore,\n      [toastHeightBefore, heightIndex]\n    );\n\n    return (\n      <div\n\n        className={`${prefix}-notify__item`}\n        ref={nofityItem}\n        style={\n          {\n            position: \"absolute\",\n            height: isExpanded ? `auto` : `var(--front-toast-height)`,\n            width: `var(--toast-width)`,\n            \"--offset\": offset + \"px\",\n            \"--index\": heightIndex,\n            \"--gap\": gap + \"px\",\n            \"--z-index\": heights.length - heightIndex\n          } as React.CSSProperties\n        }\n        data-toast\n        data-mounted={isMounted}\n        data-expanded={isExpanded}\n        data-removed={isRemoved}\n        data-front={heightIndex === 0}\n      >\n        <div className={`${prefix}-notify__content`}>\n\n          <div className={`${prefix}-notify__header`}>\n            <div className={`${prefix}-notify__icon`} >\n              {type === \"success\" && <CheckCircle className=\"t-icon t-is-success\" />}\n              {type === \"error\" && <XCircle className=\"t-icon t-is-error\" />}\n              {type === \"info\" && <Info className=\"t-icon t-is-info\" />}\n              {type === \"warning\" && <AlertCircle className=\"t-icon t-is-warning\" />}\n              {type === \"default\" && <Info className=\"t-icon t-is-info\" />}\n            </div>\n\n            <div className={`${prefix}-notify__title`}>{title}</div>\n          </div>\n\n        </div>\n        <p className={`${prefix}-notify__detail`} style={{ opacity: heightIndex === 0 || isExpanded ? 1 : 0, transition: `opacity 400ms` }}>{message}</p>\n      </div>\n    );\n  };\n\nexport default NotificationItem;\n","import { useCallback, useState } from \"react\";\nimport NotificationItem from \"./NotifyItem\";\nimport useConfig from \"../hooks/useConfig\";\nexport const GAP = 14;\nexport const TOAST_WIDTH = 356;\nconst NotificationContainer = ({\n  notifications,\n  onRemove,\n  onHoverStart,\n  onHoverEnd,\n  maxStack,\n  position\n}: {\n  notifications: any[];\n  onRemove: (id: string) => void;\n  onHoverStart: () => void;\n  onHoverEnd: () => void;\n  maxStack: number;\n  position: string;\n}) => {\n  const [isHovering, setIsHovering] = useState(false);\n  const latestNotifications = notifications.slice(0, maxStack);\n  const [y, x] = position.split(\"-\");\n  const handleMouseEnter = useCallback(() => {\n    setIsHovering(true);\n    onHoverStart();\n  }, [onHoverStart]);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsHovering(false);\n    onHoverEnd();\n  }, [onHoverEnd]);\n\n  const [heights, setHeights] = useState<{ toastId: string; height: number }[]>(\n    []\n  );\n\n  const { classPrefix: prefix } = useConfig();\n\n  return (\n    <div\n      className={`${prefix}-notify`}\n\n      style={\n        {\n          height: isHovering ? `${notifications.length * 100 + 16}px` : \"auto\",\n          minHeight: \"80px\",\n          \"--front-toast-height\": (heights[0]?.height || 0) + \"px\",\n          \"--toast-width\": TOAST_WIDTH + \"px\"\n        } as React.CSSProperties\n      }\n      data-toaster\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      data-x-position={x}\n      data-y-position={y}\n    >\n      <div\n        className={`${prefix}-notify__container`}\n        style={{\n          pointerEvents: \"all\"\n        }}\n      >\n        {latestNotifications.map(notification => {\n          // const stackedStyle = !isHovering && !isLast;\n\n          // let offsetY = isHovering\n          //   ? index * 100 // 展开时，索引0在顶部\n          //   : stackedStyle\n          //   ? index * 8\n          //   : 0;\n\n          // const scale = stackedStyle ? 1 - index * 0.01 : 1;\n          // const opacity = stackedStyle ? 1 - index * 0.15 : 1;\n          return (\n            <NotificationItem\n              key={notification.id}\n              heights={heights}\n              setHeights={setHeights}\n              gap={GAP}\n              {...notification}\n              onRemove={onRemove}\n              isExpanded={isHovering}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationContainer;\n","import React, {\n  createContext,\n  useState,\n  useRef,\n  useCallback,\n  useContext,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport NotifyContainer from './NotifyContainer';\n\n// 1. 定义类型\ntype NotificationType = 'success' | 'error' | 'warning' | 'info';\n\ninterface Notification {\n  id: string;\n  type: NotificationType;\n  message: string;\n  createdAt: number;\n  isRemoved: boolean;\n  title:string\n}\n\n// 2. 定义 Context 类型\ninterface NotificationContextType {\n  notify: (type: NotificationType, message: string) => void;\n  success: (message: Message) => void;\n  error: (message: Message) => void;\n  warning: (message: Message) => void;\n  info: (message: Message) => void;\n  removeNotification: (id: string) => void;\n}\n\n// 3. 创建 Context\nconst NotificationContext = createContext<NotificationContextType | null>(null);\n\n// 4. 生成唯一 ID 的辅助函数\nconst generateId = () => Math.random().toString(36).substr(2, 9);\n\n// 5. Provider 组件\ninterface NotificationProviderProps {\n  children: React.ReactNode;\n  maxStack?: number;\n  displayDuration?: number;\n  position?: string;\n}\n\n type Message = {\n    title:string,\n    message:string\n  }\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({\n  children,\n  maxStack = 5,\n  displayDuration = 3000,\n  position = 'top-right',\n}) => {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const timersRef = useRef<Map<string, NodeJS.Timeout>>(new Map());\n  const pausedAtRef = useRef<Map<string, number>>(new Map());\n\n  // 定时器相关函数\n  const clearNotificationTimer = useCallback((id: string) => {\n    const timer = timersRef.current.get(id);\n    if (timer) {\n      clearTimeout(timer);\n      timersRef.current.delete(id);\n    }\n  }, []);\n\n  const startTimer = useCallback(\n    (notification: Notification, remainingTime?: number) => {\n      const duration = remainingTime ?? displayDuration;\n      const timer = setTimeout(() => {\n        setNotifications((prev) =>\n          prev.map((n) =>\n            n.id === notification.id ? { ...n, isRemoved: true } : n,\n          ),\n        );\n        setTimeout(() => {\n          setNotifications((prev) =>\n            prev.filter((t) => t.id !== notification.id),\n          );\n          clearNotificationTimer(notification.id);\n          pausedAtRef.current.delete(notification.id);\n        }, 400);\n      }, duration);\n      timersRef.current.set(notification.id, timer);\n    },\n    [displayDuration],\n  );\n\n \n\n  // 6. 核心通知函数\n  const addNotification = useCallback(\n    (type: NotificationType, message: Message) => {\n      const newNotification: Notification = {\n        id: generateId(),\n        type,\n        title:message.title,\n        message:message.message,\n        createdAt: Date.now(),\n        isRemoved: false,\n      };\n\n      setNotifications((prev) => {\n        const newNotifications = [newNotification, ...prev];\n        const removedNotifications = newNotifications.slice(maxStack);\n\n        removedNotifications.forEach((notification) => {\n          clearNotificationTimer(notification.id);\n          pausedAtRef.current.delete(notification.id);\n        });\n\n        return newNotifications.slice(0, maxStack);\n      });\n\n      startTimer(newNotification);\n    },\n    [maxStack, startTimer, clearNotificationTimer],\n  );\n\n  // 7. 提供的 Context 值\n  const contextValue = React.useMemo(\n    () => ({\n      notify: addNotification,\n      success: (message:Message) => addNotification('success', message),\n      error: (message: Message) => addNotification('error', message),\n      warning: (message: Message) => addNotification('warning', message),\n      info: (message: Message) => addNotification('info', message),\n      removeNotification: (id: string) => {\n        setNotifications((prev) => prev.filter((t) => t.id !== id));\n        clearNotificationTimer(id);\n        pausedAtRef.current.delete(id);\n      },\n    }),\n    [addNotification, clearNotificationTimer],\n  );\n\n  // 悬停处理\n  const clearAllTimers = useCallback(() => {\n    const now = Date.now();\n    notifications.forEach((notification) => {\n      pausedAtRef.current.set(notification.id, now);\n      clearNotificationTimer(notification.id);\n    });\n  }, [notifications]);\n\n  const restartAllTimers = useCallback(() => {\n    notifications.forEach((notification) => {\n      const pausedAt = pausedAtRef.current.get(notification.id);\n      if (pausedAt) {\n        const elapsedTime = pausedAt - notification.createdAt;\n        const remainingTime = Math.max(0, displayDuration - elapsedTime);\n        startTimer(notification, remainingTime);\n        pausedAtRef.current.delete(notification.id);\n      }\n    });\n  }, [notifications, displayDuration, startTimer]);\n\n  return (\n    <NotificationContext.Provider value={contextValue}>\n      {children}\n      {createPortal(\n        <NotifyContainer\n          notifications={notifications}\n          onRemove={(id) => contextValue.removeNotification(id)}\n          onHoverStart={clearAllTimers}\n          onHoverEnd={restartAllTimers}\n          data-testid=\"notification-container\"\n          maxStack={maxStack}\n          position={position}\n        />,\n        document.body,\n      )}\n    </NotificationContext.Provider>\n  );\n};\n\n// 8. 创建自定义 Hook\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error(\n      'useNotification must be used within a NotificationProvider',\n    );\n  }\n  return context;\n};\n"],"names":["Checkbox","_Checkbox","addNotification","notification","message","type","arguments","length","undefined","title","id","Date","getTime","toString","registerNotificationHandler","cb","NotificationItem","_ref","heights","setHeights","gap","isExpanded","isRemoved","_useState","useState","_useState2","_slicedToArray","initialHeight","setInitialHeight","_useState3","_useState4","isMounted","setIsMounted","nofityItem","useRef","_useConfig","useConfig","prefix","classPrefix","React","useEffect","notifyNode","current","height","getBoundingClientRect","h","toastId","concat","_toConsumableArray","filter","useLayoutEffect","originalHeight","style","newHeight","isExist","some","map","_objectSpread","heightIndex","useMemo","findIndex","toastHeightBefore","reduce","acc","reduceIndex","offset","createElement","className","ref","position","width","CheckCircle","XCircle","Info","AlertCircle","opacity","transition","GAP","TOAST_WIDTH","NotificationContainer","_heights$","notifications","onRemove","onHoverStart","onHoverEnd","maxStack","isHovering","setIsHovering","latestNotifications","slice","_position$split","split","_position$split2","y","x","handleMouseEnter","useCallback","handleMouseLeave","minHeight","onMouseEnter","onMouseLeave","pointerEvents","key","NotificationContext","createContext","generateId","Math","random","substr","NotificationProvider","children","_ref$maxStack","_ref$displayDuration","displayDuration","_ref$position","setNotifications","timersRef","Map","pausedAtRef","clearNotificationTimer","timer","get","clearTimeout","startTimer","remainingTime","duration","setTimeout","prev","n","t","set","newNotification","createdAt","now","newNotifications","removedNotifications","forEach","contextValue","notify","success","error","warning","info","removeNotification","clearAllTimers","restartAllTimers","pausedAt","elapsedTime","max","Provider","value","createPortal","NotifyContainer","document","body","useNotification","context","useContext","Error"],"mappings":";;;;;;;;;;AASO,IAAMA,QAAA,GAAWC;;ACAxB,IAAIC,kBAA+D,SAA/DA,kBAAqE,CAAC,CAAA;AAEnE,SAASC,YAAAA,CAAaC,OAAA,EAAkE;AAAA,EAAA,IAAjDC,IAAA,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAyB,SAAA;EAAA,IAAUG,KAAA,GAAAH,SAAA,CAAAC,MAAA,GAAA,CAAA,GAAAD,SAAA,MAAAE,SAAA;AAC/E,EAAA,IAAME,qBAAK,IAAIC,IAAA,EAAK,EAAEC,OAAA,GAAUC,QAAA,EAAS;AACzCX,EAAAA,eAAA,CAAgB;AACdQ,IAAAA,EAAA,EAAAA,EAAA;AACAN,IAAAA,OAAA,EAAAA,OAAA;AACAC,IAAAA,IAAA,EAAAA,IAAA;AACAI,IAAAA,KAAA,EAAAA;AACF,GAAC,CAAA;AACH;AAEO,SAASK,4BAA4BC,EAAA,EAA4B;AACtEb,EAAAA,eAAA,GAAkBa,EAAA;AACpB;;;;ACnBA,IAAMC,mBAcD,SAdCA,uBAwBA;AAAA,EAAA,IATJZ,OAAA,GAAAa,IAAA,CAAAb,OAAA;IACAC,IAAA,GAAAY,IAAA,CAAAZ,IAAA;IACAa,OAAA,GAAAD,IAAA,CAAAC,OAAA;IACAC,UAAA,GAAAF,IAAA,CAAAE,UAAA;IACAT,EAAA,GAAAO,IAAA,CAAAP,EAAA;IACAU,GAAA,GAAAH,IAAA,CAAAG,GAAA;IACAC,UAAA,GAAAJ,IAAA,CAAAI,UAAA;IACAC,SAAA,GAAAL,IAAA,CAAAK,SAAA;IACAb,KAAA,GAAAQ,IAAA,CAAAR,KAAA;AAEE,EAAA,IAAAc,SAAA,GAA0CC,sBAAS,CAAC,CAAA;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAA7CI,IAAAA,aAAA,GAAAF,UAAA,CAAA,CAAA,CAAA;AAAeG,IAAAA,gBAAgB,GAAAH,UAAA,CAAA,CAAA,CAAA;AACtC,EAAA,IAAAI,UAAA,GAAkCL,sBAAS,KAAK,CAAA;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA,EAAA,CAAA,CAAA;AAAzCE,IAAAA,SAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAWE,IAAAA,YAAY,GAAAF,UAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAMG,UAAA,GAAaC,oBAAuB,IAAI,CAAA;AAC9C,EAAA,IAAAC,UAAA,GAAgCC,SAAA,EAAU;IAArBC,MAAA,GAAAF,UAAA,CAAbG,WAAA;EACRC,OAAA,CAAMC,UAAU,YAAM;IACpBR,YAAA,CAAa,IAAI,CAAA;EACnB,CAAA,EAAG,EAAE,CAAA;EAELO,OAAA,CAAMC,UAAU,YAAM;AACpB,IAAA,IAAMC,aAAaR,UAAA,CAAWS,OAAA;AAC9B,IAAA,IAAID,UAAA,EAAY;MACd,IAAME,MAAA,GAASF,UAAA,CAAWG,qBAAA,EAAsB,CAAED,MAAA;MAClDf,gBAAA,CAAiBe,MAAM,CAAA;MACvBxB,UAAA,CAAW,UAAA0B,CAAA,EAAK;QAEd,OAAA,CAAQ;AAAEC,UAAAA,OAAA,EAASpC,EAAA;AAAIiC,UAAAA,QAAAA;AAAQvC,UAAAA,OAAA,EAAAA,OAAA;AAASC,UAAAA,IAAA,EAAAA;AAAK,SAAA,CAAA,CAAA0C,MAAA,CAAAC,kBAAA,CAAMH,CAAC,CAAA,CAAA;AACtD,MAAA,CAAC,CAAA;AACD,MAAA,OAAO,YAAM;QACX1B,UAAA,CAAW,UAAA0B,CAAA,EAAA;AAAA,UAAA,OAAKA,EAAEI,MAAA,CAAO,UAAAJ;mBAAKA,EAAAA,CAAEC,OAAA,KAAYpC,EAAE;UAAA,CAAA,CAAC;QAAA,CAAA,CAAA;MACjD,CAAA;AACF,IAAA;AACF,EAAA,CAAA,EAAG,CAACS,UAAA,EAAYT,EAAE,CAAC,CAAA;AAEnBwC,EAAAA,4BAAA,CAAgB,YAAM;IACpB,IAAI,CAACnB,SAAA,EAAW;AAChB,IAAA,IAAMU,aAAaR,UAAA,CAAWS,OAAA;AAC9B,IAAA,IAAID,UAAA,EAAY;AACd,MAAA,IAAMU,cAAA,GAAiBV,WAAWW,KAAA,CAAMT,MAAA;AACxCF,MAAAA,UAAA,CAAWW,MAAMT,MAAA,GAAS,MAAA;MAC1B,IAAMU,SAAA,GAAYZ,UAAA,CAAWG,qBAAA,EAAsB,CAAED,MAAA;AACrDF,MAAAA,UAAA,CAAWW,MAAMT,MAAA,GAASQ,cAAA;MAC1BvB,gBAAA,CAAiByB,SAAS,CAAA;MAC1BlC,UAAA,CAAW,UAAAD,QAAAA,EAAW;AACpB,QAAA,IAAMoC,UAAUpC,QAAAA,CAAQqC,IAAA,CAAK,UAAAV,CAAA,EAAA;AAAA,UAAA,OAAKA,CAAA,CAAEC,YAAYpC,EAAE;QAAA,CAAA,CAAA;AAClD,QAAA,IAAI4C,OAAA,EAAS;AAEX,UAAA,OAAOpC,QAAAA,CAAQsC,GAAA,CAAI,UAAAX,CAAA,EAAA;YAAA,OACjBA,CAAA,CAAEC,OAAA,KAAYpC,EAAA,GAAA+C,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAUZ,CAAA,CAAA,EAAA,EAAA,EAAA;AAAGF,cAAAA,MAAA,EAAQU,SAAA;AAAWjD,cAAAA,OAAA,EAAAA,OAAA;AAASC,cAAAA,IAAA,EAAAA;AAAA,aAAA,CAAA,GAASwC,CAAA;AAAA,UAAA,CAClE,CAAA;AACF,QAAA;QAEA,OAAA,CAAQ;AAAEC,UAAAA,OAAA,EAASpC,EAAA;AAAIiC,UAAAA,MAAA,EAAQU;AAAWjD,UAAAA,OAAA,EAAAA,OAAA;AAASC,UAAAA,IAAA,EAAAA;AAAK,SAAA,CAAA,CAAA0C,MAAA,CAAAC,kBAAA,CAAM9B,QAAO,CAAA,CAAA;AACvE,MAAA,CAAC,CAAA;AACH,IAAA;AACF,EAAA,CAAA,EAAG,CAACa,SAAA,EAAWJ,aAAA,EAAeR,YAAYT,EAAA,EAAIN,OAAA,EAASC,IAAI,CAAC,CAAA;AAC5D,EAAA,IAAMqD,WAAA,GAAcnB,OAAA,CAAMoB,OAAA,CAAQ,YAAM;AACtC,IAAA,OAAOzC,OAAA,CAAQ0C,SAAA,CAAU,UAAAf,CAAA,EAAA;AAAA,MAAA,OAAKA,CAAA,CAAEC,YAAYpC,EAAE;IAAA,CAAA,CAAA;AAChD,EAAA,CAAA,EAAG,CAACQ,OAAA,EAASR,EAAE,CAAC,CAAA;AAChB,EAAA,IAAMmD,iBAAA,GAAoBtB,OAAA,CAAMoB,OAAA,CAAQ,YAAM;IAC5C,OAAOzC,OAAA,CAAQ4C,MAAA,CAAO,UAACC,GAAA,EAAKlB,GAAGmB,WAAA,EAAgB;MAC7C,IAAIA,cAAcN,WAAA,EAAa;AAC7B,QAAA,OAAOK,MAAMlB,CAAA,CAAEF,MAAA;AACjB,MAAA;AACA,MAAA,OAAOoB,GAAA;IACT,GAAG,CAAC,CAAA;EACN,CAAA,EAAG,CAACpC,aAAA,EAAe+B,WAAA,EAAaxC,OAAO,CAAC,CAAA;AAExC,EAAA,IAAM+C,SAAS1B,OAAA,CAAMoB,OAAA,CACnB,YAAA;AAAA,IAAA,OAAMD,cAActC,GAAA,GAAMyC,iBAAA;AAAA,EAAA,CAAA,EAC1B,CAACA,mBAAmBH,WAAW,CACjC,CAAA;AAEA,EAAA,sBACEnB,OAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;AAECC,IAAAA,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,eAAA,CAAA;AACpB+B,IAAAA,GAAA,EAAKnC,UAAA;AACLmB,IAAAA,KAAA,EACE;AACEiB,MAAAA,QAAA,EAAU,UAAA;MACV1B,MAAA,EAAQtB,iDAAsB;AAC9BiD,MAAAA,KAAA,EAAA,oBAAO;MACP,YAAYL,MAAA,GAAS,IAAA;AACrB,MAAA,SAAA,EAAWP,WAAA;MACX,SAAStC,GAAA,GAAM,IAAA;AACf,MAAA,WAAA,EAAaF,QAAQX,MAAA,GAASmD;KAChC;AAEF,IAAA,YAAA,EAAU,IAAA;AACV,IAAA,cAAA,EAAc3B,SAAA;AACd,IAAA,eAAA,EAAeV,UAAA;AACf,IAAA,cAAA,EAAcC,SAAA;IACd,cAAYoC,WAAA,KAAgB;AAAA,GAAA,iBAE5BnB,OAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;IAAIC,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,kBAAA;AAAA,GAAA,iBAEvBE,OAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;IAAIC,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,iBAAA;AAAA,GAAA,iBACvBE,OAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;IAAIC,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,eAAA;GAAA,EACtBhC,IAAA,KAAS,SAAA,mBAAakC,OAAA,CAAA2B,aAAA,CAACK,WAAA,EAAA;AAAYJ,IAAAA,SAAA,EAAU;AAAA,GAAsB,CAAA,EACnE9D,IAAA,KAAS,OAAA,mBAAWkC,OAAA,CAAA2B,aAAA,CAACM;AAAQL,IAAAA,SAAA,EAAU;AAAA,GAAoB,CAAA,EAC3D9D,IAAA,KAAS,MAAA,mBAAUkC,OAAA,CAAA2B,aAAA,CAACO,IAAA,EAAA;AAAKN,IAAAA,SAAA,EAAU;AAAA,GAAmB,CAAA,EACtD9D,IAAA,KAAS,SAAA,mBAAakC,OAAA,CAAA2B,aAAA,CAACQ,WAAA,EAAA;AAAYP,IAAAA,SAAA,EAAU;AAAA,GAAsB,CAAA,EACnE9D,IAAA,KAAS,SAAA,mBAAakC,OAAA,CAAA2B,aAAA,CAACO,IAAA,EAAA;AAAKN,IAAAA,SAAA,EAAU;GAAmB,CAC5D,CAAA,iBAEA5B,OAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;IAAIC,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,gBAAA;AAAA,GAAA,EAAmB5B,KAAM,CACpD,CAEF,CAAA,uCACC,GAAA,EAAA;AAAE0D,IAAAA,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,iBAAA;AAAmBe,IAAAA,KAAA,EAAO;MAAEuB,OAAA,EAASjB,WAAA,KAAgB,KAAKrC,UAAA,GAAa,CAAA,GAAI;MAAGuD,UAAA,EAAA;AAA4B;KAAIxE,OAAQ,CAC/I,CAAA;AAEJ,CAAA;;;;AChIK,IAAMyE,GAAA,GAAM,EAAA;AACZ,IAAMC,WAAA,GAAc,GAAA;AAC3B,IAAMC,wBAAwB,SAAxBA,4BAcA;AAAA,EAAA,IAAAC,SAAA;AAAA,EAAA,IAbJC,aAAA,GAAAhE,IAAA,CAAAgE,aAAA;IACAC,QAAA,GAAAjE,IAAA,CAAAiE,QAAA;IACAC,YAAA,GAAAlE,IAAA,CAAAkE,YAAA;IACAC,UAAA,GAAAnE,IAAA,CAAAmE,UAAA;IACAC,QAAA,GAAApE,IAAA,CAAAoE,QAAA;IACAhB,QAAA,GAAApD,IAAA,CAAAoD,QAAA;AASA,EAAA,IAAA9C,SAAA,GAAoCC,sBAAS,KAAK,CAAA;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAA3C+D,IAAAA,UAAA,GAAA7D,UAAA,CAAA,CAAA,CAAA;AAAY8D,IAAAA,aAAa,GAAA9D,UAAA,CAAA,CAAA,CAAA;EAChC,IAAM+D,mBAAA,GAAsBP,aAAA,CAAcQ,KAAA,CAAM,CAAA,EAAGJ,QAAQ,CAAA;AAC3D,EAAA,IAAAK,eAAA,GAAerB,QAAA,CAASsB,MAAM,GAAG,CAAA;IAAAC,gBAAA,GAAAlE,cAAA,CAAAgE,eAAA,EAAA,CAAA,CAAA;AAA1BG,IAAAA,CAAA,GAAAD,gBAAA,CAAA,CAAA,CAAA;AAAGE,IAAAA,CAAC,GAAAF,gBAAA,CAAA,CAAA,CAAA;AACX,EAAA,IAAMG,gBAAA,GAAmBC,yBAAY,YAAM;IACzCT,aAAA,CAAc,IAAI,CAAA;AAClBJ,IAAAA,YAAA,EAAa;AACf,EAAA,CAAA,EAAG,CAACA,YAAY,CAAC,CAAA;AAEjB,EAAA,IAAMc,gBAAA,GAAmBD,yBAAY,YAAM;IACzCT,aAAA,CAAc,KAAK,CAAA;AACnBH,IAAAA,UAAA,EAAW;AACb,EAAA,CAAA,EAAG,CAACA,UAAU,CAAC,CAAA;AAEf,EAAA,IAAAvD,UAAA,GAA8BL,qBAAA,CAC5B,EACF,CAAA;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA,EAAA,CAAA,CAAA;AAFOX,IAAAA,OAAA,GAAAY,UAAA,CAAA,CAAA,CAAA;AAASX,IAAAA,UAAU,GAAAW,UAAA,CAAA,CAAA,CAAA;AAI1B,EAAA,IAAAK,UAAA,GAAgCC,SAAA,EAAU;IAArBC,MAAA,GAAAF,UAAA,CAAbG,WAAA;AAER,EAAA,sBACEC,KAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;AACCC,IAAAA,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,SAAA,CAAA;AAEpBe,IAAAA,KAAA,EACE;AACET,MAAAA,QAAQ2C,UAAA,GAAA,EAAA,CAAAvC,MAAA,CAAgBkC,cAAc1E,MAAA,GAAS,GAAA,GAAM,EAAE,UAAO,MAAA;AAC9D2F,MAAAA,SAAA,EAAW,MAAA;AACX,MAAA,sBAAA,EAAA,CAAyB,CAAA,CAAAlB,SAAA,GAAA9D,OAAA,CAAQ,CAAC,CAAA,MAAA,IAAA,IAAA8D,SAAA,uBAATA,SAAA,CAAYrC,WAAU,CAAA,IAAK,IAAA;MACpD,iBAAiBmC,WAAA,GAAc;KACjC;AAEF,IAAA,cAAA,EAAY,IAAA;AACZqB,IAAAA,YAAA,EAAcJ,gBAAA;AACdK,IAAAA,YAAA,EAAcH,gBAAA;AACd,IAAA,iBAAA,EAAiBH,CAAA;AACjB,IAAA,iBAAA,EAAiBD;AAAA,GAAA,iBAEjBtD,KAAA,CAAA2B,aAAA,CAAC,KAAA,EAAA;AACCC,IAAAA,SAAA,EAAA,EAAA,CAAApB,MAAA,CAAcV,MAAM,EAAA,oBAAA,CAAA;AACpBe,IAAAA,KAAA,EAAO;AACLiD,MAAAA,aAAA,EAAe;AACjB;AAAA,GAAA,EAECb,mBAAA,CAAoBhC,IAAI,UAAArD,YAAA,EAAgB;IAWvC,sBACEoC,KAAA,CAAA2B,aAAA,CAAClD,gBAAA,EAAAyC,eAAA,CAAAA,eAAA,CAAA;MACC6C,KAAKnG,YAAA,CAAaO,EAAA;AAClBQ,MAAAA,OAAA,EAAAA,OAAA;AACAC,MAAAA,UAAA,EAAAA,UAAA;AACAC,MAAAA,GAAA,EAAKyD;AAAA,KAAA,EACD1E,YAAA,CAAA,EAAA,EAAA,EAAA;AACJ+E,MAAAA,QAAA,EAAAA,QAAA;AACA7D,MAAAA,UAAA,EAAYiE;AAAA,KAAA,CACd,CAAA;EAEJ,CAAC,CACH,CACF,CAAA;AAEJ,CAAA;;;;ACxDA,IAAMiB,mBAAA,gBAAsBC,2BAA8C,IAAI,CAAA;AAG9E,IAAMC,UAAA,GAAa,SAAbA,UAAAA,GAAA;AAAA,EAAA,OAAmBC,IAAA,CAAKC,MAAA,EAAO,CAAE9F,SAAS,EAAE,CAAA,CAAE+F,MAAA,CAAO,CAAA,EAAG,CAAC,CAAA;AAAA,CAAA;IAclDC,uBAA4D,SAA5DA,2BAKP;AAAA,EAAA,IAJJC,QAAA,GAAA7F,IAAA,CAAA6F,QAAA;IAAAC,aAAA,GAAA9F,IAAA,CACAoE,QAAA;AAAAA,IAAAA,QAAA,GAAA0B,aAAA,KAAA,KAAA,CAAA,GAAW,CAAA,GAAAA,aAAA;IAAAC,oBAAA,GAAA/F,IAAA,CACXgG,eAAA;AAAAA,IAAAA,eAAA,GAAAD,oBAAA,KAAA,KAAA,CAAA,GAAkB,GAAA,GAAAA,oBAAA;IAAAE,aAAA,GAAAjG,IAAA,CAClBoD,QAAA;AAAAA,IAAAA,QAAA,GAAA6C,aAAA,KAAA,KAAA,CAAA,GAAW,WAAA,GAAAA,aAAA;AAEX,EAAA,IAAA3F,SAAA,GAA0CC,qBAAA,CAAyB,EAAE,CAAA;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAA9D0D,IAAAA,aAAA,GAAAxD,UAAA,CAAA,CAAA,CAAA;AAAe0F,IAAAA,gBAAgB,GAAA1F,UAAA,CAAA,CAAA,CAAA;EACtC,IAAM2F,SAAA,GAAYlF,mBAAA,gBAAoC,IAAImF,GAAA,EAAK,CAAA;EAC/D,IAAMC,WAAA,GAAcpF,mBAAA,gBAA4B,IAAImF,GAAA,EAAK,CAAA;AAGzD,EAAA,IAAME,sBAAA,GAAyBvB,wBAAA,CAAY,UAACtF,EAAA,EAAe;IACzD,IAAM8G,KAAA,GAAQJ,SAAA,CAAU1E,OAAA,CAAQ+E,GAAA,CAAI/G,EAAE,CAAA;AACtC,IAAA,IAAI8G,KAAA,EAAO;MACTE,YAAA,CAAaF,KAAK,CAAA;AAClBJ,MAAAA,SAAA,CAAU1E,OAAA,CAAA,QAAA,EAAehC,EAAE,CAAA;AAC7B,IAAA;EACF,CAAA,EAAG,EAAE,CAAA;EAEL,IAAMiH,UAAA,GAAa3B,wBAAA,CACjB,UAAC7F,cAA4ByH,aAAA,EAA2B;IACtD,IAAMC,WAAWD,aAAA,KAAA,IAAA,IAAAA,aAAA,KAAA,KAAA,CAAA,GAAAA,aAAA,GAAiBX,eAAA;AAClC,IAAA,IAAMO,KAAA,GAAQM,WAAW,YAAM;MAC7BX,gBAAA,CAAiB,UAACY;eAChBA,IAAA,CAAKvE,GAAA,CAAI,UAACwE,CAAA,EAAA;AAAA,UAAA,OACRA,CAAA,CAAEtH,EAAA,KAAOP,YAAA,CAAaO,EAAA,GAAA+C,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAUuE,CAAA,CAAA,EAAA,EAAA,EAAA;AAAG1G,YAAAA,SAAA,EAAW;AAAA,WAAA,CAAA,GAAS0G,CAAA;AAAA,QAAA,CACzD,CAAA;AAAA,MAAA,CACF,CAAA;AACAF,MAAAA,UAAA,CAAW,YAAM;QACfX,gBAAA,CAAiB,UAACY;iBAChBA,IAAA,CAAK9E,MAAA,CAAO,UAACgF,CAAA,EAAA;AAAA,YAAA,OAAMA,CAAA,CAAEvH,EAAA,KAAOP,YAAA,CAAaO,EAAE;UAAA,CAAA,CAAA;AAAA,QAAA,CAC7C,CAAA;AACA6G,QAAAA,sBAAA,CAAuBpH,aAAaO,EAAE,CAAA;AACtC4G,QAAAA,WAAA,CAAY5E,OAAA,CAAA,QAAA,CAAQ,CAAOvC,YAAA,CAAaO,EAAE,CAAA;MAC5C,GAAG,GAAG,CAAA;IACR,GAAGmH,QAAQ,CAAA;IACXT,SAAA,CAAU1E,OAAA,CAAQwF,GAAA,CAAI/H,YAAA,CAAaO,EAAA,EAAI8G,KAAK,CAAA;AAC9C,EAAA,CAAA,EACA,CAACP,eAAe,CAClB,CAAA;EAKA,IAAM/G,eAAA,GAAkB8F,wBAAA,CACtB,UAAC3F,MAAwBD,OAAA,EAAqB;AAC5C,IAAA,IAAM+H,eAAA,GAAgC;MACpCzH,IAAI+F,UAAA,EAAW;AACfpG,MAAAA,IAAA,EAAAA,IAAA;MACAI,OAAML,OAAA,CAAQK,KAAA;MACdL,SAAQA,OAAA,CAAQA,OAAA;AAChBgI,MAAAA,SAAA,EAAWzH,KAAK0H,GAAA,EAAI;AACpB/G,MAAAA,SAAA,EAAW;KACb;IAEA6F,gBAAA,CAAiB,UAACY,IAAA,EAAS;MACzB,IAAMO,gBAAA,IAAoBH,eAAA,CAAA,CAAApF,MAAA,CAAAC,kBAAA,CAAoB+E,IAAI,CAAA,CAAA;AAClD,MAAA,IAAMQ,oBAAA,GAAuBD,gBAAA,CAAiB7C,KAAA,CAAMJ,QAAQ,CAAA;AAE5DkD,MAAAA,oBAAA,CAAqBC,OAAA,CAAQ,UAACrI,YAAA,EAAiB;AAC7CoH,QAAAA,sBAAA,CAAuBpH,aAAaO,EAAE,CAAA;AACtC4G,QAAAA,WAAA,CAAY5E,OAAA,CAAA,QAAA,CAAQ,CAAOvC,YAAA,CAAaO,EAAE,CAAA;AAC5C,MAAA,CAAC,CAAA;AAED,MAAA,OAAO4H,gBAAA,CAAiB7C,KAAA,CAAM,CAAA,EAAGJ,QAAQ,CAAA;AAC3C,IAAA,CAAC,CAAA;IAEDsC,UAAA,CAAWQ,eAAe,CAAA;EAC5B,CAAA,EACA,CAAC9C,QAAA,EAAUsC,UAAA,EAAYJ,sBAAsB,CAC/C,CAAA;AAGA,EAAA,IAAMkB,eAAelG,OAAA,CAAMoB,OAAA,CACzB,YAAA;IAAA,OAAO;AACL+E,MAAAA,MAAA,EAAQxI,eAAA;AACRyI,MAAAA,OAAA,EAAS,SAATA,OAAAA,CAAUvI,OAAA,EAAA;AAAA,QAAA,OAAoBF,eAAA,CAAgB,WAAWE,OAAO,CAAA;AAAA,MAAA,CAAA;AAChEwI,MAAAA,KAAA,EAAO,SAAPA,KAAAA,CAAQxI,OAAA,EAAA;AAAA,QAAA,OAAqBF,eAAA,CAAgB,SAASE,OAAO,CAAA;AAAA,MAAA,CAAA;AAC7DyI,MAAAA,OAAA,EAAS,SAATA,OAAAA,CAAUzI,OAAA,EAAA;AAAA,QAAA,OAAqBF,eAAA,CAAgB,WAAWE,OAAO,CAAA;AAAA,MAAA,CAAA;AACjE0I,MAAAA,IAAA,EAAM,SAANA,IAAAA,CAAO1I,OAAA,EAAA;AAAA,QAAA,OAAqBF,eAAA,CAAgB,QAAQE,OAAO,CAAA;AAAA,MAAA,CAAA;AAC3D2I,MAAAA,kBAAA,EAAoB,SAApBA,kBAAAA,CAAqBrI,EAAA,EAAe;QAClCyG,gBAAA,CAAiB,UAACY;iBAASA,IAAA,CAAK9E,MAAA,CAAO,UAACgF,CAAA,EAAA;AAAA,YAAA,OAAMA,CAAA,CAAEvH,EAAA,KAAOA,EAAE;UAAA,CAAA,CAAC;QAAA,CAAA,CAAA;QAC1D6G,sBAAA,CAAuB7G,EAAE,CAAA;AACzB4G,QAAAA,WAAA,CAAY5E,OAAA,CAAA,QAAA,EAAehC,EAAE,CAAA;AAC/B,MAAA;KACF;AAAA,EAAA,CAAA,EACA,CAACR,iBAAiBqH,sBAAsB,CAC1C,CAAA;AAGA,EAAA,IAAMyB,cAAA,GAAiBhD,yBAAY,YAAM;AACvC,IAAA,IAAMqC,GAAA,GAAM1H,KAAK0H,GAAA,EAAI;AACrBpD,IAAAA,aAAA,CAAcuD,OAAA,CAAQ,UAACrI,YAAA,EAAiB;MACtCmH,WAAA,CAAY5E,OAAA,CAAQwF,GAAA,CAAI/H,YAAA,CAAaO,EAAA,EAAI2H,GAAG,CAAA;AAC5Cd,MAAAA,sBAAA,CAAuBpH,aAAaO,EAAE,CAAA;AACxC,IAAA,CAAC,CAAA;AACH,EAAA,CAAA,EAAG,CAACuE,aAAa,CAAC,CAAA;AAElB,EAAA,IAAMgE,gBAAA,GAAmBjD,yBAAY,YAAM;AACzCf,IAAAA,aAAA,CAAcuD,OAAA,CAAQ,UAACrI,YAAA,EAAiB;MACtC,IAAM+I,QAAA,GAAW5B,WAAA,CAAY5E,OAAA,CAAQ+E,GAAA,CAAItH,aAAaO,EAAE,CAAA;AACxD,MAAA,IAAIwI,QAAA,EAAU;AACZ,QAAA,IAAMC,WAAA,GAAcD,WAAW/I,YAAA,CAAaiI,SAAA;QAC5C,IAAMR,aAAA,GAAgBlB,IAAA,CAAK0C,GAAA,CAAI,CAAA,EAAGnC,kBAAkBkC,WAAW,CAAA;AAC/DxB,QAAAA,UAAA,CAAWxH,cAAcyH,aAAa,CAAA;AACtCN,QAAAA,WAAA,CAAY5E,OAAA,CAAA,QAAA,CAAQ,CAAOvC,YAAA,CAAaO,EAAE,CAAA;AAC5C,MAAA;AACF,IAAA,CAAC,CAAA;EACH,CAAA,EAAG,CAACuE,aAAA,EAAegC,eAAA,EAAiBU,UAAU,CAAC,CAAA;EAE/C,4CACGpB,mBAAA,CAAoB8C,QAAA,EAApB;AAA6BC,IAAAA,KAAA,EAAOb;KAClC3B,QAAA,eACAyC,4BAAA,gBACChH,OAAA,CAAA2B,aAAA,CAACsF,qBAAA,EAAA;AACCvE,IAAAA,aAAA,EAAAA,aAAA;AACAC,IAAAA,QAAA,EAAU,SAAVA,QAAAA,CAAWxE,EAAA,EAAA;AAAA,MAAA,OAAO+H,YAAA,CAAaM,mBAAmBrI,EAAE,CAAA;AAAA,IAAA,CAAA;AACpDyE,IAAAA,YAAA,EAAc6D,cAAA;AACd5D,IAAAA,UAAA,EAAY6D,gBAAA;AACZ,IAAA,aAAA,EAAY,wBAAA;AACZ5D,IAAAA,QAAA,EAAAA,QAAA;AACAhB,IAAAA,QAAA,EAAAA;AAAA,GACF,CAAA,EACAoF,QAAA,CAASC,IACX,CACF,CAAA;AAEJ;IAGaC,kBAAkB,SAAlBA,kBAAwB;AACnC,EAAA,IAAMC,OAAA,GAAUC,wBAAWtD,mBAAmB,CAAA;EAC9C,IAAI,CAACqD,OAAA,EAAS;AACZ,IAAA,MAAM,IAAIE,KAAA,CACR,4DACF,CAAA;AACF,EAAA;AACA,EAAA,OAAOF,OAAA;AACT;;;;"}