{"version":3,"file":"dep-BpYapwIO.js","sources":["../../../components/form/const.ts","../../../components/form/hooks/useFormItemStyle.tsx"],"sourcesContent":["export const enum ValidateStatus {\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n  VALIDATING = 'validating',\n}\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../../hooks/useConfig';\nimport parseTNode from '../../utils/parseTNode';\nimport { ValidateStatus } from '../const';\n\nexport default function useFormItemStyle(props) {\n  const { classPrefix } = useConfig();\n\n  const {\n    className,\n    help,\n    tips,\n    snakeName,\n    status,\n    successBorder,\n    errorList,\n    successList,\n    layout,\n    verifyStatus,\n    label,\n    labelWidth,\n    labelAlign,\n    requiredMark,\n    requiredMarkPosition,\n    showErrorMessage,\n    innerRules,\n  } = props;\n\n  // 传入 status 时受控\n  const renderStatus = status || verifyStatus;\n\n  // help 文本\n  const helpNode = help && <div className={`${classPrefix}-input__help`}>{parseTNode(help)}</div>;\n\n  // 判断是否有星号\n  const needRequiredMark = requiredMark || (requiredMark ?? innerRules.filter((rule: any) => rule.required).length > 0);\n\n  // 提示文本\n  const extraNode = useMemo(() => {\n    let extra = tips ? (\n      <div className={`${classPrefix}-input__extra`} title={tips}>\n        {tips}\n      </div>\n    ) : null;\n\n    if (showErrorMessage && errorList?.[0]?.message) {\n      extra = (\n        <div className={`${classPrefix}-input__extra`} title={errorList[0].message}>\n          {errorList[0].message}\n        </div>\n      );\n    } else if (successList.length) {\n      extra = (\n        <div className={`${classPrefix}-input__extra`} title={successList[0].message}>\n          {successList[0].message}\n        </div>\n      );\n    }\n\n    return extra;\n  }, [showErrorMessage, errorList, successList, tips, classPrefix]);\n\n  // snake 在dom上显示的名字改成下划线拼接\n  const formSnakeName = snakeName.split(',').join('_');\n\n  const formItemClass = classNames(`${classPrefix}-form__item`, className, {\n    [`${classPrefix}-form-item__${formSnakeName}`]: formSnakeName,\n    [`${classPrefix}-form__item-with-help`]: helpNode,\n    [`${classPrefix}-form__item-with-extra`]: extraNode,\n  });\n\n  const formItemLabelClass = classNames(`${classPrefix}-form__label`, {\n    [`${classPrefix}-form__label--required`]: needRequiredMark,\n    [`${classPrefix}-form__label--required-right`]: needRequiredMark && requiredMarkPosition === 'right',\n    [`${classPrefix}-form__label--top`]: labelAlign === 'top' || !labelWidth,\n    [`${classPrefix}-form__label--left`]: labelAlign === 'left' && labelWidth,\n    [`${classPrefix}-form__label--right`]: labelAlign === 'right' && labelWidth,\n  });\n\n  const contentClass = () => {\n    const controlCls = `${classPrefix}-form__controls`;\n    if (!showErrorMessage) return controlCls;\n\n    const isSuccess = renderStatus === ValidateStatus.SUCCESS;\n    if (isSuccess) {\n      return classNames(controlCls, `${classPrefix}-is-success`, {\n        [`${classPrefix}-form--success-border`]: successBorder,\n      });\n    }\n\n    return classNames(controlCls, {\n      [`${classPrefix}-is-warning`]: renderStatus === 'warning',\n      [`${classPrefix}-is-error`]: ['fail', 'error'].includes(renderStatus),\n      [`${classPrefix}-form--has-error`]:\n        renderStatus === ValidateStatus.ERROR || renderStatus === ValidateStatus.WARNING,\n    });\n  };\n\n  let labelStyle = {};\n  let contentStyle = {};\n  if (label && labelWidth && labelAlign !== 'top') {\n    if (typeof labelWidth === 'number') {\n      labelStyle = { width: `${labelWidth}px` };\n      contentStyle = { marginLeft: layout !== 'inline' ? `${labelWidth}px` : '' };\n    } else {\n      labelStyle = { width: labelWidth };\n      contentStyle = { marginLeft: layout !== 'inline' ? labelWidth : '' };\n    }\n  }\n\n  return {\n    formItemClass,\n    formItemLabelClass,\n    contentClass,\n    labelStyle,\n    contentStyle,\n    helpNode,\n    extraNode,\n  };\n}\n"],"names":["ValidateStatus","useFormItemStyle","props","_useConfig","useConfig","classPrefix","className","help","tips","snakeName","status","successBorder","errorList","successList","layout","verifyStatus","label","labelWidth","labelAlign","requiredMark","requiredMarkPosition","showErrorMessage","innerRules","renderStatus","helpNode","React","createElement","concat","parseTNode","needRequiredMark","filter","rule","required","length","extraNode","useMemo","_errorList$","extra","title","message","formSnakeName","split","join","formItemClass","classNames","_defineProperty","formItemLabelClass","contentClass","controlCls","isSuccess","SUCCESS","includes","ERROR","WARNING","labelStyle","contentStyle","width","marginLeft"],"mappings":"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"}