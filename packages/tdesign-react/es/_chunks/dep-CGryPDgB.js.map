{"version":3,"file":"dep-CGryPDgB.js","sources":["../../../components/Select/utils/helper.ts","../../../components/Select/hooks/usePanelVirtualScroll.ts","../../../components/Select/PopupContent.tsx"],"sourcesContent":["import { ReactElement } from 'react';\nimport { isPlainObject, get } from 'lodash-es';\nimport OptionGroup from '../OptionGroup';\nimport Option from '../Option';\n\nimport {\n  SelectValue,\n  TdOptionProps,\n  SelectKeysType,\n  TdSelectProps,\n  SelectOption,\n} from '../type';\n\ntype SelectLabeledValue = Required<Omit<TdOptionProps, 'disabled'>>;\n\nexport function isSelectOptionGroup(\n  option: SelectOption,\n): option is SelectOptionGroup {\n  return !!option && 'group' in option && 'children' in option;\n}\n\nexport type ValueToOption = {\n  [value: string | number]: TdOptionProps;\n};\n\nfunction setValueToOptionFormOptionDom(\n  dom: ReactElement,\n  valueToOption: ValueToOption,\n  keys: SelectKeysType,\n) {\n  const { value, label, children } = dom.props;\n  // eslint-disable-next-line no-param-reassign\n  valueToOption[value] = {\n    ...dom.props,\n    [keys?.value || 'value']: value,\n    [keys?.label || 'label']: label || children || value,\n  };\n}\n\n// 获取 value => option，用于快速基于 value 找到对应的 option\nexport const getValueToOption = (\n  children: ReactElement,\n  options: SelectOption[],\n  keys: SelectKeysType,\n): ValueToOption => {\n  const valueToOption = {};\n\n  // options 优先级高于 children\n  if (Array.isArray(options)) {\n    options.forEach((option) => {\n      if (isSelectOptionGroup(option)) {\n        option.children?.forEach((child) => {\n          valueToOption[get(child, keys?.value || 'value')] = {\n            ...child,\n            value: get(child, keys?.value || 'value'),\n            label: get(child, keys?.label || 'label'),\n          };\n        });\n      } else {\n        valueToOption[get(option, keys?.value || 'value')] = {\n          ...option,\n          value: get(option, keys?.value || 'value'),\n          label: get(option, keys?.label || 'label'),\n        };\n      }\n    });\n    return valueToOption;\n  }\n\n  if (isPlainObject(children)) {\n    if (children.type === Option) {\n      setValueToOptionFormOptionDom(children, valueToOption, keys);\n      return valueToOption;\n    }\n\n    if (children.type === OptionGroup) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.forEach((item) => {\n          setValueToOptionFormOptionDom(item, valueToOption, keys);\n        });\n        return valueToOption;\n      }\n    }\n  }\n\n  /**\n   * children如果存在ReactElement和map函数混写的情况，会出现嵌套数组\n   */\n  if (Array.isArray(children)) {\n    const handlerElement = (item: ReactElement) => {\n      if (item.type === Option) {\n        setValueToOptionFormOptionDom(item, valueToOption, keys);\n      }\n\n      if (item.type === OptionGroup) {\n        const groupChildren = (item.props as SelectOption).children;\n        if (Array.isArray(groupChildren)) {\n          groupChildren.forEach((groupItem) => {\n            setValueToOptionFormOptionDom(groupItem, valueToOption, keys);\n          });\n        }\n      }\n\n      if (Array.isArray(item)) {\n        item.forEach((child) => {\n          handlerElement(child);\n        });\n      }\n    };\n    children.forEach((item: ReactElement) => handlerElement(item));\n  }\n\n  return valueToOption;\n};\n\n// 获取单选的 label\nexport const getLabel = (\n  children: ReactElement,\n  value: SelectValue<TdOptionProps>,\n  options: TdOptionProps[],\n  keys: SelectKeysType,\n) => {\n  let selectedLabel = '';\n  // 处理带 options 属性的情况\n  if (Array.isArray(options)) {\n    options.some((option) => {\n      if ([get(value, keys?.value || 'value'), value].includes(option.value)) {\n        selectedLabel = option.label;\n        return true;\n      }\n      return false;\n    });\n\n    return selectedLabel;\n  }\n\n  if (isPlainObject(children)) {\n    selectedLabel = children.props.label;\n\n    if (children.type === OptionGroup) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.some((item) => {\n          const selectedValue = isPlainObject(value)\n            ? get(value, 'value')\n            : value;\n          if (isPlainObject(item.props) && item.props.value === selectedValue) {\n            selectedLabel = item.props.label || item.props.children;\n            return true;\n          }\n          return false;\n        });\n      }\n    }\n  }\n\n  if (Array.isArray(children)) {\n    children.some((item: ReactElement) => {\n      // 处理分组\n      if (item.type === OptionGroup) {\n        const groupChildren = item.props.children;\n        if (Array.isArray(groupChildren)) {\n          const isSelected = groupChildren.some((item) => {\n            const selectedValue = isPlainObject(value)\n              ? get(value, 'value')\n              : value;\n            if (\n              isPlainObject(item.props) &&\n              item.props.value === selectedValue\n            ) {\n              selectedLabel = item.props.label || item.props.children;\n              return true;\n            }\n            return false;\n          });\n          return isSelected;\n        }\n      }\n      const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n      if (isPlainObject(item.props) && item.props.value === selectedValue) {\n        selectedLabel = item.props.label || item.props.children;\n        return true;\n      }\n      return false;\n    });\n  }\n\n  return selectedLabel;\n};\n\nexport const getMultipleTags = (\n  values: SelectValue[],\n  keys: SelectKeysType,\n) => {\n  const tags = values.map((item) => ({\n    label: get(item, keys?.label || 'label') || item.toString(),\n    value: get(item, keys?.value || 'value') || item,\n  }));\n  return tags;\n};\n\nexport const getSelectValueArr = (\n  values: SelectValue | SelectValue[],\n  activeValue: SelectValue,\n  selected?: boolean,\n  valueType?: TdSelectProps['valueType'],\n  keys?: SelectKeysType,\n  objVal?: SelectValue,\n) => {\n  // eslint-disable-next-line no-param-reassign\n  values = Array.isArray(values) ? values : [];\n\n  if (Array.isArray(values)) {\n    let currentValues = [...values];\n    const isValueObj = valueType === 'object';\n    if (selected) {\n      currentValues = currentValues.filter((item: SelectLabeledValue) => {\n        if (isValueObj) {\n          if (isPlainObject(activeValue)) {\n            return (\n              get(item, keys?.value || 'value') !==\n              get(activeValue, keys?.value || 'value')\n            );\n          }\n          return get(item, keys?.value || 'value') !== activeValue;\n        }\n        return item !== activeValue;\n      });\n    } else {\n      const item = isValueObj ? objVal : activeValue;\n\n      currentValues.push(item as SelectValue);\n    }\n    return currentValues;\n  }\n};\n\n// 计算onChange事件回调的selectedOptions参数\nexport const getSelectedOptions = (\n  value: SelectValue,\n  multiple: TdSelectProps['multiple'],\n  valueType: TdSelectProps['valueType'],\n  keys: SelectKeysType,\n  valueToOption: ValueToOption,\n  selectedValue?: SelectValue,\n) => {\n  const isObjectType = valueType === 'object';\n  // 当前所有选中的选项\n  let currentSelectedOptions = [];\n  // 当前选中的选项\n  let currentOption: SelectOption;\n  // 全选值\n  let allSelectedValue: Array<SelectValue>;\n  // 所有可选项\n  const tmpPropOptions = Object.values(valueToOption);\n  if (multiple) {\n    currentSelectedOptions = isObjectType\n      ? (value as Array<SelectValue>)\n      : tmpPropOptions?.filter?.((v) =>\n          (value as Array<string | number>).includes?.(\n            v[keys?.value || 'value'],\n          ),\n        );\n\n    allSelectedValue = isObjectType\n      ? currentSelectedOptions\n      : currentSelectedOptions?.map((v) => v[keys?.value || 'value']);\n\n    currentOption = isObjectType\n      ? (value as Array<SelectValue>).find(\n          (v) => v[keys?.value || 'value'] === selectedValue,\n        )\n      : currentSelectedOptions?.find(\n          (option) => option[keys?.value || 'value'] === selectedValue,\n        );\n  } else {\n    currentSelectedOptions = isObjectType\n      ? [value]\n      : tmpPropOptions?.filter?.((v) => value === v[keys?.value || 'value']) ||\n        [];\n    allSelectedValue = currentSelectedOptions;\n    currentOption = isObjectType\n      ? value\n      : currentSelectedOptions?.find(\n          (option) => option[keys?.value || 'value'] === selectedValue,\n        );\n  }\n\n  return { currentSelectedOptions, currentOption, allSelectedValue };\n};\n","import {\n  useEffect,\n  useMemo,\n  MutableRefObject,\n  useCallback,\n  CSSProperties,\n} from 'react';\nimport useVirtualScroll from '../../hooks/useVirtualScroll';\nimport { TdSelectProps } from '../type';\nimport { TScroll, SizeEnum } from '../../common';\n\ninterface PanelVirtualScroll {\n  scroll?: TdSelectProps['scroll'];\n  popupContentRef: MutableRefObject<HTMLDivElement>;\n  options: TdSelectProps['options'];\n  size: SizeEnum;\n}\n\nconst usePanelVirtualScroll = ({\n  popupContentRef,\n  scroll,\n  options,\n  size,\n}: PanelVirtualScroll) => {\n  const scrollThreshold = scroll?.threshold || 100;\n  const scrollType = scroll?.type;\n\n  const isVirtual = useMemo<boolean>(\n    () => scrollType === 'virtual' && options?.length > scrollThreshold,\n    [scrollType, scrollThreshold, options],\n  );\n\n  const scrollParams = useMemo<TScroll>(() => {\n    const heightMap = {\n      small: 20,\n      medium: 28,\n      large: 36,\n    };\n    const rowHeight = heightMap[size] || 28;\n    return {\n      type: 'virtual',\n      isFixedRowHeight: scroll?.isFixedRowHeight || false,\n      rowHeight: scroll?.rowHeight || rowHeight,\n      bufferSize: scroll?.bufferSize || 20,\n      threshold: scrollThreshold,\n    };\n  }, [scroll, scrollThreshold, size]);\n\n  const {\n    visibleData = null,\n    handleScroll: handleVirtualScroll = null,\n    scrollHeight = null,\n    translateY = null,\n    handleRowMounted = null,\n  } = useVirtualScroll(popupContentRef, {\n    data: options || [],\n    scroll: scrollParams,\n  });\n\n  let lastScrollY = -1;\n\n  const onInnerVirtualScroll = useCallback((e: WheelEvent) => {\n    if (!isVirtual) {\n      return;\n    }\n    const target = e.target as HTMLElement;\n    const top = target.scrollTop;\n    // 排除横向滚动触发的纵向虚拟滚动计算\n    if (Math.abs(lastScrollY - top) > 5) {\n      handleVirtualScroll();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      lastScrollY = top;\n    } else {\n      lastScrollY = -1;\n    }\n  }, []);\n\n  // 监听popup滚动 处理虚拟滚动时的virtualData变化\n  useEffect(() => {\n    const popupContentDom = popupContentRef?.current;\n    if (isVirtual) {\n      popupContentDom?.addEventListener?.('scroll', onInnerVirtualScroll);\n    }\n    return () => {\n      // 卸载时取消监听\n      if (isVirtual) {\n        popupContentDom?.removeEventListener?.('scroll', onInnerVirtualScroll);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isVirtual, onInnerVirtualScroll, popupContentRef.current]);\n\n  const cursorStyle = {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    transition: 'transform 0.2s',\n    transform: `translate(0, ${scrollHeight}px)`,\n    MsTransform: `translate(0, ${scrollHeight}px)`,\n    MozTransform: `translate(0, ${scrollHeight}px)`,\n    WebkitTransform: `translate(0, ${scrollHeight}px)`,\n  } as CSSProperties;\n\n  const panelStyle = {\n    transform: `translate(0, ${translateY}px)`,\n    MsTransform: `translate(0, ${translateY}px)`,\n    MozTransform: `translate(0, ${translateY}px)`,\n    WebkitTransform: `translate(0, ${translateY}px)`,\n  } as CSSProperties;\n\n  return {\n    scrollHeight,\n    translateY,\n    visibleData,\n    handleRowMounted,\n    isVirtual,\n    cursorStyle,\n    panelStyle,\n  };\n};\n\nexport default usePanelVirtualScroll;\n","import React, {\n  Children,\n  isValidElement,\n  cloneElement,\n  useRef,\n  CSSProperties,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames';\nimport { isEqual } from 'lodash-es';\nimport { getSelectValueArr } from './utils/helper';\nimport {\n  TdSelectProps,\n  SelectValue,\n  TdOptionProps,\n  SelectValueChangeTrigger,\n  SelectOption,\n  SelectOptionGroup,\n} from './type';\nimport useConfig from '../hooks/useConfig';\nimport usePanelVirtualScroll from './hooks/usePanelVirtualScroll';\nimport Option, { SelectOptionProps } from './Option';\nimport OptionGroup from './OptionGroup';\n\ninterface SelectPopupProps\n  extends Pick<\n    TdSelectProps,\n    | 'value'\n    | 'size'\n    | 'multiple'\n    | 'empty'\n    | 'options'\n    | 'max'\n    | 'loadingText'\n    | 'loading'\n    | 'valueType'\n    | 'keys'\n    | 'panelTopContent'\n    | 'panelBottomContent'\n    | 'scroll'\n  > {\n  onChange?: (\n    value: SelectValue,\n    context?: {\n      label?: string | number;\n      value?: SelectValue;\n      restData?: Record<string, any>;\n      e: React.MouseEvent<HTMLLIElement>;\n      trigger: SelectValueChangeTrigger;\n    },\n  ) => void;\n  /**\n   * 是否展示popup\n   */\n  showPopup: boolean;\n  /**\n   * 控制popup展示的函数\n   */\n  setShowPopup: (show: boolean) => void;\n  children?: React.ReactNode;\n  onCheckAllChange?: (\n    checkAll: boolean,\n    e: React.MouseEvent<HTMLLIElement>,\n  ) => void;\n  getPopupInstance?: () => HTMLDivElement;\n}\n\nconst PopupContent = React.forwardRef<HTMLDivElement, SelectPopupProps>(\n  (props, ref) => {\n    const {\n      value,\n      size,\n      max,\n      multiple,\n      showPopup,\n      setShowPopup,\n      empty,\n      loadingText,\n      loading,\n      valueType,\n      children,\n      keys,\n      panelTopContent,\n      panelBottomContent,\n      onChange,\n      onCheckAllChange,\n      getPopupInstance,\n      options: propsOptions,\n      scroll: propsScroll,\n    } = props;\n\n    // 国际化文本初始化\n    // const [local, t] = useLocaleReceiver('select');\n    // const emptyText = t(local.empty);\n    const popupContentRef = useRef<HTMLDivElement>(null);\n\n    popupContentRef.current = getPopupInstance();\n\n    const {\n      visibleData,\n      handleRowMounted,\n      isVirtual,\n      panelStyle,\n      cursorStyle,\n    } = usePanelVirtualScroll({\n      popupContentRef,\n      scroll: propsScroll,\n      options: propsOptions,\n      size,\n    });\n\n    // 全部可选选项\n    const selectableOptions = useMemo(() => {\n      const uniqueOptions = {};\n      propsOptions?.forEach((option: SelectOption) => {\n        if ((option as SelectOptionGroup).group) {\n          (option as SelectOptionGroup).children.forEach((item) => {\n            if (!item.disabled && !item.checkAll) {\n              uniqueOptions[item.value] = item;\n            }\n          });\n        } else if (\n          !(option as TdOptionProps).disabled &&\n          !(option as TdOptionProps).checkAll\n        ) {\n          uniqueOptions[(option as TdOptionProps).value] = option;\n        }\n      });\n      return Object.values(uniqueOptions);\n    }, [propsOptions]);\n\n    const { classPrefix } = useConfig();\n    if (!children && !propsOptions) {\n      return null;\n    }\n\n    const onSelect: SelectOptionProps['onSelect'] = (\n      selectedValue,\n      { label, selected, event, restData },\n    ) => {\n      const isValObj = valueType === 'object';\n      let objVal = {};\n      if (isValObj) {\n        objVal = { ...restData };\n        if (!keys?.label) {\n          Object.assign(objVal, { label });\n        }\n        if (!keys?.value) {\n          Object.assign(objVal, { value: selectedValue });\n        }\n      }\n\n      if (!Object.keys(objVal).length) {\n        Object.assign(objVal, {\n          [keys?.label || 'label']: label,\n          [keys?.value || 'value']: selectedValue,\n        });\n      }\n\n      if (multiple) {\n        // calc multiple select values\n        const values = getSelectValueArr(\n          value,\n          selectedValue,\n          selected,\n          valueType,\n          keys,\n          objVal,\n        );\n        onChange(values, {\n          label,\n          value: selectedValue,\n          e: event,\n          trigger: selected ? 'uncheck' : 'check',\n        });\n      } else {\n        // calc single select value\n        const selectVal = valueType === 'object' ? objVal : selectedValue;\n\n        if (!isEqual(value, selectVal)) {\n          onChange(selectVal, {\n            label,\n            value: selectVal,\n            e: event,\n            trigger: 'check',\n          });\n        }\n        setShowPopup(!showPopup);\n      }\n    };\n\n    const childrenWithProps = Children.map(children, (child) => {\n      if (isValidElement(child)) {\n        const addedProps = {\n          size,\n          max,\n          multiple,\n          selectedValue: value,\n          onSelect,\n        };\n        return cloneElement(child, { ...addedProps });\n      }\n      return child;\n    });\n\n    // 渲染 options\n    const renderOptions = (options: SelectOption[]) => {\n      if (options) {\n        // 通过 options API配置的\n        return (\n          <ul className={`${classPrefix}-select__list`}>\n            {options.map((item, index) => {\n              const { group, divider, ...rest } = item as SelectOptionGroup;\n              if (group) {\n                return (\n                  <OptionGroup label={group} divider={divider} key={index}>\n                    {renderOptions(rest.children)}\n                  </OptionGroup>\n                );\n              }\n\n              const {\n                value: optionValue,\n                label,\n                disabled,\n                content,\n                children,\n                ...restData\n              } = item as TdOptionProps;\n              return (\n                <Option\n                  key={index}\n                  max={max}\n                  label={label}\n                  value={optionValue}\n                  onSelect={onSelect}\n                  selectedValue={value}\n                  optionLength={selectableOptions.length}\n                  multiple={multiple}\n                  size={size}\n                  disabled={disabled}\n                  restData={restData}\n                  keys={keys}\n                  content={content}\n                  onCheckAllChange={onCheckAllChange}\n                  onRowMounted={handleRowMounted}\n                  {...(isVirtual\n                    ? {\n                      isVirtual,\n                      bufferSize: propsScroll?.bufferSize,\n                      scrollType: propsScroll?.type,\n                    }\n                    : {})}\n                  {...restData}\n                >\n                  {children}\n                </Option>\n              );\n            })}\n          </ul>\n        );\n      }\n      return (\n        <ul className={`${classPrefix}-select__list`}>{childrenWithProps}</ul>\n      );\n    };\n\n    const isEmpty =\n      (Array.isArray(childrenWithProps) && !childrenWithProps.length) ||\n      (propsOptions && propsOptions.length === 0);\n\n    const renderPanel = (\n      renderedOptions: SelectOption[],\n      extraStyle?: CSSProperties,\n    ) => (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-select__dropdown-inner`, {\n          [`${classPrefix}-select__dropdown-inner--size-s`]: size === 'small',\n          [`${classPrefix}-select__dropdown-inner--size-l`]: size === 'large',\n          [`${classPrefix}-select__dropdown-inner--size-m`]: size === 'medium',\n        })}\n        style={extraStyle}\n      >\n        {loading && (\n          <div className={`${classPrefix}-select__loading-tips`}>\n            {loadingText}\n          </div>\n        )}\n        {!loading && isEmpty && (\n          <div className={`${classPrefix}-select__empty`}>{empty}</div>\n        )}\n        {!loading && !isEmpty && renderOptions(renderedOptions)}\n      </div>\n    );\n    if (isVirtual) {\n      return (\n        <>\n          {panelTopContent}\n          <div>\n            <div style={cursorStyle}></div>\n            {renderPanel(visibleData, panelStyle)}\n          </div>\n          {panelBottomContent}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {panelTopContent}\n        {renderPanel(propsOptions)}\n        {panelBottomContent}\n      </>\n    );\n  },\n);\n\nexport default PopupContent;\n"],"names":["isSelectOptionGroup","option","setValueToOptionFormOptionDom","dom","valueToOption","keys","_dom$props","props","value","label","children","_objectSpread","_defineProperty","getValueToOption","options","Array","isArray","forEach","_option$children","child","get","isPlainObject","type","Option","OptionGroup","groupChildren","item","handlerElement","groupItem","getLabel","selectedLabel","some","includes","selectedValue","isSelected","getMultipleTags","values","tags","map","toString","getSelectValueArr","activeValue","selected","valueType","objVal","currentValues","_toConsumableArray","isValueObj","filter","push","getSelectedOptions","multiple","isObjectType","currentSelectedOptions","currentOption","allSelectedValue","tmpPropOptions","Object","_tmpPropOptions$filte","_currentSelectedOptio","_currentSelectedOptio2","call","v","_value$includes","find","_tmpPropOptions$filte2","_currentSelectedOptio3","usePanelVirtualScroll","popupContentRef","_ref","scroll","size","scrollThreshold","threshold","scrollType","isVirtual","useMemo","length","scrollParams","heightMap","small","medium","large","rowHeight","isFixedRowHeight","bufferSize","_useVirtualScroll","useVirtualScroll","data","_useVirtualScroll$vis","visibleData","_useVirtualScroll$han","handleScroll","handleVirtualScroll","_useVirtualScroll$scr","scrollHeight","_useVirtualScroll$tra","translateY","_useVirtualScroll$han2","handleRowMounted","lastScrollY","onInnerVirtualScroll","useCallback","e","target","top","scrollTop","Math","abs","useEffect","popupContentDom","current","_popupContentDom$addE","addEventListener","_popupContentDom$remo","removeEventListener","cursorStyle","position","width","height","transition","transform","concat","MsTransform","MozTransform","WebkitTransform","panelStyle","PopupContent","React","forwardRef","ref","max","showPopup","setShowPopup","empty","loadingText","loading","panelTopContent","panelBottomContent","onChange","onCheckAllChange","getPopupInstance","propsOptions","propsScroll","useRef","_usePanelVirtualScrol","selectableOptions","uniqueOptions","group","disabled","checkAll","_useConfig","useConfig","classPrefix","onSelect","event","restData","isValObj","assign","trigger","selectVal","isEqual","childrenWithProps","Children","isValidElement","addedProps","cloneElement","renderOptions","createElement","className","index","divider","rest","_excluded","key","optionValue","content","_objectWithoutProperties","_excluded2","optionLength","onRowMounted","isEmpty","renderPanel","renderedOptions","extraStyle","classNames","style","Fragment"],"mappings":"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"}