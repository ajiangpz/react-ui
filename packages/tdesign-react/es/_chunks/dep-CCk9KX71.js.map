{"version":3,"file":"dep-CCk9KX71.js","sources":["../../../components/input/defaultProps.ts","../../../components/input/Input.tsx","../../../components/input/InputGroup.tsx","../../../components/input/index.ts"],"sourcesContent":["export const inputDefaultProps = {\n  align: 'left',\n  allowInputOverMax: false,\n  autoWidth: false,\n  autocomplete: undefined,\n  autofocus: false,\n  borderless: false,\n  // 是否允许输入，默认是 true，表示组件内部的 input 元素允许输入；readonly 为 true 时，此值失效\n  allowInput: true,\n  // 是否可清空，值为 true 时，输入框后会有一个清空按钮，点击后清空输入框；readonly 为 true 时，此值失效\n  clearable: false,\n  placeholder: undefined,\n  // 是否只读，在只读模式下，输入框不能输入，且没有清除按钮，优先级高于 allowInput、clearable\n  readonly: false,\n  showClearIconOnEmpty: false,\n  showLimitNumber: false,\n  size: 'medium',\n  spellCheck: false,\n  status: 'default',\n  type: 'text',\n  defaultValue: '',\n};\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react';\nimport classNames from 'classnames';\nimport { Eye, EyeOff, XCircle } from 'lucide-react';\nimport { TdInputProps } from './type';\nimport useLayoutEffect from '../hooks/useLayoutEffect';\nimport useControlled from '../hooks/useControlled';\nimport { inputDefaultProps } from './defaultProps';\nimport parseTNode from '../utils/parseTNode';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { StyledProps, TNode, TElement } from '../common';\nimport { isFunction } from 'lodash-es';\nimport useConfig from '../hooks/useConfig';\nexport interface InputProps extends TdInputProps, StyledProps {\n  showInput?: boolean; // 控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n  keepWrapperWidth?: boolean; // 控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n}\n\nexport interface InputRef extends React.RefObject<unknown> {\n  currentElement: HTMLDivElement;\n  inputElement: HTMLInputElement;\n  focus: () => void;\n  blur: () => void;\n  select: () => void;\n}\n\ntype InputContextTrigger = 'input' | 'clear' | 'initial';\n\nconst renderIcon = (\n  classPrefix: string,\n  type: 'prefix' | 'suffix',\n  icon: TNode | TElement,\n) => {\n  const result = parseTNode(icon);\n\n  const iconClassName = icon ? `${classPrefix}-input__${type}-icon` : '';\n\n  return result ? (\n    <span className={`${classPrefix}-input__${type} ${iconClassName}`}>\n      {result}\n    </span>\n  ) : null;\n};\n\nconst Input = forwardRef<HTMLInputElement, InputProps>((originalProps, ref) => {\n  const props = useDefaultProps<InputProps>(originalProps, inputDefaultProps);\n  const { classPrefix } = useConfig();\n\n  const {\n    type,\n    autoWidth,\n    borderless,\n    placeholder = '请输入内容',\n    disabled,\n    status,\n    size,\n    className,\n    inputClass,\n    style,\n    prefixIcon,\n    suffixIcon,\n    clearable,\n    tips,\n    align,\n    maxlength,\n    maxcharacter,\n    showClearIconOnEmpty,\n    autofocus,\n    autocomplete,\n    readonly,\n    label,\n    suffix,\n    showInput = true,\n    keepWrapperWidth,\n    showLimitNumber,\n    allowInput,\n    allowInputOverMax,\n    name,\n    format,\n    onClick,\n    onClear,\n    onEnter,\n    onKeydown,\n    onKeyup,\n    onKeypress,\n    onFocus,\n    onBlur,\n    onPaste,\n    onMouseenter,\n    onMouseleave,\n    onWheel,\n    onCompositionstart,\n    onCompositionend,\n    onValidate,\n    onChange: onChangeFromProps,\n    ...restProps\n  } = props;\n  const composingRef = useRef(false);\n  const [value, onChange] = useControlled(props, 'value', onChangeFromProps);\n  const inputRef: React.RefObject<HTMLInputElement | null> = useRef(null);\n  const inputPreRef: React.RefObject<HTMLInputElement | null> = useRef(null);\n  const wrapperRef: React.RefObject<HTMLDivElement | null> = useRef(null);\n\n  const [isHover, toggleIsHover] = useState(false);\n  const [isFocused, toggleIsFocused] = useState(false);\n  const [renderType, setRenderType] = useState(type);\n\n  const [composingValue, setComposingValue] = useState<string>('');\n  const isInnerInputReadonly = readonly || !allowInput;\n  const isValueEnabled = value && !disabled;\n  const isShowClearIcon =\n    ((clearable && isValueEnabled) || showClearIconOnEmpty) && isHover;\n  let suffixIconNew = suffixIcon;\n  if (isShowClearIcon)\n    suffixIconNew = (\n      <XCircle\n        className={`${classPrefix}-input__suffix-clear ${classPrefix}-icon`}\n        onMouseDown={handleMouseDown}\n        onClick={handleClear}\n        absoluteStrokeWidth={true}\n      />\n    );\n\n  if (type === 'password' && typeof suffixIcon === 'undefined') {\n    if (renderType === 'password') {\n      suffixIconNew = (\n        <EyeOff\n          className={`${classPrefix}-input__suffix-clear ${classPrefix}-icon`}\n          onClick={togglePasswordVisible}\n        />\n      );\n    } else if (renderType === 'text') {\n      suffixIconNew = (\n        <Eye\n          className={`${classPrefix}-input__suffix-clear ${classPrefix}-icon`}\n          onClick={togglePasswordVisible}\n        />\n      );\n    }\n  }\n  const prefixIconContent = renderIcon('t', 'prefix', parseTNode(prefixIcon));\n  const suffixIconContent = renderIcon(\n    't',\n    'suffix',\n    parseTNode(suffixIconNew),\n  );\n  const labelContent = isFunction(label) ? label() : label;\n  const suffixContent = isFunction(suffix) ? suffix() : suffix;\n\n  const updateInputWidth = () => {\n    if (!autoWidth || !inputRef.current) return;\n    const { offsetWidth } = inputPreRef.current as HTMLInputElement;\n    const { width } = inputPreRef.current?.getBoundingClientRect() as DOMRect;\n    // 异步渲染场景下 getBoundingClientRect 宽度为 0，需要使用 offsetWidth\n    const calcWidth = width < offsetWidth ? offsetWidth + 1 : width;\n    inputRef.current.style.width = `${calcWidth}px`;\n  };\n\n  useLayoutEffect(() => {\n    // 推迟到下一帧处理防止异步渲染 input 场景宽度计算为 0\n    requestAnimationFrame(() => {\n      updateInputWidth();\n    });\n    // eslint-disable-next-line\n  }, [autoWidth, value, placeholder, inputRef, composingValue]);\n\n  // 当元素默认为 display: none 状态，无法提前准确计算宽度，因此需要监听元素宽度变化。比如：Tabs 场景切换。\n  useEffect(() => {\n    let resizeObserver: ResizeObserver = null as any;\n    // IE 11 以下使用设置 minWidth 兼容；IE 11 以上使用 ResizeObserver\n    if (typeof window.ResizeObserver === 'undefined' || !inputRef.current)\n      return;\n    resizeObserver = new window.ResizeObserver(() => {\n      updateInputWidth();\n    });\n    resizeObserver.observe(inputRef.current);\n    return () => {\n      // resizeObserver.unobserve?.(inputRef.current);\n      resizeObserver.disconnect?.();\n      resizeObserver = null as any;\n    };\n    // eslint-disable-next-line\n  }, [inputRef]);\n\n  useEffect(() => {\n    setRenderType(type);\n  }, [type]);\n\n  const innerValue = composingRef.current ? composingValue : (value ?? '');\n  const formatDisplayValue =\n    format && !isFocused ? format(innerValue) : innerValue;\n\n  const renderInput = (\n    <input\n      ref={inputRef}\n      placeholder={placeholder}\n      type={renderType}\n      className={classNames(`${classPrefix}-input__inner`, {\n        [`${classPrefix}-input--soft-hidden`]: !showInput,\n      })}\n      value={formatDisplayValue}\n      readOnly={isInnerInputReadonly}\n      disabled={disabled}\n      autoComplete={autocomplete}\n      autoFocus={autofocus}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      onKeyPress={handleKeyPress}\n      onCompositionStart={handleCompositionStart}\n      onCompositionEnd={handleCompositionEnd}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onPaste={handlePaste}\n      name={name}\n    />\n  );\n  const renderInputNode = (\n    <div\n      className={classNames(inputClass, `${classPrefix}-input`, {\n        [`${classPrefix}-is-readonly`]: readonly,\n        [`${classPrefix}-is-disabled`]: disabled,\n        [`${classPrefix}-is-focused`]: isFocused,\n        [`${classPrefix}-size-s`]: size === 'small',\n        [`${classPrefix}-size-l`]: size === 'large',\n        [`${classPrefix}-align-${align}`]: align,\n        [`${classPrefix}-inpu${classPrefix}--prefix`]:\n          prefixIcon || labelContent,\n        [`${classPrefix}-inpu${classPrefix}--suffix`]:\n          suffixIconContent || suffixContent,\n        [`${classPrefix}-inpu${classPrefix}--borderless`]: borderless,\n        [`${classPrefix}-input--focused`]: isFocused,\n      })}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onWheel={(e) => onWheel?.({ e })}\n      onClick={(e) => {\n        inputRef.current?.focus();\n        onClick?.({ e });\n      }}\n    >\n      {prefixIconContent}\n      {labelContent ? (\n        <div className={`${classPrefix}-input__prefix`}>{labelContent}</div>\n      ) : null}\n      {renderInput}\n      {autoWidth && (\n        <span\n          ref={inputPreRef}\n          className={`${classPrefix}-input__inpu${classPrefix}-pre`}\n        >\n          {innerValue || placeholder}\n        </span>\n      )}\n      {suffixContent ? (\n        <div className={`${classPrefix}-input__suffix`}>{suffixContent}</div>\n      ) : null}\n      {suffixIconContent}\n    </div>\n  );\n  useLayoutEffect(() => {\n    // 推迟到下一帧处理防止异步渲染 input 场景宽度计算为 0\n    requestAnimationFrame(() => {\n      updateInputWidth();\n    });\n    // eslint-disable-next-line\n  }, [autoWidth, value, placeholder, inputRef, composingValue]);\n\n  function togglePasswordVisible() {\n    if (disabled) return;\n    // 保存光标位置\n    const inputEl = inputRef.current;\n    const cursorPosition = inputRef.current?.selectionStart || 0;\n\n    const toggleType = renderType === 'password' ? 'text' : 'password';\n    setRenderType(toggleType);\n\n    requestAnimationFrame(() => {\n      inputEl?.setSelectionRange(cursorPosition, cursorPosition);\n    });\n  }\n\n  function handleChange(\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.CompositionEvent<HTMLInputElement>,\n    trigger: InputContextTrigger = 'input',\n  ) {\n    let { value: newStr } = e.currentTarget;\n    if (composingRef.current) {\n      setComposingValue(newStr);\n    } else {\n      // 完成中文输入时同步一次 composingValue\n      setComposingValue(newStr);\n      onChange(newStr, { e, trigger });\n    }\n  }\n\n  // 添加MouseDown阻止冒泡，防止點擊Clear value會導致彈窗閃爍一下\n  // https://github.com/Tencent/tdesign-react/issues/2320\n  function handleMouseDown(\n    e: React.MouseEvent<SVGSVGElement, globalThis.MouseEvent>,\n  ) {\n    e.stopPropagation();\n    // 兼容React16\n    e.nativeEvent.stopImmediatePropagation();\n  }\n\n  function handleClear(e: React.MouseEvent<SVGSVGElement>) {\n    onChange?.('', { e, trigger: 'clear' });\n    onClear?.({ e });\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    const {\n      key,\n      currentTarget: { value },\n    } = e;\n    key === 'Enter' && onEnter?.(value, { e });\n    onKeydown?.(value, { e });\n  }\n\n  function handleKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n    const {\n      currentTarget: { value },\n    } = e;\n    onKeyup?.(value, { e });\n  }\n\n  function handleKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n    const {\n      currentTarget: { value },\n    } = e;\n    onKeypress?.(value, { e });\n  }\n\n  function handleCompositionStart(e: React.CompositionEvent<HTMLInputElement>) {\n    composingRef.current = true;\n    const {\n      currentTarget: { value },\n    } = e;\n    onCompositionstart?.(value, { e });\n  }\n\n  function handleCompositionEnd(e: React.CompositionEvent<HTMLInputElement>) {\n    const {\n      currentTarget: { value },\n    } = e;\n    if (composingRef.current) {\n      composingRef.current = false;\n      handleChange(e);\n    }\n    onCompositionend?.(value, { e });\n  }\n\n  function handleFocus(e: React.FocusEvent<HTMLInputElement>) {\n    if (isInnerInputReadonly) return;\n    const {\n      currentTarget: { value },\n    } = e;\n    onFocus?.(value, { e });\n    toggleIsFocused(true);\n  }\n\n  function handleBlur(e: React.FocusEvent<HTMLInputElement>) {\n    if (isInnerInputReadonly) return;\n    const {\n      currentTarget: { value },\n    } = e;\n    onBlur?.(value, { e });\n    toggleIsFocused(false);\n  }\n\n  function handlePaste(e: React.ClipboardEvent<HTMLInputElement>) {\n    const clipData = e.clipboardData;\n    const pasteValue = clipData?.getData('text/plain');\n    onPaste?.({ e, pasteValue });\n  }\n\n  function handleMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n    !readonly && toggleIsHover(true);\n    onMouseenter?.({ e });\n  }\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    !readonly && toggleIsHover(false);\n    onMouseleave?.({ e });\n  }\n\n  useImperativeHandle(ref as InputRef, () => ({\n    currentElement: wrapperRef.current,\n    inputElement: inputRef.current,\n    focus: () => inputRef.current?.focus(),\n    blur: () => inputRef.current?.blur(),\n    select: () => inputRef.current?.select(),\n  }));\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={style}\n      className={classNames(`${classPrefix}-input__wrap`, className, {\n        [`${classPrefix}-input--auto-width`]: autoWidth && !keepWrapperWidth,\n      })}\n      {...restProps}\n    >\n      {renderInputNode}\n      {tips && (\n        <div className={classNames(`${classPrefix}-input__tips`)}>{tips}</div>\n      )}\n    </div>\n  );\n});\nInput.displayName = 'Input';\nexport default Input;\n","import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\n\nexport interface InputGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * 是否拆分\n   * @default false\n   */\n  separate?: boolean;\n}\n\nconst InputGroup = forwardRef<HTMLDivElement, InputGroupProps>((props, ref) => {\n  const { separate, children, className, ...wrapperProps } = props;\n  return (\n    <div\n      ref={ref}\n      className={classNames(`t-input-group`, className, {\n        [`t-input-group--separate`]: separate,\n      })}\n      {...wrapperProps}\n    >\n      {children}\n    </div>\n  );\n});\n\nInputGroup.displayName = 'InputGroup';\n\nexport default InputGroup;\n","import _Input from './Input';\nimport _InputGroup from './InputGroup';\nimport './style/index.js';\n\nexport type { InputProps, InputRef } from './Input';\n\nexport * from './type';\n\nexport const Input = _Input;\nexport const InputGroup = _InputGroup;\nexport default Input;\n"],"names":["inputDefaultProps","align","allowInputOverMax","autoWidth","autocomplete","autofocus","borderless","allowInput","clearable","placeholder","readonly","showClearIconOnEmpty","showLimitNumber","size","spellCheck","status","type","defaultValue","renderIcon","classPrefix","icon","result","parseTNode","iconClassName","concat","React","createElement","className","Input","forwardRef","originalProps","ref","props","useDefaultProps","_useConfig","useConfig","_props$placeholder","disabled","inputClass","style","prefixIcon","suffixIcon","tips","maxlength","maxcharacter","label","suffix","_props$showInput","showInput","keepWrapperWidth","name","format","onClick","onClear","onEnter","onKeydown","onKeyup","onKeypress","onFocus","onBlur","onPaste","onMouseenter","onMouseleave","onWheel","onCompositionstart","onCompositionend","onValidate","onChangeFromProps","onChange","restProps","_objectWithoutProperties","_excluded","composingRef","useRef","_useControlled","useControlled","_useControlled2","_slicedToArray","value","inputRef","inputPreRef","wrapperRef","_useState","useState","_useState2","isHover","toggleIsHover","_useState3","_useState4","isFocused","toggleIsFocused","_useState5","_useState6","renderType","setRenderType","_useState7","_useState8","composingValue","setComposingValue","isInnerInputReadonly","isValueEnabled","isShowClearIcon","suffixIconNew","XCircle","onMouseDown","handleMouseDown","handleClear","absoluteStrokeWidth","EyeOff","togglePasswordVisible","Eye","prefixIconContent","suffixIconContent","labelContent","isFunction","suffixContent","updateInputWidth","_inputPreRef$current","current","offsetWidth","_inputPreRef$current$","getBoundingClientRect","width","calcWidth","useLayoutEffect","requestAnimationFrame","useEffect","resizeObserver","window","ResizeObserver","observe","_resizeObserver$disco","_resizeObserver","disconnect","call","innerValue","formatDisplayValue","renderInput","classNames","_defineProperty","readOnly","autoComplete","autoFocus","handleChange","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","onKeyPress","handleKeyPress","onCompositionStart","handleCompositionStart","onCompositionEnd","handleCompositionEnd","handleFocus","handleBlur","handlePaste","renderInputNode","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","e","_inputRef$current","focus","_inputRef$current2","inputEl","cursorPosition","selectionStart","toggleType","setSelectionRange","trigger","arguments","length","undefined","newStr","currentTarget","stopPropagation","nativeEvent","stopImmediatePropagation","key","clipData","clipboardData","pasteValue","getData","useImperativeHandle","currentElement","inputElement","_inputRef$current3","blur","_inputRef$current4","select","_inputRef$current5","_objectSpread","displayName","InputGroup","separate","children","wrapperProps","_Input","_InputGroup"],"mappings":"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"}