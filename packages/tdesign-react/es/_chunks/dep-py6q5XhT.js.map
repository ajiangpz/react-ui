{"version":3,"file":"dep-py6q5XhT.js","sources":["../../../components/hooks/useDomRefCallback.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\n// https://reactjs.org/docs/hooks-faq.html#how-can-i-measure-a-dom-node\nexport default function useDomRefCallback(): [\n  HTMLElement,\n  React.Dispatch<React.SetStateAction<HTMLElement>>,\n] {\n  const [refCurrent, setRefCurrent] = useState<HTMLElement>();\n\n  useCallback((dom: HTMLElement) => {\n    if (dom) setRefCurrent(dom);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [refCurrent, setRefCurrent];\n}\n"],"names":["useDomRefCallback","_useState","useState","_useState2","_slicedToArray","refCurrent","setRefCurrent","useCallback","dom"],"mappings":";;;AAGA,SAAwBA,iBAAAA,GAGtB;AACA,EAAA,IAAAC,SAAA,GAAoCC,qBAAA,EAAsB;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAAnDI,IAAAA,UAAA,GAAAF,UAAA,CAAA,CAAA,CAAA;AAAYG,IAAAA,aAAa,GAAAH,UAAA,CAAA,CAAA,CAAA;EAEhCI,wBAAA,CAAY,UAACC,GAAA,EAAqB;AAChC,IAAA,IAAIA,GAAA,gBAAmBA,GAAG,CAAA;EAG5B,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO,CAACH,YAAYC,aAAa,CAAA;AACnC;;;;"}