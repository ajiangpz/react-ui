{"version":3,"file":"dep-Bj9PpzCF.js","sources":["../../../components/Select/defaultProps.ts","../../../components/Select/OptionGroup.tsx"],"sourcesContent":["import { TdSelectProps, TdOptionProps, TdOptionGroupProps } from './type';\n\nexport const selectDefaultProps: TdSelectProps = {\n  autoWidth: false,\n  autofocus: false,\n  borderless: false,\n  clearable: false,\n  creatable: false,\n  loading: false,\n  max: 0,\n  minCollapsedNum: 0,\n  multiple: false,\n  placeholder: undefined,\n  readonly: false,\n  reserveKeyword: false,\n  showArrow: true,\n  size: 'medium',\n  status: 'default',\n  valueType: 'value',\n};\n\nexport const optionDefaultProps: TdOptionProps = {\n  checkAll: false,\n  disabled: false,\n};\n\nexport const optionGroupDefaultProps: TdOptionGroupProps = { divider: true };\n","import React from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../hooks/useConfig';\n\nimport { TdOptionGroupProps } from './type';\nimport { optionGroupDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface SelectGOptionGroupProps extends TdOptionGroupProps {\n  children?: React.ReactNode;\n}\n\nconst OptionGroup: React.FC<SelectGOptionGroupProps> = (props) => {\n  const { children, label, divider } = useDefaultProps<SelectGOptionGroupProps>(\n    props,\n    optionGroupDefaultProps,\n  );\n\n  const { classPrefix } = useConfig();\n\n  return (\n    <li\n      className={classNames(`${classPrefix}-select-option-group`, {\n        [`${classPrefix}-select-option-group__divider`]: divider,\n      })}\n    >\n      {(label ?? false) && (\n        <div className={`${classPrefix}-select-option-group__header`}>\n          {label}\n        </div>\n      )}\n      {children}\n    </li>\n  );\n  return;\n};\n\nexport default OptionGroup;\n"],"names":["selectDefaultProps","autoWidth","autofocus","borderless","clearable","creatable","loading","max","minCollapsedNum","multiple","placeholder","readonly","reserveKeyword","showArrow","size","status","valueType","optionDefaultProps","checkAll","disabled","optionGroupDefaultProps","divider","OptionGroup","props","_useDefaultProps","useDefaultProps","children","label","_useConfig","useConfig","classPrefix","React","createElement","className","classNames","concat","_defineProperty"],"mappings":";;;;;;AAEO,IAAMA,kBAAA,GAAoC;AAC/CC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,UAAA,EAAY,KAAA;AACZC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,OAAA,EAAS,KAAA;AACTC,EAAAA,GAAA,EAAK,CAAA;AACLC,EAAAA,eAAA,EAAiB,CAAA;AACjBC,EAAAA,QAAA,EAAU,KAAA;EACVC,WAAA,EAAa,KAAA,CAAA;AACbC,EAAAA,QAAA,EAAU,KAAA;AACVC,EAAAA,cAAA,EAAgB,KAAA;AAChBC,EAAAA,SAAA,EAAW,IAAA;AACXC,EAAAA,IAAA,EAAM,QAAA;AACNC,EAAAA,MAAA,EAAQ,SAAA;AACRC,EAAAA,SAAA,EAAW;AACb;AAEO,IAAMC,kBAAA,GAAoC;AAC/CC,EAAAA,QAAA,EAAU,KAAA;AACVC,EAAAA,QAAA,EAAU;AACZ,CAAA;AAEO,IAAMC,uBAAA,GAA8C;AAAEC,EAAAA,OAAA,EAAS;AAAK,CAAA;;ACd3E,IAAMC,WAAA,GAAiD,SAAjDA,WAAAA,CAAkDC,KAAA,EAAU;AAChE,EAAA,IAAAC,gBAAA,GAAqCC,eAAA,CACnCF,KAAA,EACAH,uBACF,CAAA;IAHQM,QAAA,GAAAF,gBAAA,CAAAE,QAAA;IAAUC,KAAA,GAAAH,gBAAA,CAAAG,KAAA;IAAON,OAAA,GAAAG,gBAAA,CAAAH,OAAA;AAKzB,EAAA,IAAAO,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AAER,EAAA,sBACEC,KAAA,CAAAC,aAAA,CAAC,IAAA,EAAA;AACCC,IAAAA,SAAA,EAAWC,UAAA,CAAA,EAAA,CAAAC,MAAA,CAAcL,WAAW,EAAA,sBAAA,CAAA,EAAAM,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CAC9BL,WAAW,EAAA,+BAAA,CAAA,EAAkCT,OAAA,CAClD;AAAA,GAAA,EAAA,CAECM,KAAA,KAAA,IAAA,IAAAA,KAAA,cAAAA,KAAA,GAAS,yBACTI,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIC,qBAAcH,WAAW,EAAA,8BAAA;KAC3BH,KACH,CAAA,EAEDD,QACH,CAAA;AAEF,EAAA;AACF;;;;"}