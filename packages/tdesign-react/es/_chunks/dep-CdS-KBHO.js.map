{"version":3,"file":"dep-CdS-KBHO.js","sources":["../../../components/Dialog/defaultProps.ts","../../../components/Dialog/DialogCard.tsx"],"sourcesContent":["/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDialogCardProps, TdDialogProps } from './type';\n\nexport const dialogCardDefaultProps: TdDialogCardProps = {\n  closeBtn: true,\n  footer: true,\n  header: true,\n  theme: 'default',\n};\n\nexport const dialogDefaultProps: TdDialogProps = {\n  closeOnEscKeydown: undefined,\n  closeOnOverlayClick: undefined,\n  destroyOnClose: false,\n  draggable: false,\n  mode: 'modal',\n  placement: 'top',\n  preventScrollThrough: true,\n  showInAttachedElement: false,\n  showOverlay: true,\n  lazy: true,\n};\n","import React, { forwardRef, isValidElement } from 'react';\nimport classNames from 'classnames';\nimport { isString, isObject, isFunction } from 'lodash-es';\nimport {\n    CloseIcon as TdCloseIcon,\n    InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport Button, { ButtonProps } from '../button';\nimport { TdDialogCardProps } from './type';\nimport { StyledProps } from '../common';\nimport parseTNode from '../utils/parseTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\n// import { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { dialogCardDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface DialogCardProps extends TdDialogCardProps, StyledProps, React.HTMLAttributes<HTMLDivElement> {\n    children?: React.ReactNode;\n}\n\nconst renderDialogButton = (btn: DialogCardProps['cancelBtn'], defaultProps: ButtonProps) => {\n    let result = null;\n\n    if (isString(btn)) {\n        result = <Button {...defaultProps}>{btn}</Button>;\n    } else if (isValidElement(btn)) {\n        result = btn;\n    } else if (isObject(btn)) {\n        result = <Button {...defaultProps} {...(btn as {})} />;\n    } else if (isFunction(btn)) {\n        result = btn();\n    }\n\n    return result;\n};\n\nconst DialogCard = forwardRef<HTMLDivElement, DialogCardProps>((props, ref) => {\n    const { classPrefix } = useConfig();\n    const componentCls = `${classPrefix}-dialog`;\n    const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon } = useGlobalIcon({\n        CloseIcon: TdCloseIcon,\n        InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n        CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    });\n    // const [local, t] = useLocaleReceiver('dialog');\n    // const confirmText = t(local.confirm);\n    // const cancelText = t(local.cancel);\n    const confirmText = '确认';\n    const cancelText = '取消';\n    const {\n        theme,\n        header,\n        closeBtn,\n        footer,\n        body,\n        children,\n        className,\n        onCancel,\n        onConfirm,\n        onCloseBtnClick,\n        cancelBtn = cancelText,\n        confirmBtn = confirmText,\n        confirmLoading,\n        ...otherProps\n    } = useDefaultProps<DialogCardProps>(props, dialogCardDefaultProps);\n\n    const renderHeaderContent = () => {\n        const iconMap = {\n            info: <InfoCircleFilledIcon className={`${classPrefix}-is-info`} />,\n            warning: <InfoCircleFilledIcon className={`${classPrefix}-is-warning`} />,\n            // error is going to deprecated\n            error: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n            danger: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n            success: <CheckCircleFilledIcon className={`${classPrefix}-is-success`} />,\n        };\n\n        return (\n            <div className={`${componentCls}__header-content`}>\n                {iconMap[theme]}\n                {header}\n            </div>\n        );\n    };\n\n    const renderCloseBtn = () => {\n        if (!closeBtn) {\n            return null;\n        }\n\n        const closeIcon = () => (closeBtn === true ? <CloseIcon /> : closeBtn);\n\n        return (\n            <span\n                className={`${componentCls}__close`}\n                style={{\n                    marginLeft: 'auto',\n                }}\n                onClick={(e: React.MouseEvent<HTMLDivElement>) => onCloseBtnClick?.({ e })}\n            >\n                {closeIcon()}\n            </span>\n        );\n    };\n\n    const renderHeader = () => (\n        <div className={classNames(`${componentCls}__header`)}>\n            {renderHeaderContent()}\n            {renderCloseBtn()}\n        </div>\n    );\n\n    const renderFooter = () => {\n        const defaultFooter = () => {\n            const renderCancelBtn = renderDialogButton(cancelBtn, {\n                variant: 'outline',\n                onClick: (e: React.MouseEvent<HTMLButtonElement>) => onCancel?.({ e }),\n                className: classNames(`${componentCls}__cancel`, cancelBtn?.props?.className),\n            });\n            const renderConfirmBtn = renderDialogButton(confirmBtn, {\n                theme: 'primary',\n                loading: confirmLoading,\n                onClick: (e: React.MouseEvent<HTMLButtonElement>) => onConfirm?.({ e }),\n                className: classNames(`${componentCls}__confirm`, confirmBtn?.className),\n            });\n\n            return (\n                <>\n                    {renderCancelBtn}\n                    {renderConfirmBtn}\n                </>\n            );\n        };\n\n        return <div className={`${componentCls}__footer`}>{parseTNode(footer, null, defaultFooter())}</div>;\n    };\n\n    return (\n        <div ref={ref} {...otherProps} className={classNames(componentCls, `${componentCls}--default`, className)}>\n            {!!header && renderHeader()}\n            <div className={`${componentCls}__body`}>{body || children}</div>\n            {!!footer && renderFooter()}\n        </div>\n    );\n});\n\nDialogCard.displayName = 'DialogCard';\n\nexport default DialogCard;\n"],"names":["dialogCardDefaultProps","closeBtn","footer","header","theme","dialogDefaultProps","closeOnEscKeydown","closeOnOverlayClick","destroyOnClose","draggable","mode","placement","preventScrollThrough","showInAttachedElement","showOverlay","lazy","renderDialogButton","btn","defaultProps","result","isString","React","createElement","Button","_objectSpread","isValidElement","isObject","isFunction","DialogCard","forwardRef","props","ref","_useConfig","useConfig","classPrefix","componentCls","concat","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","confirmText","cancelText","_useDefaultProps","useDefaultProps","body","children","className","onCancel","onConfirm","onCloseBtnClick","_useDefaultProps$canc","cancelBtn","_useDefaultProps$conf","confirmBtn","confirmLoading","otherProps","_objectWithoutProperties","_excluded","renderHeaderContent","iconMap","info","warning","error","danger","success","renderCloseBtn","closeIcon","style","marginLeft","onClick","e","renderHeader","classNames","renderFooter","defaultFooter","_cancelBtn$props","renderCancelBtn","variant","renderConfirmBtn","loading","Fragment","parseTNode","displayName"],"mappings":"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"}