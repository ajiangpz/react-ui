{"version":3,"file":"Table.js","sources":["../../../components/DataTable/useTable.ts","../../../components/DataTable/useVirtualScroll.ts","../../../components/DataTable/Table.tsx"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport type { TableProps } from './types';\n\nexport function useTable<T extends Record<string, any>>(props: TableProps<T> & {\n  rowKey?: ((record: T) => string) | keyof T;\n}) {\n  const { rowKey = 'id', onSort } = props;\n\n  const [sortState, setSortState] = useState<{ key: string; order: 'asc' | 'desc' } | undefined>();\n\n  const getRowKey = useCallback(\n    (record: T) => {\n      const key = rowKey as keyof T | ((record: T) => string);\n      if (typeof key === 'function') {\n        return key(record);\n      }\n      return record[key as keyof T];\n    },\n    [rowKey]\n  );\n\n  const handleSort = useCallback(\n    (key: string) => {\n      let newOrder: 'asc' | 'desc' | undefined;\n      \n      if (sortState?.key === key) {\n        if (sortState.order === 'asc') {\n          newOrder = 'desc';\n        } else if (sortState.order === 'desc') {\n          newOrder = undefined;\n        } else {\n          newOrder = 'asc';\n        }\n      } else {\n        newOrder = 'asc';\n      }\n\n      setSortState(newOrder ? { key, order: newOrder } : undefined);\n      if (newOrder) {\n        onSort?.(key, newOrder);\n      }\n    },\n    [sortState, onSort]\n  );\n\n  return {\n    sortState,\n    handleSort,\n    getRowKey,\n  };\n} ","import { useState, useCallback, useEffect } from 'react';\nimport type { VirtualScrollConfig, VirtualScrollState } from './types';\n\nexport function useVirtualScroll(\n  totalCount: number,\n  containerHeight: number | undefined,\n  config: VirtualScrollConfig | undefined\n) {\n  const [state, setState] = useState<VirtualScrollState>({\n    startIndex: 0,\n    endIndex: 0,\n    paddingTop: 0,\n    paddingBottom: 0\n  });\n\n  const updateVirtualScroll = useCallback((scrollTop: number) => {\n    if (!config || !containerHeight) {\n      setState({\n        startIndex: 0,\n        endIndex: totalCount - 1,\n        paddingTop: 0,\n        paddingBottom: 0\n      });\n      return;\n    }\n\n    const { rowHeight, overscan = 3 } = config;\n    const visibleCount = Math.ceil(containerHeight / rowHeight);\n    \n    let startIndex = Math.floor(scrollTop / rowHeight);\n    startIndex = Math.max(0, startIndex - overscan);\n    \n    let endIndex = startIndex + visibleCount + 2 * overscan;\n    endIndex = Math.min(totalCount - 1, endIndex);\n\n    setState({\n      startIndex,\n      endIndex,\n      paddingTop: 0,\n      paddingBottom: 0\n    });\n  }, [config, containerHeight, totalCount]);\n\n  useEffect(() => {\n    updateVirtualScroll(0);\n  }, [updateVirtualScroll]);\n\n  return {\n    virtualState: state,\n    updateVirtualScroll,\n    totalHeight: config ? totalCount * config.rowHeight : undefined\n  };\n} ","import React, { forwardRef, useRef, useCallback, useMemo } from \"react\";\nimport type { TableProps, TableContextType } from \"./types\";\nimport { useTable } from \"./useTable\";\nimport { useVirtualScroll } from \"./useVirtualScroll\";\nimport { TableHead } from \"./TableHead\";\nimport { TableBody } from \"./TableBody\";\nimport { TableContext } from \"./context\";\nimport clsx from \"clsx\";\n\nexport const DataTable = forwardRef<HTMLDivElement, TableProps>(\n  (props, ref) => {\n    const {\n      columns,\n      dataSource,\n      loading,\n      height,\n      className,\n      onRowClick,\n      rowSelection,\n      rowKey = \"id\",\n      stickyHeader,\n      virtualScroll: virtualScrollConfig,\n      scroll\n    } = props;\n\n    const scrollContainerRef = useRef<HTMLDivElement>(null);\n    const containerHeight = typeof scroll?.y === 'number' ? scroll.y : \n                          typeof height === 'number' ? height : \n                          undefined;\n\n    const { sortState, handleSort, getRowKey } = useTable(props);\n\n    const { virtualState, updateVirtualScroll } = useVirtualScroll(\n      dataSource.length,\n      containerHeight,\n      virtualScrollConfig\n    );\n\n    const handleScroll = useCallback(\n      (e: React.UIEvent<HTMLDivElement>) => {\n        const scrollTop = e.currentTarget.scrollTop;\n        updateVirtualScroll(scrollTop);\n      },\n      [updateVirtualScroll]\n    );\n\n    const contextValue = useMemo<TableContextType>(\n      () => ({\n        columns,\n        dataSource,\n        rowKey,\n        rowSelection,\n        currentSortKey: sortState?.key,\n        sortOrder: sortState?.order,\n        setSort: handleSort,\n        getRowKey,\n        onRowClick,\n        stickyHeader,\n        columnWidths: columns.map(column => {\n          if (column.width) return column.width;\n          return `${100 / columns.length}%`;\n        }),\n        virtualScroll: virtualState\n      }),\n      [\n        columns,\n        dataSource,\n        rowKey,\n        rowSelection,\n        sortState,\n        handleSort,\n        getRowKey,\n        onRowClick,\n        stickyHeader,\n        virtualState\n      ]\n    );\n\n    // 计算表格容器样式\n    const tableContainerStyle = useMemo(() => {\n      const style: React.CSSProperties = {};\n      \n      if (scroll?.y) {\n        style.maxHeight = scroll.y;\n        style.overflowY = 'auto';\n      }\n      \n      if (scroll?.x) {\n        style.minWidth = scroll.x;\n      }\n      \n      return style;\n    }, [scroll]);\n\n    // 计算表格样式\n    const tableStyle = useMemo(() => {\n      const style: React.CSSProperties = {};\n      \n      if (scroll?.x) {\n        style.width = scroll.x;\n        style.maxWidth = 'none';\n      }\n      \n      return style;\n    }, [scroll]);\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          \"-mx-6 flex min-w-[300px] items-start justify-center overflow-hidden border-y border-zinc-200 bg-white sm:mx-0 sm:max-w-full sm:rounded-lg sm:border dark:border-white/10 dark:bg-zinc-900\",\n          className\n        )}\n      >\n        <div className=\"w-full\">\n          <div className=\"flow-root\">\n            <div className=\"relative\">\n              {loading && (\n                <div className=\"absolute inset-0 bg-white/75 dark:bg-zinc-900/75 flex items-center justify-center z-50\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-4 border-primary-600 border-t-transparent\" />\n                </div>\n              )}\n\n              <TableContext.Provider value={contextValue}>\n                <div className=\"w-full relative\">\n                  {/* 表头容器 - 固定位置，不滚动 */}\n                  <div className=\"w-full\">\n                    <table className=\"min-w-full text-left text-sm/6 text-zinc-950 dark:text-white\">\n                      <colgroup>\n                        {rowSelection && <col className=\"w-12\" />}\n                        {contextValue.columnWidths.map((width, index) => (\n                          <col key={index} style={{ width }} />\n                        ))}\n                      </colgroup>\n                      <TableHead />\n                    </table>\n                  </div>\n\n                  {/* 表体容器 - 可滚动区域 */}\n                  <div\n                    ref={scrollContainerRef}\n                    className={clsx(\n                      \"w-full overflow-y-auto\",\n                      \"scrollbar-thin scrollbar-thumb-zinc-300 dark:scrollbar-thumb-zinc-600 scrollbar-track-transparent hover:scrollbar-thumb-zinc-400 dark:hover:scrollbar-thumb-zinc-500\"\n                    )}\n                    style={{\n                      ...tableContainerStyle,\n                      maxHeight: containerHeight ? `${containerHeight}px` : undefined // 减去表头高度\n                    }}\n                    onScroll={handleScroll}\n                  >\n                    <table \n                      className=\"min-w-full text-left text-sm/6 text-zinc-950 dark:text-white\"\n                      style={tableStyle}\n                    >\n                      <colgroup>\n                        {rowSelection && <col className=\"w-12\" />}\n                        {contextValue.columnWidths.map((width, index) => (\n                          <col key={index} style={{ width }} />\n                        ))}\n                      </colgroup>\n                      <TableBody />\n                    </table>\n                  </div>\n                </div>\n              </TableContext.Provider>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n"],"names":["useTable","props","_props$rowKey","rowKey","onSort","_useState","useState","_useState2","_slicedToArray","sortState","setSortState","getRowKey","useCallback","record","key","handleSort","newOrder","order","useVirtualScroll","totalCount","containerHeight","config","startIndex","endIndex","paddingTop","paddingBottom","state","setState","updateVirtualScroll","scrollTop","rowHeight","_config$overscan","overscan","visibleCount","Math","ceil","floor","max","min","useEffect","virtualState","totalHeight","DataTable","forwardRef","ref","columns","dataSource","loading","height","className","onRowClick","rowSelection","stickyHeader","virtualScrollConfig","virtualScroll","scroll","scrollContainerRef","useRef","y","_useTable","_useVirtualScroll","length","handleScroll","e","currentTarget","contextValue","useMemo","currentSortKey","sortOrder","setSort","columnWidths","map","column","width","concat","tableContainerStyle","style","maxHeight","overflowY","x","minWidth","tableStyle","maxWidth","React","createElement","clsx","TableContext","Provider","value","index","TableHead","_objectSpread","onScroll","TableBody"],"mappings":"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"}