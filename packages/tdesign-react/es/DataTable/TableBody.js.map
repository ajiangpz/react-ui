{"version":3,"file":"TableBody.js","sources":["../../../components/DataTable/TableBody.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { TableContext } from \"./context\";\nimport { Checkbox } from \"./Checkbox\";\nimport clsx from \"clsx\";\n\nexport const TableBody: React.FC = () => {\n  const {\n    columns,\n    dataSource,\n    rowSelection,\n    getRowKey,\n    onRowClick,\n    virtualScroll\n  } = useContext(TableContext);\n\n  const renderRows = () => {\n    const rows = virtualScroll\n      ? dataSource.slice(virtualScroll.startIndex, virtualScroll.endIndex)\n      : dataSource;\n\n    return rows.map((record, rowIndex) => {\n      const key = getRowKey(record);\n      const baseRowClasses = clsx(\n        \"transition-colors duration-100\",\n        onRowClick && \"cursor-pointer hover:bg-zinc-50 dark:hover:bg-zinc-800/50\"\n      );\n      const baseCellClasses =\n        \"relative px-6 first:pl-6 last:pr-6 border-b border-zinc-950/5 dark:border-white/5 py-4 table-cell align-middle leading-none\";\n\n      return (\n        <tr\n          key={key}\n          onClick={() => onRowClick?.(record)}\n          className={baseRowClasses}\n        >\n          {rowSelection && (\n            <td className={clsx(baseCellClasses, \"w-14\")}>\n              <div className=\"flex items-center justify-center\">\n                <Checkbox\n                  checked={rowSelection.selectedRowKeys.includes(key.toString())}\n                  onChange={checked => {\n                    const newKeys = checked\n                      ? [...rowSelection.selectedRowKeys, key.toString()]\n                      : rowSelection.selectedRowKeys.filter(k => k !== key.toString());\n                    rowSelection.onChange(newKeys, [record]);\n                  }}\n                  {...(rowSelection.getCheckboxProps?.(record) || {})}\n                />\n              </div>\n            </td>\n          )}\n          {columns.map((column, colIndex) => {\n            const cellClasses = clsx(\n              baseCellClasses,\n              colIndex === 0 && \"font-medium\",\n              column.key === \"access\" && \"text-zinc-500\",\n              \"text-left\"\n            );\n\n            return (\n              <td key={column.key || colIndex} className={cellClasses}>\n                <div className=\"py-0.5\">\n                  {column.render\n                    ? column.render(record[column.key], record, rowIndex)\n                    : record[column.key]}\n                </div>\n              </td>\n            );\n          })}\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <tbody className=\"divide-y divide-zinc-100 dark:divide-zinc-800\">\n      {renderRows()}\n    </tbody>\n  );\n};\n"],"names":["TableBody","_useContext","useContext","TableContext","columns","dataSource","rowSelection","getRowKey","onRowClick","virtualScroll","renderRows","rows","slice","startIndex","endIndex","map","record","rowIndex","_rowSelection$getChec","key","baseRowClasses","clsx","baseCellClasses","React","createElement","onClick","className","Checkbox","_objectSpread","checked","selectedRowKeys","includes","toString","onChange","newKeys","concat","_toConsumableArray","filter","k","getCheckboxProps","call","column","colIndex","cellClasses","render"],"mappings":"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"}