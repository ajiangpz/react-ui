{"version":3,"file":"Row.js","sources":["../../../components/Layout/Row.tsx"],"sourcesContent":["// Row.tsx\nimport React from 'react';\nimport clsx from 'clsx';\nimport { RowProps } from './types';\n\nconst justifyMap = {\n  start: 'justify-start',\n  center: 'justify-center',\n  end: 'justify-end',\n  'space-between': 'justify-between',\n  'space-around': 'justify-around',\n};\n\nconst alignMap = {\n  top: 'items-start',\n  middle: 'items-center',\n  bottom: 'items-end',\n};\n\nexport const Row: React.FC<RowProps> = ({\n  gutter = 0,\n  justify = 'start',\n  align = 'top',\n  className,\n  children,\n}) => {\n  const [horizontal, vertical] = Array.isArray(gutter) ? gutter : [gutter, 0];\n  const rowStyle = {\n    marginLeft: `-${horizontal / 2}px`,\n    marginRight: `-${horizontal / 2}px`,\n    rowGap: vertical,\n  };\n\n  return (\n    <div\n      className={clsx('flex flex-wrap', justifyMap[justify], alignMap[align], className)}\n      style={rowStyle}\n    >\n      {React.Children.map(children, (child: any) =>{\n        return React.cloneElement(child, {\n          style: {\n            paddingLeft: `${horizontal / 2}px`,\n            paddingRight: `${horizontal / 2}px`,\n            paddingTop: `-${vertical / 2}px`,  \n            paddingBottom: `-${vertical / 2}px`,\n            ...(child.props?.style || {}),\n          },\n        })\n      })}\n    </div>\n  );\n};\n"],"names":["justifyMap","start","center","end","alignMap","top","middle","bottom","Row","_ref$gutter","_ref","gutter","_ref$justify","justify","_ref$align","align","className","children","_ref2","Array","isArray","_ref3","_slicedToArray","horizontal","vertical","rowStyle","marginLeft","concat","marginRight","rowGap","React","createElement","clsx","style","Children","map","child","_child$props","cloneElement","_objectSpread","paddingLeft","paddingRight","paddingTop","paddingBottom","props"],"mappings":";;;;;;;;AAKA,IAAMA,UAAA,GAAa;AACjBC,EAAAA,KAAA,EAAO,eAAA;AACPC,EAAAA,MAAA,EAAQ,gBAAA;AACRC,EAAAA,GAAA,EAAK,aAAA;AACL,EAAA,eAAA,EAAiB,iBAAA;AACjB,EAAA,cAAA,EAAgB;AAClB,CAAA;AAEA,IAAMC,QAAA,GAAW;AACfC,EAAAA,GAAA,EAAK,aAAA;AACLC,EAAAA,MAAA,EAAQ,cAAA;AACRC,EAAAA,MAAA,EAAQ;AACV,CAAA;IAEaC,MAA0B,SAA1BA,UAMP;AAAA,EAAA,IAAAC,WAAA,GAAAC,IAAA,CALJC,MAAA;AAAAA,IAAAA,MAAA,GAAAF,WAAA,KAAA,KAAA,CAAA,GAAS,CAAA,GAAAA,WAAA;IAAAG,YAAA,GAAAF,IAAA,CACTG,OAAA;AAAAA,IAAAA,OAAA,GAAAD,YAAA,KAAA,KAAA,CAAA,GAAU,OAAA,GAAAA,YAAA;IAAAE,UAAA,GAAAJ,IAAA,CACVK,KAAA;AAAAA,IAAAA,KAAA,GAAAD,UAAA,KAAA,KAAA,CAAA,GAAQ,KAAA,GAAAA,UAAA;IACRE,SAAA,GAAAN,IAAA,CAAAM,SAAA;IACAC,QAAA,GAAAP,IAAA,CAAAO,QAAA;AAEA,EAAA,IAAAC,KAAA,GAA+BC,KAAA,CAAMC,OAAA,CAAQT,MAAM,CAAA,GAAIA,MAAA,GAAS,CAACA,MAAA,EAAQ,CAAC,CAAA;IAAAU,KAAA,GAAAC,cAAA,CAAAJ,KAAA,EAAA,CAAA,CAAA;AAAnEK,IAAAA,UAAA,GAAAF,KAAA,CAAA,CAAA,CAAA;AAAYG,IAAAA,QAAQ,GAAAH,KAAA,CAAA,CAAA,CAAA;AAC3B,EAAA,IAAMI,QAAA,GAAW;AACfC,IAAAA,UAAA,MAAAC,MAAA,CAAgBJ,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC9BK,IAAAA,WAAA,MAAAD,MAAA,CAAiBJ,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC/BM,IAAAA,MAAA,EAAQL;GACV;AAEA,EAAA,sBACEM,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACCf,IAAAA,SAAA,EAAWgB,KAAK,gBAAA,EAAkBhC,UAAA,CAAWa,OAAO,CAAA,EAAGT,QAAA,CAASW,KAAK,CAAA,EAAGC,SAAS,CAAA;AACjFiB,IAAAA,KAAA,EAAOR;GAAA,EAENK,KAAA,CAAMI,QAAA,CAASC,GAAA,CAAIlB,QAAA,EAAU,UAACmB,KAAA,EAAc;AAAA,IAAA,IAAAC,YAAA;AAC3C,IAAA,oBAAOP,KAAA,CAAMQ,aAAaF,KAAA,EAAO;AAC/BH,MAAAA,KAAA,EAAAM,aAAA,CAAA;AACEC,QAAAA,WAAA,KAAAb,MAAA,CAAgBJ,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC9BkB,QAAAA,YAAA,KAAAd,MAAA,CAAiBJ,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC/BmB,QAAAA,UAAA,MAAAf,MAAA,CAAgBH,QAAA,GAAW,CAAC,EAAA,IAAA,CAAA;AAC5BmB,QAAAA,aAAA,EAAA,GAAA,CAAAhB,MAAA,CAAmBH,QAAA,GAAW,CAAC,EAAA,IAAA;AAAA,OAAA,EAC3B,CAAA,CAAAa,YAAA,GAAAD,KAAA,CAAMQ,KAAA,MAAA,IAAA,IAAAP,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,YAAA,CAAaJ,KAAA,KAAS,EAAC;AAE/B,KAAC,CAAA;AACH,EAAA,CAAC,CACH,CAAA;AAEJ;;;;"}