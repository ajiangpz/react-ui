{"version":3,"file":"Flex.js","sources":["../../../components/Layout/Flex.tsx"],"sourcesContent":["import React from 'react';\n\ninterface FlexProps {\n  children: React.ReactNode;\n  className?: string;\n  direction?: 'row' | 'col' | 'row-reverse' | 'col-reverse';\n  justify?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';\n  align?: 'start' | 'end' | 'center' | 'baseline' | 'stretch';\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  gap?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 8 | 10 | 12 | 16;\n}\n\nconst directionClasses = {\n  row: 'flex-row',\n  col: 'flex-col',\n  'row-reverse': 'flex-row-reverse',\n  'col-reverse': 'flex-col-reverse',\n};\n\nconst justifyClasses = {\n  start: 'justify-start',\n  end: 'justify-end',\n  center: 'justify-center',\n  between: 'justify-between',\n  around: 'justify-around',\n  evenly: 'justify-evenly',\n};\n\nconst alignClasses = {\n  start: 'items-start',\n  end: 'items-end',\n  center: 'items-center',\n  baseline: 'items-baseline',\n  stretch: 'items-stretch',\n};\n\nconst wrapClasses = {\n  nowrap: 'flex-nowrap',\n  wrap: 'flex-wrap',\n  'wrap-reverse': 'flex-wrap-reverse',\n};\n\nconst gapClasses = {\n  0: 'gap-0',\n  1: 'gap-1',\n  2: 'gap-2',\n  3: 'gap-3',\n  4: 'gap-4',\n  5: 'gap-5',\n  6: 'gap-6',\n  8: 'gap-8',\n  10: 'gap-10',\n  12: 'gap-12',\n  16: 'gap-16',\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  children,\n  className = '',\n  direction = 'row',\n  justify = 'start',\n  align = 'stretch',\n  wrap = 'nowrap',\n  gap = 0,\n}) => {\n  return (\n    <div\n      className={`flex ${directionClasses[direction]} ${justifyClasses[justify]} ${alignClasses[align]} ${wrapClasses[wrap]} ${gapClasses[gap]} ${className}`}\n    >\n      {children}\n    </div>\n  );\n}; "],"names":["directionClasses","row","col","justifyClasses","start","end","center","between","around","evenly","alignClasses","baseline","stretch","wrapClasses","nowrap","wrap","gapClasses","Flex","children","_ref","_ref$className","className","_ref$direction","direction","_ref$justify","justify","_ref$align","align","_ref$wrap","_ref$gap","gap","React","createElement","concat"],"mappings":";;;AAYA,IAAMA,gBAAA,GAAmB;AACvBC,EAAAA,GAAA,EAAK,UAAA;AACLC,EAAAA,GAAA,EAAK,UAAA;AACL,EAAA,aAAA,EAAe,kBAAA;AACf,EAAA,aAAA,EAAe;AACjB,CAAA;AAEA,IAAMC,cAAA,GAAiB;AACrBC,EAAAA,KAAA,EAAO,eAAA;AACPC,EAAAA,GAAA,EAAK,aAAA;AACLC,EAAAA,MAAA,EAAQ,gBAAA;AACRC,EAAAA,OAAA,EAAS,iBAAA;AACTC,EAAAA,MAAA,EAAQ,gBAAA;AACRC,EAAAA,MAAA,EAAQ;AACV,CAAA;AAEA,IAAMC,YAAA,GAAe;AACnBN,EAAAA,KAAA,EAAO,aAAA;AACPC,EAAAA,GAAA,EAAK,WAAA;AACLC,EAAAA,MAAA,EAAQ,cAAA;AACRK,EAAAA,QAAA,EAAU,gBAAA;AACVC,EAAAA,OAAA,EAAS;AACX,CAAA;AAEA,IAAMC,WAAA,GAAc;AAClBC,EAAAA,MAAA,EAAQ,aAAA;AACRC,EAAAA,IAAA,EAAM,WAAA;AACN,EAAA,cAAA,EAAgB;AAClB,CAAA;AAEA,IAAMC,UAAA,GAAa;AACjB,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,EAAA,EAAI,QAAA;AACJ,EAAA,EAAA,EAAI,QAAA;AACJ,EAAA,EAAA,EAAI;AACN,CAAA;IAEaC,OAA4B,SAA5BA,WAQP;AAAA,EAAA,IAPJC,QAAA,GAAAC,IAAA,CAAAD,QAAA;IAAAE,cAAA,GAAAD,IAAA,CACAE,SAAA;AAAAA,IAAAA,SAAA,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAY,EAAA,GAAAA,cAAA;IAAAE,cAAA,GAAAH,IAAA,CACZI,SAAA;AAAAA,IAAAA,SAAA,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAY,KAAA,GAAAA,cAAA;IAAAE,YAAA,GAAAL,IAAA,CACZM,OAAA;AAAAA,IAAAA,OAAA,GAAAD,YAAA,KAAA,KAAA,CAAA,GAAU,OAAA,GAAAA,YAAA;IAAAE,UAAA,GAAAP,IAAA,CACVQ,KAAA;AAAAA,IAAAA,KAAA,GAAAD,UAAA,KAAA,KAAA,CAAA,GAAQ,SAAA,GAAAA,UAAA;IAAAE,SAAA,GAAAT,IAAA,CACRJ,IAAA;AAAAA,IAAAA,IAAA,GAAAa,SAAA,KAAA,KAAA,CAAA,GAAO,QAAA,GAAAA,SAAA;IAAAC,QAAA,GAAAV,IAAA,CACPW,GAAA;AAAAA,IAAAA,GAAA,GAAAD,QAAA,KAAA,KAAA,CAAA,GAAM,CAAA,GAAAA,QAAA;AAEN,EAAA,sBACEE,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACCX,IAAAA,SAAA,UAAAY,MAAA,CAAmBjC,gBAAA,CAAiBuB,SAAS,CAAC,EAAA,GAAA,CAAA,CAAAU,MAAA,CAAI9B,cAAA,CAAesB,OAAO,CAAC,EAAA,GAAA,CAAA,CAAAQ,MAAA,CAAIvB,YAAA,CAAaiB,KAAK,CAAC,OAAAM,MAAA,CAAIpB,YAAYE,IAAI,CAAC,EAAA,GAAA,CAAA,CAAAkB,MAAA,CAAIjB,UAAA,CAAWc,GAAG,CAAC,EAAA,GAAA,CAAA,CAAAG,MAAA,CAAIZ,SAAS;GAAA,EAEpJH,QACH,CAAA;AAEJ;;;;"}