{"version":3,"file":"Alert.js","sources":["../../../components/Alert/defaultProps.ts","../../../components/Alert/Alert.tsx"],"sourcesContent":["import { TdAlertProps } from './type';\n\nexport const alertDefaultProps: TdAlertProps = { closeBtn: false, maxLine: 0, theme: 'info' };\n","import React, { forwardRef, useRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  X as TdCloseIcon,\n  Info as TdInfoCircleFilledIcon,\n  CheckCircle as TdCheckCircleFilledIcon,\n  AlertTriangle as TdErrorCircleFilledIcon\n\n} from 'lucide-react';\n\nimport { CSSTransition } from 'react-transition-group';\nimport parseTNode from '../utils/parseTNode';\nimport noop from '../utils/noop';\n\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdAlertProps } from './type';\nimport { StyledProps } from '../common';\nimport { alertDefaultProps } from './defaultProps';\nimport composeRefs from '../utils/composeRefs';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nconst transitionTime = 200;\n\nexport interface AlertProps extends TdAlertProps, StyledProps { };\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n  const { classPrefix } = useConfig();\n  // const [local, t] = useLocaleReceiver('alert');\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n\n  const {\n    message,\n    title,\n    operation,\n    theme,\n    icon,\n    closeBtn,\n    maxLine,\n    onClose,\n    className,\n    onClosed = noop,\n    ...alertProps\n  } = useDefaultProps(props, alertDefaultProps);\n\n  const [closed, setClosed] = React.useState(false);\n  const [collapsed, setCollapsed] = React.useState(true);\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  const iconMap = {\n    success: CheckCircleFilledIcon,\n    info: InfoCircleFilledIcon,\n    error: ErrorCircleFilledIcon,\n    warning: ErrorCircleFilledIcon,\n  };\n\n  const handleClose = (e: React.MouseEvent<HTMLDivElement>) => {\n    setClosed(true);\n    onClose?.({ e });\n  };\n\n  const handleCollapse = () => {\n    setCollapsed((collapsed) => !collapsed);\n  };\n\n  const renderIconNode = () => {\n    if (React.isValidElement(icon)) return icon;\n    return React.createElement(iconMap[theme]);\n  };\n\n  const renderMessage = () => {\n    if (+maxLine > 0 && Array.isArray(message)) {\n      return (\n        <div className={`${classPrefix}-alert__description`}>\n          {message.map((item, index) => {\n            if (collapsed) {\n              if (index < +maxLine) {\n                return <div key={index}>{item}</div>;\n              }\n            } else {\n              return <div key={index}>{item}</div>;\n            }\n            return true;\n          })}\n          {+maxLine < message.length && (\n            <div className={`${classPrefix}-alert__collapse`} onClick={handleCollapse}>\n              {collapsed ? \"展开\" : \"收起\"}\n            </div>\n          )}\n        </div>\n      );\n    }\n    return <div className={`${classPrefix}-alert__description`}>{message}</div>;\n  };\n\n  // close 属性变更为 closeBtn，close废弃后可删除。（需兼容标签上直接写close和closeBtn的场景）\n  const isUsingClose = Reflect.has(props, 'close');\n  const closeNode = isUsingClose ? close : closeBtn;\n  if (isUsingClose) {\n    console.warn('TAlert', 'prop `close` is going to be deprecated, please use `closeBtn` instead.');\n  }\n  const renderClose = () => {\n    if (closeNode === false) return null;\n    return (\n      <div className={`${classPrefix}-alert__close`} onClick={handleClose}>\n        {parseTNode(closeNode, undefined, <CloseIcon className='t-icon'></CloseIcon>)}\n      </div>\n    );\n  };\n\n  return (\n    <CSSTransition\n      in={!closed}\n      unmountOnExit\n      classNames={{\n        exitActive: `${classPrefix}-alert--closing`,\n      }}\n      nodeRef={nodeRef}\n      timeout={transitionTime}\n      onExited={onClosed}\n    >\n      <div\n        ref={composeRefs(ref, nodeRef)}\n        className={classNames(`${classPrefix}-alert`, `${classPrefix}-alert--${theme}`, className)}\n        {...alertProps}\n      >\n        <div className={`${classPrefix}-alert__icon`}>{renderIconNode()}</div>\n        <div className={`${classPrefix}-alert__content`}>\n          {title ? <div className={`${classPrefix}-alert__title`}>{title}</div> : null}\n          <div className={`${classPrefix}-alert__message`}>\n            {renderMessage()}\n            {operation ? <div className={`${classPrefix}-alert__operation`}>{parseTNode(operation)}</div> : null}\n          </div>\n        </div>\n        {renderClose()}\n      </div>\n    </CSSTransition>\n  );\n});\n\nAlert.displayName = 'Alert';\n\nexport default Alert;\n"],"names":["alertDefaultProps","closeBtn","maxLine","theme","transitionTime","Alert","forwardRef","props","ref","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","_useDefaultProps","useDefaultProps","message","title","operation","icon","onClose","className","_useDefaultProps$onCl","onClosed","noop","alertProps","_objectWithoutProperties","_excluded","_React$useState","React","useState","_React$useState2","_slicedToArray","closed","setClosed","_React$useState3","_React$useState4","collapsed","setCollapsed","nodeRef","useRef","iconMap","success","info","error","warning","handleClose","e","handleCollapse","renderIconNode","isValidElement","createElement","renderMessage","Array","isArray","concat","map","item","index","key","length","onClick","isUsingClose","Reflect","has","closeNode","close","console","warn","renderClose","parseTNode","CSSTransition","unmountOnExit","classNames","exitActive","timeout","onExited","_objectSpread","composeRefs","displayName"],"mappings":"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"}