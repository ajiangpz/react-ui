{"version":3,"file":"useSingle.js","sources":["../../../../components/select-input/hook/useSingle.tsx"],"sourcesContent":["import React, { useRef, MouseEvent } from 'react';\nimport { isObject, pick } from 'lodash-es';\nimport classNames from 'classnames';\nimport { SelectInputCommonProperties } from '../interface';\nimport { TdSelectInputProps } from '../type';\nimport Input, { InputProps, InputRef, TdInputProps } from '../../input';\nimport useControlled from '../../hooks/useControlled';\n\nexport interface RenderSelectSingleInputParams {\n  tPlaceholder: string;\n}\n\n// single 和 multiple 共有特性\nconst COMMON_PROPERTIES = [\n  'status',\n  'clearable',\n  'disabled',\n  'label',\n  'placeholder',\n  'readonly',\n  'suffix',\n  'suffixIcon',\n  'onPaste',\n  'onEnter',\n  'onMouseenter',\n  'onMouseleave',\n  'size',\n  'prefixIcon',\n];\n\nconst DEFAULT_KEYS: TdSelectInputProps['keys'] = {\n  label: 'label',\n  value: 'value',\n};\n\nfunction getInputValue(\n  value: TdSelectInputProps['value'],\n  keys: TdSelectInputProps['keys'],\n) {\n  const iKeys = keys || DEFAULT_KEYS;\n  return isObject(value) ? value[iKeys.label] : value;\n}\n\nexport default function useSingle(props: TdSelectInputProps) {\n  const { value, keys } = props;\n  const inputRef = useRef<InputRef>(null);\n  const [inputValue, setInputValue] = useControlled(\n    props,\n    'inputValue',\n    props.onInputChange,\n  );\n  const commonInputProps: SelectInputCommonProperties = {\n    ...pick(props, COMMON_PROPERTIES),\n    suffixIcon: props.suffixIcon,\n  };\n\n  const onInnerClear = (context: { e: MouseEvent<SVGSVGElement> }) => {\n    context?.e?.stopPropagation();\n    props.onClear?.(context);\n    setInputValue('', { trigger: 'clear' });\n  };\n\n  const onInnerInputChange: TdInputProps['onChange'] = (value, context) => {\n    if (props.allowInput) {\n      setInputValue(value, { ...context, trigger: 'input' });\n    }\n  };\n\n  const handleEmptyPanelBlur = (\n    value: string,\n    { e }: { e: React.FocusEvent<HTMLInputElement> },\n  ) => {\n    props.onBlur?.(value, { e, inputValue: value });\n  };\n\n  const renderSelectSingle = (popupVisible: boolean) => {\n    const singleValueDisplay = !props.multiple ? props.valueDisplay : null;\n    const displayedValue =\n      popupVisible && props.allowInput\n        ? inputValue\n        : getInputValue(value, keys);\n    return (\n      <Input\n        ref={inputRef}\n        {...(commonInputProps as InputProps)}\n        autoWidth={props.autoWidth}\n        placeholder={props.placeholder}\n        value={singleValueDisplay ? ' ' : displayedValue}\n        label={\n          (props.label || singleValueDisplay) && (\n            <>\n              {props.label}\n              {singleValueDisplay as React.ReactNode}\n            </>\n          )\n        }\n        onChange={onInnerInputChange}\n        onClear={onInnerClear}\n        // [Important Info]: SelectInput.blur is not equal to Input, example: click popup panel\n        onFocus={(val, context) => {\n          props.onFocus?.(value, { ...context, inputValue: val });\n          // focus might not need to change input value. it will caught some curious errors in tree-select\n          // !popupVisible && setInputValue(getInputValue(value, keys), { ...context, trigger: 'input' });\n        }}\n        onEnter={(val, context) => {\n          props.onEnter?.(value, { ...context, inputValue: val });\n        }}\n        // onBlur need to triggered by input when popup panel is null\n        onBlur={!props.panel ? handleEmptyPanelBlur : null}\n        {...props.inputProps}\n        inputClass={classNames(props.inputProps?.className, {\n          [`t-input--focused`]: popupVisible,\n          [`t-is-focused`]: popupVisible,\n        })}\n      ></Input>\n    );\n  };\n  return {\n    inputRef,\n    commonInputProps,\n    singleInputValue: inputValue,\n    onInnerClear,\n    renderSelectSingle,\n  };\n}\n"],"names":["COMMON_PROPERTIES","DEFAULT_KEYS","label","value","getInputValue","keys","iKeys","isObject","useSingle","props","inputRef","useRef","_useControlled","useControlled","onInputChange","_useControlled2","_slicedToArray","inputValue","setInputValue","commonInputProps","_objectSpread","pick","suffixIcon","onInnerClear","context","_context$e","_props$onClear","e","stopPropagation","onClear","call","trigger","onInnerInputChange","allowInput","handleEmptyPanelBlur","_props$onBlur","onBlur","renderSelectSingle","popupVisible","_props$inputProps","singleValueDisplay","multiple","valueDisplay","displayedValue","React","createElement","Input","ref","autoWidth","placeholder","Fragment","onChange","onFocus","val","_props$onFocus","onEnter","_props$onEnter","panel","inputProps","inputClass","classNames","className","_defineProperty","singleInputValue"],"mappings":"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"}