{"version":3,"file":"Badge.stories.js","sources":["../../../components/Badge/Badge.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from \"@storybook/react\";\nimport { Badge } from \"./index\";\nimport { Button } from \"../button\";\nimport \"@/style\";\n\nconst meta: Meta<typeof Badge> = {\n  title: \"Components/Badge\",\n  component: Badge,\n  tags: [\"autodocs\"]\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof Badge>;\n\n\nfunction BadgeExample() {\n  return (\n    <>\n      <Badge\n        count={100}\n        shape=\"circle\"\n        size=\"medium\"\n      >\n        <Button>\n          按钮\n        </Button>\n      </Badge>\n    </>\n  );\n}\n\n// 基础示例\nexport const Default: Story = {\n  args: {\n    children: <Button size=\"large\">aa</Button>,\n    dot: true,\n    count: 2\n  },\n  render: () => <BadgeExample></BadgeExample>\n};\n\n\nfunction CustomExample() {\n  const badgeBlockStyle = {\n    width: '40px',\n    height: '40px',\n    background: '#EEEEEE',\n    border: '1px solid #DCDCDC',\n    borderRadius: '3px',\n  };\n\n  return (<div className=\"flex gap-8\">\n\n    <Badge count=\"2\" dot>\n      <div style={badgeBlockStyle}></div>\n    </Badge>\n    <Badge count=\"hot\">\n      <div style={badgeBlockStyle}></div>\n    </Badge>\n    <Badge count=\"new\" color=\"var(--td-success-color)\">\n      <div style={badgeBlockStyle}></div>\n    </Badge>\n    <Badge count=\"100\" color=\"var(--td-warning-color)\" shape=\"round\">\n      <div style={badgeBlockStyle}></div>\n    </Badge>\n  </div>)\n}\n\n// 基础示例\nexport const Custom: Story = {\n\n  render: () => <CustomExample></CustomExample>\n};\n"],"names":["meta","title","component","Badge","tags","BadgeExample","React","createElement","Fragment","count","shape","size","Button","Default","args","children","dot","render","CustomExample","badgeBlockStyle","width","height","background","border","borderRadius","className","style","color","Custom"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,IAAA,GAA2B;AAC/BC,EAAAA,KAAA,EAAO,kBAAA;AACPC,EAAAA,SAAA,EAAWC,KAAA;EACXC,IAAA,EAAM,CAAC,UAAU;AACnB;AAOA,SAASC,YAAAA,GAAe;AACtB,EAAA,sBACEC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,EAAA,IAAA,iBACEF,KAAA,CAAAC,aAAA,CAACJ,KAAA,EAAA;AACCM,IAAAA,KAAA,EAAO,GAAA;AACPC,IAAAA,KAAA,EAAM,QAAA;AACNC,IAAAA,IAAA,EAAK;AAAA,GAAA,iBAELL,KAAA,CAAAC,aAAA,CAACK,cAAO,cAER,CACF,CACF,CAAA;AAEJ;AAGO,IAAMC,OAAA,GAAiB;AAC5BC,EAAAA,IAAA,EAAM;AACJC,IAAAA,QAAA,iBAAUT,KAAA,CAAAC,aAAA,CAACK,MAAA,EAAA;AAAOD,MAAAA,IAAA,EAAK;OAAQ,IAAE,CAAA;AACjCK,IAAAA,GAAA,EAAK,IAAA;AACLP,IAAAA,KAAA,EAAO;GACT;EACAQ,MAAA,EAAQ,SAARA,MAAAA,GAAA;IAAA,sBAAcX,KAAA,CAAAC,aAAA,CAACF,YAAA,EAAA,IAAa,CAAA;AAAA,EAAA;AAC9B;AAGA,SAASa,aAAAA,GAAgB;AACvB,EAAA,IAAMC,eAAA,GAAkB;AACtBC,IAAAA,KAAA,EAAO,MAAA;AACPC,IAAAA,MAAA,EAAQ,MAAA;AACRC,IAAAA,UAAA,EAAY,SAAA;AACZC,IAAAA,MAAA,EAAQ,mBAAA;AACRC,IAAAA,YAAA,EAAc;GAChB;AAEA,EAAA,sBAAQlB,KAAA,CAAAC,aAAA,CAAC;AAAIkB,IAAAA,SAAA,EAAU;AAAA,GAAA,qCAEpBtB,KAAA,EAAA;AAAMM,IAAAA,KAAA,EAAM,GAAA;AAAIO,IAAAA,GAAA,EAAG;AAAA,GAAA,iBAClBV,KAAA,CAAAC,aAAA,CAAC;AAAImB,IAAAA,KAAA,EAAOP;GAAiB,CAC/B,CAAA,iBACAb,KAAA,CAAAC,aAAA,CAACJ,KAAA,EAAA;AAAMM,IAAAA,OAAM;AAAA,GAAA,iBACXH,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AAAImB,IAAAA,KAAA,EAAOP;GAAiB,CAC/B,kBACAb,KAAA,CAAAC,aAAA,CAACJ,KAAA,EAAA;AAAMM,IAAAA,KAAA,EAAM,KAAA;AAAMkB,IAAAA,KAAA,EAAM;AAAA,GAAA,qCACtB,KAAA,EAAA;AAAID,IAAAA,KAAA,EAAOP;GAAiB,CAC/B,CAAA,iBACAb,KAAA,CAAAC,aAAA,CAACJ;AAAMM,IAAAA,KAAA,EAAM,KAAA;AAAMkB,IAAAA,KAAA,EAAM,yBAAA;AAA0BjB,IAAAA,KAAA,EAAM;AAAA,GAAA,qCACtD,KAAA,EAAA;AAAIgB,IAAAA,KAAA,EAAOP;GAAiB,CAC/B,CACF,CAAA;AACF;AAGO,IAAMS,MAAA,GAAgB;EAE3BX,MAAA,EAAQ,SAARA,MAAAA,GAAA;IAAA,sBAAcX,KAAA,CAAAC,aAAA,CAACW,aAAA,EAAA,IAAc,CAAA;AAAA,EAAA;AAC/B;;;;"}