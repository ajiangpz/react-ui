{"version":3,"file":"plugin.js","sources":["../../../components/Dialog/plugin.tsx"],"sourcesContent":["import React from 'react';\nimport { render } from \"../utils/react-render\";\nimport DialogComponent, { DialogProps } from \"./Dialog\";\nimport { getAttach } from '../utils/dom';\nimport { DialogOptions, DialogMethod, DialogConfirmMethod, DialogAlertMethod, DialogInstance } from './type';\nimport PluginContainer from '../common/PluginContainer';\nimport ConfigProvider from '../config-provider';\n\nexport interface DialogPluginType extends DialogMethod {\n    alert: DialogAlertMethod;\n    confirm: DialogConfirmMethod;\n}\n\n\nconst createDialog: DialogPluginType = (props: DialogOptions): DialogInstance => {\n    const dialogRef = React.createRef<DialogInstance>();\n    const options = { ...props };\n    const { visible = true } = options;\n\n    const fragment = document.createDocumentFragment();\n\n    const dGlobalConfig = ConfigProvider.getGlobalConfig();\n    render(<PluginContainer globalConfig={dGlobalConfig}><DialogComponent {...(options as DialogProps)} visible={visible} ref={dialogRef} isPlugin /></PluginContainer>, fragment); const container = getAttach(options.attach);\n\n    if (container) {\n        container.appendChild(fragment);\n    } else {\n        console.error('Dialog', 'attach is not exist');\n    }\n\n    const dialogNode: DialogInstance = {\n        show: () => {\n            requestAnimationFrame(() => {\n                container?.appendChild(fragment);\n                dialogRef.current?.show();\n            });\n        },\n        hide: () => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.destroy();\n            });\n        },\n        setConfirmLoading: (loading: boolean) => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.setConfirmLoading(loading);\n            });\n        },\n        update: (updateOptions: DialogOptions) => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.update(updateOptions);\n            });\n        },\n        destroy: () => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.destroy();\n            });\n        },\n    };\n    return dialogNode;\n};\n\nconst confirm: DialogConfirmMethod = (props: DialogOptions) => createDialog(props);\n\nconst alert: DialogAlertMethod = (props: Omit<DialogOptions, 'confirmBtn'>) => {\n    const options = { ...props };\n    options.cancelBtn = null;\n    return createDialog(options);\n};\n\ncreateDialog.alert = alert;\ncreateDialog.confirm = confirm;\n\nexport const DialogPlugin = createDialog;\n\n"],"names":["createDialog","props","dialogRef","React","createRef","options","_objectSpread","_options$visible","visible","fragment","document","createDocumentFragment","dGlobalConfig","ConfigProvider","getGlobalConfig","render","createElement","PluginContainer","globalConfig","DialogComponent","ref","isPlugin","container","getAttach","attach","appendChild","console","error","dialogNode","show","requestAnimationFrame","_dialogRef$current","current","hide","_dialogRef$current2","destroy","setConfirmLoading","loading","_dialogRef$current3","update","updateOptions","_dialogRef$current4","_dialogRef$current5","confirm","alert","cancelBtn","DialogPlugin"],"mappings":"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"}