{"version":3,"file":"Dialog.js","sources":["../../../components/Dialog/hooks/useDialogDrag.ts","../../../components/Dialog/hooks/useDialogEsc.ts","../../../components/Dialog/hooks/useDialogPosition.ts","../../../components/Dialog/hooks/useLockStyle.ts","../../../components/Dialog/utils.ts","../../../components/Dialog/Dialog.tsx"],"sourcesContent":["import { RefObject, useRef } from 'react';\nimport useMouseEvent from '../../hooks/useMouseEvent';\n\ninterface DialogDragProps {\n  dialogCardRef: RefObject<HTMLDivElement | null>;\n  canDraggable?: boolean;\n}\n\nconst useDialogDrag = (props: DialogDragProps) => {\n  const { dialogCardRef, canDraggable } = props;\n\n  const validWindow = typeof window === 'object';\n  const screenHeight = validWindow\n    ? window.innerHeight || document.documentElement.clientHeight\n    : undefined;\n  const screenWidth = validWindow\n    ? window.innerWidth || document.documentElement.clientWidth\n    : undefined;\n\n  const dragOffset = useRef({ x: 0, y: 0 });\n\n  useMouseEvent(dialogCardRef, {\n    enabled: canDraggable,\n    onDown: (e) => {\n      if (\n        !validWindow ||\n        screenWidth === undefined ||\n        screenHeight === undefined ||\n        !dialogCardRef.current\n      )\n        return;\n      const { offsetLeft, offsetTop, offsetWidth, offsetHeight, style } =\n        dialogCardRef.current;\n      if (offsetWidth > screenWidth || offsetHeight > screenHeight) return;\n      style.cursor = 'move';\n      dragOffset.current = {\n        x: e.clientX - offsetLeft,\n        y: e.clientY - offsetTop,\n      };\n    },\n    onMove: (e) => {\n      if (\n        !validWindow ||\n        screenWidth === undefined ||\n        screenHeight === undefined ||\n        !dialogCardRef.current\n      )\n        return;\n      const { offsetWidth, offsetHeight, style } = dialogCardRef.current;\n      let diffX = e.clientX - dragOffset.current.x;\n      let diffY = e.clientY - dragOffset.current.y;\n      // 拖拽上左边界限制\n      if (diffX < 0) diffX = 0;\n      if (diffY < 0) diffY = 0;\n      if (screenWidth - offsetWidth - diffX < 0)\n        diffX = screenWidth - offsetWidth;\n      if (screenHeight - offsetHeight - diffY < 0)\n        diffY = screenHeight - offsetHeight;\n      style.position = 'absolute';\n      style.left = `${diffX}px`;\n      style.top = `${diffY}px`;\n    },\n    onUp: () => {\n      if (dialogCardRef.current) dialogCardRef.current.style.cursor = 'default';\n    },\n  });\n};\n\nexport default useDialogDrag;\n","import { useEffect, type RefObject } from 'react';\n\nconst dialogSet: Set<RefObject<HTMLElement | null>> = new Set();\n\nconst useDialogEsc = (\n  visible: boolean | undefined,\n  dialog: RefObject<HTMLElement | null>,\n) => {\n  useEffect(() => {\n    if (visible) {\n      // 将 dialog 添加至 Set 对象\n      if (dialog?.current) {\n        dialogSet.add(dialog);\n        dialog?.current?.focus();\n      }\n    } else if (dialogSet.has(dialog)) {\n      // 将 dialog 从 Set 对象删除\n      dialogSet.delete(dialog);\n      const dialogList = [...dialogSet];\n      // 将 Set 对象中最后一个 dialog 设置为 focus\n      dialogList[dialogList.length - 1]?.current?.focus();\n    }\n    return () => {\n      // 从 Set 对象删除无效的 dialog\n      dialogSet.forEach((item) => {\n        if (item?.current === null) {\n          dialogSet.delete(item);\n        }\n      });\n    };\n  }, [visible, dialog]);\n};\n\nexport default useDialogEsc;\n","import { RefObject, useEffect, useRef } from 'react';\nimport useIsomorphicLayoutEffect from '../../hooks/useLayoutEffect';\ntype Position = { x: number; y: number };\nexport default function useDialogPosition(\n  visible: boolean | undefined,\n  dialogCardRef: RefObject<HTMLElement | null>,\n) {\n  const mousePosRef = useRef<Position>(null);\n\n  const getClickPosition = (e: MouseEvent) => {\n    if (mousePosRef) {\n      mousePosRef.current = {\n        x: e.clientX,\n        y: e.clientY,\n      };\n      setTimeout(() => {\n        mousePosRef.current = null;\n      }, 100);\n    }\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    document.addEventListener('click', getClickPosition, true);\n    return () => {\n      document.removeEventListener('click', getClickPosition, true);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!visible) return;\n    // 动画渲染初始位置\n    if (mousePosRef.current && dialogCardRef.current) {\n      // eslint-disable-next-line\n      dialogCardRef.current.style.transformOrigin = `${mousePosRef.current.x - dialogCardRef.current.offsetLeft}px ${\n        mousePosRef.current.y - dialogCardRef.current.offsetTop\n      }px`;\n    }\n  }, [visible, dialogCardRef]);\n}\n","import { useRef, useCallback } from 'react';\nimport { getScrollbarWidth } from '../../utils/getScrollbarWidth';\nimport useLayoutEffect from '../../hooks/useLayoutEffect';\nimport type { TdDialogProps } from '../type';\nlet key = 1;\n\nexport default function useDialogLockStyle({\n  preventScrollThrough,\n  visible,\n  mode,\n  showInAttachedElement,\n}: Partial<TdDialogProps>) {\n  const lockStyleRef = useRef<HTMLStyleElement>(null);\n  const timerRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const clearStyleFunc = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = setTimeout(() => {\n      lockStyleRef.current?.parentNode?.removeChild?.(lockStyleRef.current);\n    }, 150);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined' || !visible) return;\n    if (!lockStyleRef.current) {\n      lockStyleRef.current = document.createElement('style');\n    }\n    const hasScrollBar =\n      document.documentElement.scrollHeight >\n      document.documentElement.clientHeight;\n    const scrollbarWidth = hasScrollBar ? getScrollbarWidth() : 0;\n\n    lockStyleRef.current.dataset.id = `td_dialog_${+new Date()}_${(key += 1)}`;\n    lockStyleRef.current.innerHTML = `\n      html body {\n        overflow-y: hidden;\n        width: calc(100% - ${scrollbarWidth}px);\n      }\n    `;\n\n    return clearStyleFunc;\n  }, [visible, clearStyleFunc]);\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined') return;\n    if (mode !== 'modal' || !preventScrollThrough || showInAttachedElement)\n      return;\n\n    if (visible) {\n      if (lockStyleRef.current) document.head.appendChild(lockStyleRef.current);\n    } else {\n      clearStyleFunc();\n    }\n  }, [\n    preventScrollThrough,\n    visible,\n    mode,\n    showInAttachedElement,\n    clearStyleFunc,\n  ]);\n}\n","export function parseValueToPx(value: Number | String) {\n  if (typeof value === 'number') return `${value}px`;\n  return value;\n}\n","import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\nimport { isUndefined } from 'lodash-es';\nimport type { StyledProps } from '../common';\nimport Portal from '../common/Portal';\nimport useAttach from '../hooks/useAttach';\nimport useConfig from '../hooks/useConfig';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useSetState from '../hooks/useSetState';\n// import { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { dialogDefaultProps } from './defaultProps';\nimport DialogCard from './DialogCard';\nimport useDialogDrag from './hooks/useDialogDrag';\nimport useDialogEsc from './hooks/useDialogEsc';\nimport useDialogPosition from './hooks/useDialogPosition';\nimport useLockStyle from './hooks/useLockStyle';\nimport type { DialogInstance, TdDialogProps } from './type';\nimport { parseValueToPx } from './utils';\n\nexport interface DialogProps extends TdDialogProps, StyledProps {\n    isPlugin?: boolean; // 是否以插件形式调用\n}\n\nconst Dialog = forwardRef<DialogInstance, DialogProps>((originalProps, ref) => {\n    const props = useDefaultProps<DialogProps>(originalProps, dialogDefaultProps);\n    const { children, ...restProps } = props;\n    const { classPrefix } = useConfig();\n\n    const componentCls = `${classPrefix}-dialog`;\n    const wrapRef = useRef<HTMLElement>(null);\n    const maskRef = useRef<HTMLElement>(null);\n    const contentClickRef = useRef(false);\n    const dialogCardRef = useRef<HTMLDivElement>(null);\n    const dialogPosition = useRef(null);\n    const portalRef = useRef(null);\n    const [state, setState] = useSetState<DialogProps>({ isPlugin: false, ...restProps });\n    // const [local] = useLocaleReceiver('dialog');\n\n    const {\n        className,\n        dialogClassName,\n        style,\n        width,\n        mode,\n        zIndex,\n        visible,\n        attach,\n        onBeforeOpen,\n        onBeforeClose,\n        onOpened,\n        onCancel,\n        onConfirm,\n        onClose,\n        onClosed,\n        isPlugin,\n        draggable,\n        onOverlayClick,\n        onEscKeydown,\n        closeOnEscKeydown,\n        confirmOnEnter,\n        showOverlay,\n        showInAttachedElement,\n        closeOnOverlayClick,\n        destroyOnClose,\n        preventScrollThrough,\n        onCloseBtnClick,\n        forceRender,\n        lazy,\n        ...restState\n    } = state;\n\n    const dialogAttach = useAttach('dialog', attach);\n\n    useLockStyle({ preventScrollThrough, visible, mode, showInAttachedElement });\n    useDialogEsc(visible, wrapRef);\n    useDialogPosition(visible, dialogCardRef);\n    useDialogDrag({\n        dialogCardRef,\n        canDraggable: draggable && mode === 'modeless',\n    });\n\n    useEffect(() => {\n        if (isPlugin) {\n            return;\n        }\n        // 插件式调用不会更新props, 只有组件式调用才会更新props\n        setState((prevState) => ({ ...prevState, ...props }));\n    }, [props, setState, isPlugin]);\n\n    useImperativeHandle(ref, () => ({\n        show() {\n            setState({ visible: true });\n        },\n        hide() {\n            setState({ visible: false });\n        },\n        setConfirmLoading: (loading: boolean) => {\n            setState({ confirmLoading: loading });\n        },\n        destroy() {\n            setState({ visible: false, destroyOnClose: true });\n        },\n        update(newOptions) {\n            setState((prevState) => ({ ...prevState, ...newOptions }));\n        },\n    }));\n\n    // @ts-ignore 兼容旧版本 2.0 移除\n    if (props.mode === 'normal') {\n        console.error('Dialog', 'mode=\"normal\" is not supported, please use DialogCard.');\n        return <DialogCard {...props} />;\n    }\n\n    const onMaskClick = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (showOverlay && (closeOnOverlayClick)) {\n            // 判断点击事件初次点击是否为内容区域\n            if (contentClickRef.current) {\n                contentClickRef.current = false;\n            } else if (e.target === dialogPosition.current) {\n                onOverlayClick?.({ e });\n                onClose?.({ e, trigger: 'overlay' });\n            }\n        }\n    };\n\n    const handleCancel = ({ e }) => {\n        onCancel?.({ e });\n        onClose?.({ e, trigger: 'cancel' });\n    };\n\n    const handleClose = ({ e }) => {\n        onCloseBtnClick?.({ e });\n        onClose?.({ e, trigger: 'close-btn' });\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n        if (e.key === 'Escape') {\n            e.stopPropagation();\n            onEscKeydown?.({ e });\n            if (closeOnEscKeydown) {\n                onClose?.({ e, trigger: 'esc' });\n            }\n        } else if (e.key === 'Enter' || e.key === 'NumpadEnter') {\n            // 回车键触发点击确认事件\n            e.stopPropagation();\n            confirmOnEnter && onConfirm?.({ e });\n        }\n    };\n\n    const onAnimateLeave = () => {\n        onClosed?.();\n\n        if (!wrapRef.current) return;\n        wrapRef.current.style.display = 'none';\n    };\n\n    const onAnimateStart = () => {\n        if (!wrapRef.current) return;\n        onBeforeOpen?.();\n        wrapRef.current.style.display = 'block';\n    };\n\n    const onInnerAnimateStart = () => {\n        if (!dialogCardRef.current) return;\n        dialogCardRef.current.style.display = 'block';\n    };\n\n    const onInnerAnimateLeave = () => {\n        if (!dialogCardRef.current) return;\n        dialogCardRef.current.style.display = 'none';\n    };\n\n    const renderMask = () => {\n        if (mode !== 'modal') return null;\n\n        return showOverlay ? (\n            <CSSTransition\n                in={visible}\n                appear\n                timeout={300}\n                classNames={`${componentCls}-fade`}\n                mountOnEnter\n                unmountOnExit\n                nodeRef={maskRef}\n            >\n                <div ref={maskRef} className={`${componentCls}__mask`} />\n            </CSSTransition>\n        ) : null;\n    };\n    return (\n        <CSSTransition\n            in={visible}\n            appear\n            timeout={300}\n            mountOnEnter={isUndefined(forceRender) ? lazy : !forceRender}\n            unmountOnExit={destroyOnClose}\n            nodeRef={portalRef}\n            onEnter={onAnimateStart}\n            onEntered={onOpened}\n            onExit={() => onBeforeClose?.()}\n            onExited={onAnimateLeave}\n        >\n            <Portal attach={dialogAttach} ref={portalRef}>\n                <div\n                    ref={wrapRef}\n                    className={classNames(className, `${componentCls}__ctx`, `${componentCls}__${mode}`, {\n                        [`${componentCls}__ctx--fixed`]: !showInAttachedElement,\n                        [`${componentCls}__ctx--absolute`]: showInAttachedElement,\n                    })}\n                    style={{ zIndex, display: 'none' }}\n                    onKeyDown={handleKeyDown}\n                    tabIndex={0}\n                >\n                    {renderMask()}\n                    <div className={`${componentCls}__wrap`}>\n                        <div\n                            ref={dialogPosition}\n                            className={classNames(`${componentCls}__position`, {\n                                [`${componentCls}--top`]: !!props.top || props.placement === 'top',\n                                [`${componentCls}--center`]: props.placement === 'center' && !props.top,\n                            })}\n                            style={{ paddingTop: parseValueToPx(props.top) }}\n                            onClick={onMaskClick}\n                        >\n                            <CSSTransition\n                                in={visible}\n                                appear\n                                timeout={300}\n                                classNames={`${componentCls}-zoom`}\n                                nodeRef={dialogCardRef}\n                                onEnter={onInnerAnimateStart}\n                                onExited={onInnerAnimateLeave}\n                            >\n                                <DialogCard\n                                    ref={dialogCardRef}\n                                    {...restState}\n                                    className={dialogClassName}\n                                    style={{ ...style, width: parseValueToPx(width || style?.width) }}\n                                    onConfirm={onConfirm}\n                                    onCancel={handleCancel}\n                                    onCloseBtnClick={handleClose}\n                                >\n                                    {children}\n                                </DialogCard>\n                            </CSSTransition>\n                        </div>\n                    </div>\n                </div>\n            </Portal>\n        </CSSTransition>\n    );\n});\n\nDialog.displayName = 'Dialog';\n\nexport default Dialog;\n"],"names":["useDialogDrag","props","dialogCardRef","canDraggable","validWindow","window","_typeof","screenHeight","innerHeight","document","documentElement","clientHeight","screenWidth","innerWidth","clientWidth","dragOffset","useRef","x","y","useMouseEvent","enabled","onDown","e","current","_dialogCardRef$curren","offsetLeft","offsetTop","offsetWidth","offsetHeight","style","cursor","clientX","clientY","onMove","_dialogCardRef$curren2","diffX","diffY","position","left","concat","top","onUp","dialogSet","Set","useDialogEsc","visible","dialog","useEffect","_dialog$current","add","focus","has","_dialogList","dialogList","_toConsumableArray","length","forEach","item","useDialogPosition","mousePosRef","getClickPosition","setTimeout","useIsomorphicLayoutEffect","addEventListener","removeEventListener","transformOrigin","key","useDialogLockStyle","_ref","preventScrollThrough","mode","showInAttachedElement","lockStyleRef","timerRef","clearStyleFunc","useCallback","clearTimeout","_lockStyleRef$current","_lockStyleRef$current2","parentNode","removeChild","call","useLayoutEffect","createElement","hasScrollBar","scrollHeight","scrollbarWidth","getScrollbarWidth","dataset","id","Date","innerHTML","head","appendChild","parseValueToPx","value","Dialog","forwardRef","originalProps","ref","useDefaultProps","dialogDefaultProps","children","restProps","_objectWithoutProperties","_excluded","_useConfig","useConfig","classPrefix","componentCls","wrapRef","maskRef","contentClickRef","dialogPosition","portalRef","_useSetState","useSetState","_objectSpread","isPlugin","_useSetState2","_slicedToArray","state","setState","className","dialogClassName","width","zIndex","attach","onBeforeOpen","onBeforeClose","onOpened","onCancel","onConfirm","onClose","onClosed","draggable","onOverlayClick","onEscKeydown","closeOnEscKeydown","confirmOnEnter","showOverlay","closeOnOverlayClick","destroyOnClose","onCloseBtnClick","forceRender","lazy","restState","_excluded2","dialogAttach","useAttach","useLockStyle","prevState","useImperativeHandle","show","hide","setConfirmLoading","loading","confirmLoading","destroy","update","newOptions","console","error","React","DialogCard","onMaskClick","target","trigger","handleCancel","handleClose","_ref2","handleKeyDown","stopPropagation","onAnimateLeave","display","onAnimateStart","onInnerAnimateStart","onInnerAnimateLeave","renderMask","CSSTransition","appear","timeout","classNames","mountOnEnter","unmountOnExit","nodeRef","isUndefined","onEnter","onEntered","onExit","onExited","Portal","_defineProperty","onKeyDown","tabIndex","placement","paddingTop","onClick","displayName"],"mappings":"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"}