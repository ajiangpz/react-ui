{"version":3,"file":"Form.stories.js","sources":["../../../components/form/Form.stories.tsx"],"sourcesContent":["\nimport { Meta, StoryObj } from \"@storybook/react\";\n\n\n\n\nimport {\n    Form\n} from './index';\nimport { Input } from \"../input\";\nimport { Switch } from \"../switch\";\nimport { Checkbox } from '../checkbox';\nimport { Button } from \"../button\";\nimport { NotificationProvider, useNotification } from \"../notification\";\nimport type { FormProps } from './index';\n\nimport \"@/style\";\n\nconst { FormItem } = Form;\n\nexport const BaseForm = () => {\n    const [form] = Form.useForm();\n\n    const name = Form.useWatch('name', form);\n    const gender = Form.useWatch('gender', form);\n    console.log('name', name);\n    console.log('gender', gender);\n    const { success } = useNotification();\n    const onSubmit: FormProps['onSubmit'] = (e) => {\n        console.log(e);\n        if (e.validateResult === true) {\n            success({ title: \"成功提示\", message: '提交成功' });\n        }\n    };\n\n    const onReset: FormProps['onReset'] = (e) => {\n        console.log(e);\n        success({ title: \"成功提示\", message: '重置成功' });\n    };\n\n    const setMessage = () => {\n        console.log(form);\n        form.setFields([\n            { name: 'name', status: 'error', validateMessage: { type: 'error', message: '输入有误' } },\n            { name: 'birthday', status: 'warning', validateMessage: { type: 'warning', message: '时间有误' } },\n        ]);\n    };\n\n    return (\n        <Form form={form} onSubmit={onSubmit} onReset={onReset} colon labelWidth={100}>\n            <FormItem label=\"姓名\" name=\"name\" requiredMark>\n                <Input />\n            </FormItem>\n\n\n            <FormItem label=\"课程\" name=\"course\" requiredMark>\n                <Checkbox.Group>\n                    <Checkbox value=\"la\">加辣</Checkbox>\n                    <Checkbox value=\"ma\">加麻</Checkbox>\n                    <Checkbox value=\"nocong\">不要葱花</Checkbox>\n                </Checkbox.Group>\n            </FormItem>\n            <FormItem label=\"状态\" name=\"status\" for=\"status\">\n                <Switch />\n            </FormItem>\n            <FormItem label=\"自定义内容\" for=\"custom\">\n                <div style={{ display: 'flex', gap: 8 }}>\n                    <FormItem name=\"custom\">\n                        <Input />\n                    </FormItem>\n\n                </div>\n            </FormItem>\n            <FormItem style={{ marginLeft: 100 }}>\n                <div className=\"flex gap-2\">\n\n                    <Button type=\"submit\" theme=\"primary\">\n                        提交\n                    </Button>\n                    <Button onClick={setMessage}>设置信息</Button>\n                    <Button type=\"reset\" theme=\"default\">\n                        重置\n                    </Button>\n                </div>\n\n            </FormItem>\n        </Form>\n    );\n}\n\n\nconst meta: Meta = {\n    args: {},\n    component: Form,\n    tags: ['autodocs'],\n    decorators: [\n        // 修改装饰器，使用从控制台传入的参数\n        (Story, context) => (\n            <NotificationProvider\n                position={context.args.position}\n                maxStack={context.args.maxStack}\n                displayDuration={context.args.displayDuration}\n            >\n                <Story />\n            </NotificationProvider>\n        )\n    ]\n}\n\nexport default meta;\n\nexport const Default: StoryObj<typeof Form> = {\n    args: {},\n    render: () => <BaseForm></BaseForm>\n}"],"names":["FormItem","Form","BaseForm","_Form$useForm","useForm","_Form$useForm2","_slicedToArray","form","name","useWatch","gender","console","log","_useNotification","useNotification","success","onSubmit","e","validateResult","title","message","onReset","setMessage","setFields","status","validateMessage","type","React","createElement","colon","labelWidth","label","requiredMark","Input","Checkbox","Group","value","Switch","style","display","gap","marginLeft","className","Button","theme","onClick","meta","args","component","tags","decorators","Story","context","NotificationProvider","position","maxStack","displayDuration","Default","render"],"mappings":"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"}