{"version":3,"file":"FormContext.js","sources":["../../../components/form/FormContext.tsx"],"sourcesContent":["import React from 'react';\nimport { TdFormProps, TdFormListProps, NamePath } from './type';\nimport { FormItemInstance } from './FormItem';\nimport { InternalFormInstance } from './hooks/interface';\n\nconst FormContext = React.createContext<{\n  form?: InternalFormInstance;\n  labelWidth?: TdFormProps['labelWidth'];\n  statusIcon?: TdFormProps['statusIcon'];\n  labelAlign: TdFormProps['labelAlign'];\n  layout: TdFormProps['layout'];\n  colon: TdFormProps['colon'];\n  initialData: TdFormProps['initialData'];\n  requiredMark: TdFormProps['requiredMark'];\n  requiredMarkPosition: TdFormProps['requiredMarkPosition'];\n  scrollToFirstError: TdFormProps['scrollToFirstError'];\n  showErrorMessage: TdFormProps['showErrorMessage'];\n  resetType: TdFormProps['resetType'];\n  disabled: TdFormProps['disabled'];\n  rules: TdFormProps['rules'];\n  errorMessage: TdFormProps['errorMessage'];\n  formMapRef: React.RefObject<Map<any, React.RefObject<FormItemInstance>>>;\n  floatingFormDataRef: React.RefObject<Record<any, any>>;\n  onFormItemValueChange: (changedValue: Record<string, unknown>) => void;\n}>({\n  form: undefined,\n  labelWidth: '100px',\n  labelAlign: 'right',\n  layout: 'vertical',\n  colon: false,\n  initialData: {},\n  requiredMark: undefined,\n  requiredMarkPosition: undefined,\n  scrollToFirstError: undefined,\n  showErrorMessage: undefined,\n  resetType: 'empty',\n  disabled: undefined,\n  rules: undefined,\n  errorMessage: undefined,\n  statusIcon: undefined,\n  onFormItemValueChange: undefined,\n  formMapRef: undefined,\n  floatingFormDataRef: undefined,\n});\n\nexport const useFormContext = () => React.useContext(FormContext);\n\nexport default FormContext;\n\nexport const FormListContext = React.createContext<{\n  name: NamePath;\n  rules: TdFormListProps['rules'];\n  formListMapRef: React.RefObject<Map<any, React.RefObject<FormItemInstance>>>;\n  initialData: TdFormListProps['initialData'];\n  form?: InternalFormInstance;\n}>({\n  name: undefined,\n  rules: undefined,\n  formListMapRef: undefined,\n  initialData: [],\n  form: undefined,\n});\n\nexport const useFormListContext = () => React.useContext(FormListContext);\n"],"names":["FormContext","React","createContext","form","labelWidth","labelAlign","layout","colon","initialData","requiredMark","requiredMarkPosition","scrollToFirstError","showErrorMessage","resetType","disabled","rules","errorMessage","statusIcon","onFormItemValueChange","formMapRef","floatingFormDataRef","useFormContext","useContext","FormListContext","name","formListMapRef","useFormListContext"],"mappings":";;;AAKA,IAAMA,WAAA,gBAAcC,MAAMC,aAAA,CAmBvB;EACDC,IAAA,EAAM,KAAA,CAAA;AACNC,EAAAA,UAAA,EAAY,OAAA;AACZC,EAAAA,UAAA,EAAY,OAAA;AACZC,EAAAA,MAAA,EAAQ,UAAA;AACRC,EAAAA,KAAA,EAAO,KAAA;EACPC,aAAa,EAAC;EACdC,YAAA,EAAc,KAAA,CAAA;EACdC,oBAAA,EAAsB,KAAA,CAAA;EACtBC,kBAAA,EAAoB,KAAA,CAAA;EACpBC,gBAAA,EAAkB,KAAA,CAAA;AAClBC,EAAAA,SAAA,EAAW,OAAA;EACXC,QAAA,EAAU,KAAA,CAAA;EACVC,KAAA,EAAO,KAAA,CAAA;EACPC,YAAA,EAAc,KAAA,CAAA;EACdC,UAAA,EAAY,KAAA,CAAA;EACZC,qBAAA,EAAuB,KAAA,CAAA;EACvBC,UAAA,EAAY,KAAA,CAAA;AACZC,EAAAA,mBAAA,EAAqB,KAAA;AACvB,CAAC;AAEM,IAAMC,cAAA,GAAiB,SAAjBA,cAAAA,GAAA;AAAA,EAAA,OAAuBpB,KAAA,CAAMqB,UAAA,CAAWtB,WAAW,CAAA;AAAA;IAInDuB,eAAA,gBAAkBtB,MAAMC,aAAA,CAMlC;EACDsB,IAAA,EAAM,KAAA,CAAA;EACNT,KAAA,EAAO,KAAA,CAAA;EACPU,cAAA,EAAgB,KAAA,CAAA;AAChBjB,EAAAA,aAAa,EAAC;AACdL,EAAAA,IAAA,EAAM,KAAA;AACR,CAAC;AAEM,IAAMuB,kBAAA,GAAqB,SAArBA,kBAAAA,GAAA;AAAA,EAAA,OAA2BzB,KAAA,CAAMqB,UAAA,CAAWC,eAAe,CAAA;AAAA;;;;"}