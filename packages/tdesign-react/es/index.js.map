{"version":3,"file":"index.js","sources":["../../components/layout/Container.tsx","../../components/layout/Grid.tsx","../../components/layout/Flex.tsx","../../components/layout/Row.tsx","../../components/layout/Col.tsx","../../components/alert/defaultProps.ts","../../components/alert/Alert.tsx","../../components/alert/index.ts","../../components/badge/defaultProps.ts","../../components/badge/Badge.tsx","../../components/badge/index.ts","../../components/select/defaultProps.ts","../../components/select/OptionGroup.tsx","../../components/select/Option.tsx","../../components/select/utils/helper.ts","../../components/select/hooks/usePanelVirtualScroll.ts","../../components/select/PopupContent.tsx","../../components/select/hooks/useOptions.ts","../../components/select/Select.tsx","../../components/select/index.tsx","../../components/dialog/defaultProps.ts","../../components/dialog/DialogCard.tsx","../../components/dialog/hooks/useDialogDrag.ts","../../components/dialog/hooks/useDialogEsc.ts","../../components/dialog/hooks/useDialogPosition.ts","../../components/dialog/hooks/useLockStyle.ts","../../components/dialog/utils.ts","../../components/dialog/Dialog.tsx","../../components/dialog/plugin.tsx","../../components/dialog/index.ts"],"sourcesContent":["import React from 'react';\n\ninterface ContainerProps {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\n}\n\nconst maxWidthClasses = {\n  sm: 'max-w-screen-sm',\n  md: 'max-w-screen-md',\n  lg: 'max-w-screen-lg',\n  xl: 'max-w-screen-xl',\n  '2xl': 'max-w-screen-2xl',\n  full: 'max-w-full',\n};\n\nexport const Container: React.FC<ContainerProps> = ({\n  children,\n  className = '',\n  maxWidth = 'xl',\n}) => {\n  return (\n    <div className={`mx-auto px-4 ${maxWidthClasses[maxWidth]} ${className}`}>\n      {children}\n    </div>\n  );\n}; ","import React from \"react\";\nimport clsx from \"clsx\";\nconst gridClassMap = {\n  cols: {\n    12: \"grid-cols-12\",\n    11: \"grid-cols-11\",\n    10: \"grid-cols-10\",\n    9: \"grid-cols-9\",\n    8: \"grid-cols-8\",\n    7: \"grid-cols-7\",\n    6: \"grid-cols-6\",\n    5: \"grid-cols-5\",\n    4: \"grid-cols-4\",\n    3: \"grid-cols-3\",\n    2: \"grid-cols-2\",\n    1: \"grid-cols-1\"\n  },\n  gap: {\n    0: \"gap-0\",\n    1: \"gap-1\",\n    2: \"gap-2\",\n    3: \"gap-3\",\n    4: \"gap-4\",\n    5: \"gap-5\",\n    6: \"gap-6\",\n    8: \"gap-8\",\n    10: \"gap-10\",\n    12: \"gap-12\",\n    16: \"gap-16\"\n  }\n};\ntype Cols = keyof typeof gridClassMap.cols;\ntype Gap = keyof typeof gridClassMap.gap;\ninterface GridProps extends React.HTMLAttributes<HTMLDivElement> {\n  cols?: Cols; // 默认12栅格\n  gap?: Gap; // 间距\n  children?: React.ReactNode;\n}\n\nexport const Grid: React.FC<GridProps> = ({\n  cols = 12,\n  gap = 4,\n  className,\n  children,\n  ...rest\n}) => {\n  return (\n    <div\n      className={clsx(\n        `grid ${gridClassMap.cols[cols]} ${gridClassMap.gap[gap]}`,\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface FlexProps {\n  children: React.ReactNode;\n  className?: string;\n  direction?: 'row' | 'col' | 'row-reverse' | 'col-reverse';\n  justify?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';\n  align?: 'start' | 'end' | 'center' | 'baseline' | 'stretch';\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  gap?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 8 | 10 | 12 | 16;\n}\n\nconst directionClasses = {\n  row: 'flex-row',\n  col: 'flex-col',\n  'row-reverse': 'flex-row-reverse',\n  'col-reverse': 'flex-col-reverse',\n};\n\nconst justifyClasses = {\n  start: 'justify-start',\n  end: 'justify-end',\n  center: 'justify-center',\n  between: 'justify-between',\n  around: 'justify-around',\n  evenly: 'justify-evenly',\n};\n\nconst alignClasses = {\n  start: 'items-start',\n  end: 'items-end',\n  center: 'items-center',\n  baseline: 'items-baseline',\n  stretch: 'items-stretch',\n};\n\nconst wrapClasses = {\n  nowrap: 'flex-nowrap',\n  wrap: 'flex-wrap',\n  'wrap-reverse': 'flex-wrap-reverse',\n};\n\nconst gapClasses = {\n  0: 'gap-0',\n  1: 'gap-1',\n  2: 'gap-2',\n  3: 'gap-3',\n  4: 'gap-4',\n  5: 'gap-5',\n  6: 'gap-6',\n  8: 'gap-8',\n  10: 'gap-10',\n  12: 'gap-12',\n  16: 'gap-16',\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  children,\n  className = '',\n  direction = 'row',\n  justify = 'start',\n  align = 'stretch',\n  wrap = 'nowrap',\n  gap = 0,\n}) => {\n  return (\n    <div\n      className={`flex ${directionClasses[direction]} ${justifyClasses[justify]} ${alignClasses[align]} ${wrapClasses[wrap]} ${gapClasses[gap]} ${className}`}\n    >\n      {children}\n    </div>\n  );\n}; ","// Row.tsx\nimport React from 'react';\nimport clsx from 'clsx';\nimport { RowProps } from './types';\n\nconst justifyMap = {\n  start: 'justify-start',\n  center: 'justify-center',\n  end: 'justify-end',\n  'space-between': 'justify-between',\n  'space-around': 'justify-around',\n};\n\nconst alignMap = {\n  top: 'items-start',\n  middle: 'items-center',\n  bottom: 'items-end',\n};\n\nexport const Row: React.FC<RowProps> = ({\n  gutter = 0,\n  justify = 'start',\n  align = 'top',\n  className,\n  children,\n}) => {\n  const [horizontal, vertical] = Array.isArray(gutter) ? gutter : [gutter, 0];\n  const rowStyle = {\n    marginLeft: `-${horizontal / 2}px`,\n    marginRight: `-${horizontal / 2}px`,\n    rowGap: vertical,\n  };\n\n  return (\n    <div\n      className={clsx('flex flex-wrap', justifyMap[justify], alignMap[align], className)}\n      style={rowStyle}\n    >\n      {React.Children.map(children, (child: any) =>{\n        return React.cloneElement(child, {\n          style: {\n            paddingLeft: `${horizontal / 2}px`,\n            paddingRight: `${horizontal / 2}px`,\n            paddingTop: `-${vertical / 2}px`,  \n            paddingBottom: `-${vertical / 2}px`,\n            ...(child.props?.style || {}),\n          },\n        })\n      })}\n    </div>\n  );\n};\n","// Col.tsx\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { ColProps } from \"./types\";\n\nimport { tv } from \"tailwind-variants\";\n\nconst SPAN = 24;\n\nfunction toPercent(n: number) {\n  return ((n / SPAN) * 100).toFixed(2).replace(/\\.?0+$/, \"\") + \"%\";\n}\n\nexport const spanVariants: Record<number, string> = {};\nexport const offsetVariants: Record<number, string> = {};\n\nfor (let i = 1; i <= SPAN; i++) {\n  const percent = toPercent(i);\n  spanVariants[i] = `basis-[${percent}] max-w-[${percent}]`;\n  offsetVariants[i] = `ml-[${percent}]`;\n}\n\nexport const col = tv({\n  base: \"box-border min-h-[1px] grow-0\",\n  variants: {\n    span: {\n      1: \"basis-[4.17%] max-w-[4.17%]\",\n      2: \"basis-[8.33%] max-w-[8.33%]\",\n      3: \"basis-[12.5%] max-w-[12.5%]\",\n      4: \"basis-[16.67%] max-w-[16.67%]\",\n      5: \"basis-[20.83%] max-w-[20.83%]\",\n      6: \"basis-[25%] max-w-[25%]\",\n      7: \"basis-[29.17%] max-w-[29.17%]\",\n      8: \"basis-[33.33%] max-w-[33.33%]\",\n      9: \"basis-[37.5%] max-w-[37.5%]\",\n      10: \"basis-[41.67%] max-w-[41.67%]\",\n      11: \"basis-[45.83%] max-w-[45.83%]\",\n      12: \"basis-[50%] max-w-[50%]\",\n      13: \"basis-[54.17%] max-w-[54.17%]\",\n      14: \"basis-[58.33%] max-w-[58.33%]\",\n      15: \"basis-[62.5%] max-w-[62.5%]\",\n      16: \"basis-[66.67%] max-w-[66.67%]\",\n      17: \"basis-[70.83%] max-w-[70.83%]\",\n      18: \"basis-[75%] max-w-[75%]\",\n      19: \"basis-[79.17%] max-w-[79.17%]\",\n      20: \"basis-[83.33%] max-w-[83.33%]\",\n      21: \"basis-[87.5%] max-w-[87.5%]\",\n      22: \"basis-[91.67%] max-w-[91.67%]\",\n      23: \"basis-[95.83%] max-w-[95.83%]\",\n      24: \"basis-[100%] max-w-[100%]\"\n    },\n    offset: {\n      1: \"ml-[4.17%]\",\n      2: \"ml-[8.33%]\",\n      3: \"ml-[12.5%]\",\n      4: \"ml-[16.67%]\",\n      5: \"ml-[20.83%]\",\n      6: \"ml-[25%]\",\n      7: \"ml-[29.17%]\",\n      8: \"ml-[33.33%]\",\n      9: \"ml-[37.5%]\",\n      10: \"ml-[41.67%]\",\n      11: \"ml-[45.83%]\",\n      12: \"ml-[50%]\",\n      13: \"ml-[54.17%]\",\n      14: \"ml-[58.33%]\",\n      15: \"ml-[62.5%]\",\n      16: \"ml-[66.67%]\",\n      17: \"ml-[70.83%]\",\n      18: \"ml-[75%]\",\n      19: \"ml-[79.17%]\",\n      20: \"ml-[83.33%]\",\n      21: \"ml-[87.5%]\",\n      22: \"ml-[91.67%]\",\n      23: \"ml-[95.83%]\",\n      24: \"ml-[100%]\"\n    },\n    order: {\n      1: \"order-1\",\n      2: \"order-2\",\n      3: \"order-3\",\n      4: \"order-4\",\n      5: \"order-5\",\n      6: \"order-6\",\n      7: \"order-7\",\n      8: \"order-8\",\n      9: \"order-9\",\n      10: \"order-10\",\n      11: \"order-11\",\n      12: \"order-12\",\n      13: \"order-13\",\n      14: \"order-14\",\n      15: \"order-15\",\n      16: \"order-16\",\n      17: \"order-17\",\n      18: \"order-18\",\n      19: \"order-19\",\n      20: \"order-20\",\n      21: \"order-21\",\n      22: \"order-22\",\n      23: \"order-23\",\n      24: \"order-24\"\n    },\n    sm: {\n      1: \"sm:basis-[4.17%] sm:max-w-[4.17%]\",\n      2: \"sm:basis-[8.33%] sm:max-w-[8.33%]\",\n      3: \"sm:basis-[12.5%] sm:max-w-[12.5%]\",\n      4: \"sm:basis-[16.67%] sm:max-w-[16.67%]\",\n      5: \"sm:basis-[20.83%] sm:max-w-[20.83%]\",\n      6: \"sm:basis-[25%] sm:max-w-[25%]\",\n      7: \"sm:basis-[29.17%] sm:max-w-[29.17%]\",\n      8: \"sm:basis-[33.33%] sm:max-w-[33.33%]\",\n      9: \"sm:basis-[37.5%] sm:max-w-[37.5%]\",\n      10: \"sm:basis-[41.67%] sm:max-w-[41.67%]\",\n      11: \"sm:basis-[45.83%] sm:max-w-[45.83%]\",\n      12: \"sm:basis-[50%] sm:max-w-[50%]\",\n      13: \"sm:basis-[54.17%] sm:max-w-[54.17%]\",\n      14: \"sm:basis-[58.33%] sm:max-w-[58.33%]\",\n      15: \"sm:basis-[62.5%] sm:max-w-[62.5%]\",\n      16: \"sm:basis-[66.67%] sm:max-w-[66.67%]\",\n      17: \"sm:basis-[70.83%] sm:max-w-[70.83%]\",\n      18: \"sm:basis-[75%] sm:max-w-[75%]\",\n      19: \"sm:basis-[79.17%] sm:max-w-[79.17%]\",  \n      20: \"sm:basis-[83.33%] sm:max-w-[83.33%]\",  \n      21: \"sm:basis-[87.5%] sm:max-w-[87.5%]\",\n      22: \"sm:basis-[91.67%] sm:max-w-[91.67%]\",\n      23: \"sm:basis-[95.83%] sm:max-w-[95.83%]\",\n      24: \"sm:basis-[100%] sm:max-w-[100%]\"\n    },\n    md: {\n      1: \"md:basis-[4.17%] md:max-w-[4.17%]\",\n      2: \"md:basis-[8.33%] md:max-w-[8.33%]\",\n      3: \"md:basis-[12.5%] md:max-w-[12.5%]\",\n      4: \"md:basis-[16.67%] md:max-w-[16.67%]\",\n      5: \"md:basis-[20.83%] md:max-w-[20.83%]\",\n      6: \"md:basis-[25%] md:max-w-[25%]\",\n      7: \"md:basis-[29.17%] md:max-w-[29.17%]\",\n      8: \"md:basis-[33.33%] md:max-w-[33.33%]\",\n      9: \"md:basis-[37.5%] md:max-w-[37.5%]\",\n      10: \"md:basis-[41.67%] md:max-w-[41.67%]\",  \n      11: \"md:basis-[45.83%] md:max-w-[45.83%]\",\n      12: \"md:basis-[50%] md:max-w-[50%]\",\n      13: \"md:basis-[54.17%] md:max-w-[54.17%]\",\n      14: \"md:basis-[58.33%] md:max-w-[58.33%]\",\n      15: \"md:basis-[62.5%] md:max-w-[62.5%]\",\n      16: \"md:basis-[66.67%] md:max-w-[66.67%]\",  \n      17: \"md:basis-[70.83%] md:max-w-[70.83%]\",\n      18: \"md:basis-[75%] md:max-w-[75%]\",\n      19: \"md:basis-[79.17%] md:max-w-[79.17%]\",\n      20: \"basis-[83.33%] max-w-[83.33%]\",\n      21: \"md:basis-[87.5%] md:max-w-[87.5%]\",\n      22: \"md:basis-[91.67%] md:max-w-[91.67%]\",\n      23: \"md:basis-[95.83%] md:max-w-[95.83%]\",\n      24: \"md:basis-[100%] md:max-w-[100%]\"\n    },\n    lg: {\n      1: \"lg:basis-[4.17%] lg:max-w-[4.17%]\",\n      2: \"lg:basis-[8.33%] lg:max-w-[8.33%]\",\n      3: \"lg:basis-[12.5%] lg:max-w-[12.5%]\",\n      4: \"lg:basis-[16.67%] lg:max-w-[16.67%]\",\n      5: \"lg:basis-[20.83%] lg:max-w-[20.83%]\",\n      6: \"lg:basis-[25%] lg:max-w-[25%]\",\n      7: \"lg:basis-[29.17%] lg:max-w-[29.17%]\",\n      8: \"lg:basis-[33.33%] lg:max-w-[33.33%]\",\n      9: \"lg:basis-[37.5%] lg:max-w-[37.5%]\",\n      10: \"lg:basis-[41.67%] lg:max-w-[41.67%]\",  \n      11: \"basis-[45.83%] max-w-[45.83%]\",\n      12: \"lg:basis-[50%] lg:max-w-[50%]\",\n      13: \"lg:basis-[54.17%] lg:max-w-[54.17%]\",\n      14: \"lg:basis-[58.33%] lg:max-w-[58.33%]\",\n      15: \"lg:basis-[62.5%] lg:max-w-[62.5%]\",\n      16: \"lg:basis-[66.67%] lg:max-w-[66.67%]\",  \n      17: \"lg:basis-[70.83%] lg:max-w-[70.83%]\",\n      18: \"lg:basis-[75%] lg:max-w-[75%]\",\n      19: \"lg:basis-[79.17%] lg:max-w-[79.17%]\",\n      20: \"lg:basis-[83.33%] lg:max-w-[83.33%]\",\n      21: \"lg:basis-[87.5%] lg:max-w-[87.5%]\",\n      22: \"lg:basis-[91.67%] lg:max-w-[91.67%]\",\n      23: \"lg:basis-[95.83%] lg:max-w-[95.83%]\",\n      24: \"lg:basis-[100%] lg:max-w-[100%]\"\n    },\n    xl: {\n      1: \"xl:basis-[4.17%] xl:max-w-[4.17%]\",\n      2: \"xl:basis-[8.33%] xl:max-w-[8.33%]\",\n      3: \"xl:basis-[12.5%] xl:max-w-[12.5%]\",\n      4: \"xl:basis-[16.67%] xl:max-w-[16.67%]\",\n      5: \"basis-[20.83%] max-w-[20.83%]\",\n      6: \"xl:basis-[25%] xl:max-w-[25%]\",\n      7: \"xl:basis-[29.17%] xl:max-w-[29.17%]\",\n      8: \"xl:basis-[33.33%] xl:max-w-[33.33%]\",\n      9: \"xl:basis-[37.5%] xl:max-w-[37.5%]\",\n      10: \"xl:basis-[41.67%] xl:max-w-[41.67%]\",\n      11: \"xl:basis-[45.83%] xl:max-w-[45.83%]\",\n      12: \"xl:basis-[50%] xl:max-w-[50%]\",\n      13: \"xl:basis-[54.17%] xl:max-w-[54.17%]\",\n      14: \"xl:basis-[58.33%] xl:max-w-[58.33%]\",\n      15: \"xl:basis-[62.5%] xl:max-w-[62.5%]\",\n      16: \"xl:basis-[66.67%] xl:max-w-[66.67%]\",\n      17: \"xl:basis-[70.83%] xl:max-w-[70.83%]\",  \n      18: \"xl:basis-[75%] xl:max-w-[75%]\",  \n      19: \"xl:basis-[79.17%] xl:max-w-[79.17%]\",\n      20: \"xl:basis-[83.33%] xl:max-w-[83.33%]\",\n      21: \"xl:basis-[87.5%] xl:max-w-[87.5%]\",\n      22: \"xl:basis-[91.67%] xl:max-w-[91.67%]\",\n      23: \"xl:basis-[95.83%] xl:max-w-[95.83%]\",\n      24: \"xl:basis-[100%] xl:max-w-[100%]\"\n    }\n  }\n});\nconst responsiveClass = (breakpoint: string, span?: number) => {\n  if (!span) return \"\";\n  const percent = Number(((span / 24) * 100).toFixed(2));\n  return `${breakpoint}:basis-[${percent}%] ${breakpoint}:max-w-[${percent}%]`;\n};\nexport const Col: React.FC<ColProps> = ({\n  span,\n  offset,\n  order,\n  sm,\n  md,\n  lg,\n  xl,\n  className,\n  children,\n  style\n}) => {\n  return (\n    <div\n      className={clsx(\n        col({ span, offset, order }),\n        responsiveClass(\"sm\", sm),\n        responsiveClass(\"md\", md),\n        responsiveClass(\"lg\", lg),\n        responsiveClass(\"xl\", xl),\n        className\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n","import { TdAlertProps } from './type';\n\nexport const alertDefaultProps: TdAlertProps = { closeBtn: false, maxLine: 0, theme: 'info' };\n","import React, { forwardRef, useRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  X as TdCloseIcon,\n  Info as TdInfoCircleFilledIcon,\n  CheckCircle as TdCheckCircleFilledIcon,\n  AlertTriangle as TdErrorCircleFilledIcon\n\n} from 'lucide-react';\n\nimport { CSSTransition } from 'react-transition-group';\nimport parseTNode from '../utils/parseTNode';\nimport noop from '../utils/noop';\n\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdAlertProps } from './type';\nimport { StyledProps } from '../common';\nimport { alertDefaultProps } from './defaultProps';\nimport composeRefs from '../utils/composeRefs';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nconst transitionTime = 200;\n\nexport interface AlertProps extends TdAlertProps, StyledProps { };\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n  const { classPrefix } = useConfig();\n  // const [local, t] = useLocaleReceiver('alert');\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n\n  const {\n    message,\n    title,\n    operation,\n    theme,\n    icon,\n    closeBtn,\n    maxLine,\n    onClose,\n    className,\n    onClosed = noop,\n    ...alertProps\n  } = useDefaultProps(props, alertDefaultProps);\n\n  const [closed, setClosed] = React.useState(false);\n  const [collapsed, setCollapsed] = React.useState(true);\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  const iconMap = {\n    success: CheckCircleFilledIcon,\n    info: InfoCircleFilledIcon,\n    error: ErrorCircleFilledIcon,\n    warning: ErrorCircleFilledIcon,\n  };\n\n  const handleClose = (e: React.MouseEvent<HTMLDivElement>) => {\n    setClosed(true);\n    onClose?.({ e });\n  };\n\n  const handleCollapse = () => {\n    setCollapsed((collapsed) => !collapsed);\n  };\n\n  const renderIconNode = () => {\n    if (React.isValidElement(icon)) return icon;\n    return React.createElement(iconMap[theme]);\n  };\n\n  const renderMessage = () => {\n    if (+maxLine > 0 && Array.isArray(message)) {\n      return (\n        <div className={`${classPrefix}-alert__description`}>\n          {message.map((item, index) => {\n            if (collapsed) {\n              if (index < +maxLine) {\n                return <div key={index}>{item}</div>;\n              }\n            } else {\n              return <div key={index}>{item}</div>;\n            }\n            return true;\n          })}\n          {+maxLine < message.length && (\n            <div className={`${classPrefix}-alert__collapse`} onClick={handleCollapse}>\n              {collapsed ? \"展开\" : \"收起\"}\n            </div>\n          )}\n        </div>\n      );\n    }\n    return <div className={`${classPrefix}-alert__description`}>{message}</div>;\n  };\n\n  // close 属性变更为 closeBtn，close废弃后可删除。（需兼容标签上直接写close和closeBtn的场景）\n  const isUsingClose = Reflect.has(props, 'close');\n  const closeNode = isUsingClose ? close : closeBtn;\n  if (isUsingClose) {\n    console.warn('TAlert', 'prop `close` is going to be deprecated, please use `closeBtn` instead.');\n  }\n  const renderClose = () => {\n    if (closeNode === false) return null;\n    return (\n      <div className={`${classPrefix}-alert__close`} onClick={handleClose}>\n        {parseTNode(closeNode, undefined, <CloseIcon className='t-icon'></CloseIcon>)}\n      </div>\n    );\n  };\n\n  return (\n    <CSSTransition\n      in={!closed}\n      unmountOnExit\n      classNames={{\n        exitActive: `${classPrefix}-alert--closing`,\n      }}\n      nodeRef={nodeRef}\n      timeout={transitionTime}\n      onExited={onClosed}\n    >\n      <div\n        ref={composeRefs(ref, nodeRef)}\n        className={classNames(`${classPrefix}-alert`, `${classPrefix}-alert--${theme}`, className)}\n        {...alertProps}\n      >\n        <div className={`${classPrefix}-alert__icon`}>{renderIconNode()}</div>\n        <div className={`${classPrefix}-alert__content`}>\n          {title ? <div className={`${classPrefix}-alert__title`}>{title}</div> : null}\n          <div className={`${classPrefix}-alert__message`}>\n            {renderMessage()}\n            {operation ? <div className={`${classPrefix}-alert__operation`}>{parseTNode(operation)}</div> : null}\n          </div>\n        </div>\n        {renderClose()}\n      </div>\n    </CSSTransition>\n  );\n});\n\nAlert.displayName = 'Alert';\n\nexport default Alert;\n","import _Alert from './Alert.js';\n\nimport \"./style/index.js\";\n\nexport type { AlertProps } from './Alert.js';\nexport * from './type.js';\n\nexport const Alert = _Alert;\nexport default Alert;\n","\nimport { TdBadgeProps } from './type';\n\nexport const badgeDefaultProps: TdBadgeProps = {\n  count: 0,\n  dot: false,\n  maxCount: 99,\n  shape: 'circle',\n  showZero: false,\n  size: 'medium',\n};\n","import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport { TdBadgeProps } from './type';\nimport { badgeDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface BadgeProps extends TdBadgeProps, StyledProps { }\n\nconst Badge = forwardRef<HTMLSpanElement, BadgeProps>((props, ref) => {\n  const {\n    color,\n    dot,\n    maxCount,\n    count,\n    size,\n    shape,\n    showZero,\n    offset,\n    className,\n    content,\n    children,\n    style,\n    ...restProps\n  } = useDefaultProps<BadgeProps>(props, badgeDefaultProps);\n  const { classPrefix } = useConfig();\n\n  const childNode = content || children;\n\n  const badgeClassName = classNames(\n    !childNode && `${classPrefix}-badge--static`,\n    dot ? `${classPrefix}-badge--dot` : `${classPrefix}-badge--${shape}`,\n    size === 'small' && `${classPrefix}-size-s`,\n    !childNode && className,\n  );\n  const getDisplayCount = () => {\n    if (typeof count === 'number' && count > maxCount) {\n      return `${maxCount}+`;\n    }\n    return count;\n  };\n\n  let isHidden = !count;\n  if (typeof count === 'number') {\n    isHidden = count < 1 && !showZero;\n  }\n\n  const getStyle = () => {\n    const mergedStyle: React.CSSProperties = { ...style };\n    if (color) {\n      mergedStyle.backgroundColor = color;\n    }\n    if (offset) {\n      if (offset[0]) {\n        mergedStyle.right = +offset[0];\n      }\n      if (offset[1]) {\n        mergedStyle.marginTop = +offset[1];\n      }\n    }\n    return mergedStyle;\n  };\n\n  const badge = !isHidden ? (\n    <span {...(childNode ? {} : restProps)} className={badgeClassName} style={getStyle()}>\n      {!dot ? getDisplayCount() : null}\n    </span>\n  ) : null;\n\n  if (!childNode) {\n    return badge;\n  }\n\n  return (\n    <span {...restProps} className={classNames(`${classPrefix}-badge`, className)} ref={ref}>\n      {childNode}\n      {badge}\n    </span>\n  );\n});\n\nBadge.displayName = 'Badge';\n\nexport default Badge;\n","import _Badge from './Badge';\n\nimport './style/index.js';\n\nexport type { BadgeProps } from './Badge';\nexport * from './type';\n\nexport const Badge = _Badge;\nexport default Badge;\n","import { TdSelectProps, TdOptionProps, TdOptionGroupProps } from './type';\n\nexport const selectDefaultProps: TdSelectProps = {\n  autoWidth: false,\n  autofocus: false,\n  borderless: false,\n  clearable: false,\n  creatable: false,\n  loading: false,\n  max: 0,\n  minCollapsedNum: 0,\n  multiple: false,\n  placeholder: undefined,\n  readonly: false,\n  reserveKeyword: false,\n  showArrow: true,\n  size: 'medium',\n  status: 'default',\n  valueType: 'value',\n};\n\nexport const optionDefaultProps: TdOptionProps = {\n  checkAll: false,\n  disabled: false,\n};\n\nexport const optionGroupDefaultProps: TdOptionGroupProps = { divider: true };\n","import React from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../hooks/useConfig';\n\nimport { TdOptionGroupProps } from './type';\nimport { optionGroupDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface SelectGOptionGroupProps extends TdOptionGroupProps {\n  children?: React.ReactNode;\n}\n\nconst OptionGroup: React.FC<SelectGOptionGroupProps> = (props) => {\n  const { children, label, divider } = useDefaultProps<SelectGOptionGroupProps>(\n    props,\n    optionGroupDefaultProps,\n  );\n\n  const { classPrefix } = useConfig();\n\n  return (\n    <li\n      className={classNames(`${classPrefix}-select-option-group`, {\n        [`${classPrefix}-select-option-group__divider`]: divider,\n      })}\n    >\n      {(label ?? false) && (\n        <div className={`${classPrefix}-select-option-group__header`}>\n          {label}\n        </div>\n      )}\n      {children}\n    </li>\n  );\n  return;\n};\n\nexport default OptionGroup;\n","import React, { useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { isNumber, isString, get } from 'lodash-es';\n\nimport useConfig from '../hooks/useConfig';\nimport useDomRefCallback from '../hooks/useDomRefCallback';\n\nimport { StyledProps } from '../common';\nimport {\n  SelectValue,\n  TdOptionProps,\n  TdSelectProps,\n  SelectKeysType,\n  SelectOption,\n} from './type';\n\nexport interface SelectOptionProps\n  extends StyledProps,\n  TdOptionProps,\n  Pick<TdSelectProps, 'size' | 'multiple' | 'max'> {\n  selectedValue?: SelectValue;\n  children?: React.ReactNode;\n  onSelect?: (\n    value: string | number,\n    context: {\n      label?: string;\n      selected?: boolean;\n      event: React.MouseEvent<HTMLLIElement>;\n      restData?: Record<string, any>;\n    },\n  ) => void;\n  onCheckAllChange?: (\n    checkAll: boolean,\n    e: React.MouseEvent<HTMLLIElement>,\n  ) => void;\n  restData?: Record<string, any>;\n  keys?: SelectKeysType;\n  optionLength?: number;\n  isVirtual?: boolean;\n  onRowMounted?: (rowData: { ref: HTMLElement; data: SelectOption }) => void;\n}\n\nconst componentType = 'select';\n\nconst Option: React.FC<SelectOptionProps> = (props) => {\n  const {\n    disabled: propDisabled,\n    label: propLabel,\n    title: propTitle,\n    selectedValue,\n    checkAll,\n    multiple,\n    size,\n    max,\n    keys,\n    value,\n    onSelect,\n    children,\n    content,\n    restData,\n    style,\n    className,\n    isVirtual,\n  } = props;\n  let selected: boolean;\n  let indeterminate: boolean;\n  const label = propLabel || value;\n  const disabled =\n    propDisabled ||\n    (multiple &&\n      Array.isArray(selectedValue) &&\n      max &&\n      selectedValue.length >= max);\n\n  const titleContent = useMemo(() => {\n    // 外部设置 props，说明希望受控\n    const controlledTitle = Reflect.has(props, 'title');\n    if (controlledTitle) return propTitle;\n    if (typeof label === 'string') return label;\n    return null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [propTitle, label]);\n  const { classPrefix } = useConfig();\n  // 使用斜八角动画\n  const [optionRef, setRefCurrent] = useDomRefCallback();\n\n  useEffect(() => {\n    if (isVirtual && optionRef) {\n      props.onRowMounted?.({\n        ref: optionRef,\n        data: props,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isVirtual, optionRef]);\n\n  // 处理单选场景\n  if (!multiple) {\n    selected =\n      isNumber(selectedValue) || isString(selectedValue)\n        ? value === selectedValue\n        : value === get(selectedValue, keys?.value || 'value');\n  }\n\n  // 处理多选场景\n  if (multiple && Array.isArray(selectedValue)) {\n    selected = selectedValue.some((item) => {\n      if (isNumber(item) || isString(item)) {\n        // 如果非 object 类型\n        return item === value;\n      }\n      return get(item, keys?.value || 'value') === value;\n    });\n    if (props.checkAll) {\n      selected = selectedValue.length === props.optionLength;\n      indeterminate = selectedValue.length > 0 && !selected;\n    }\n  }\n\n  const handleSelect = (event: React.MouseEvent<HTMLLIElement>) => {\n    if (!disabled && !checkAll) {\n      if (value)\n        onSelect?.(value, { label: String(label), selected, event, restData });\n    }\n    if (checkAll) {\n      props.onCheckAllChange?.(selected, event);\n    }\n  };\n\n  const renderItem = (children: React.ReactNode) => {\n    if (multiple) {\n      return (\n        <label\n          className={classNames(`${classPrefix}-checkbox`, {\n            [`${classPrefix}-is-indeterminate`]: indeterminate,\n            [`${classPrefix}-is-disabled`]: disabled,\n            [`${classPrefix}-is-checked`]: selected,\n          })}\n          title={titleContent}\n        >\n          <input\n            type=\"checkbox\"\n            className={classNames(`${classPrefix}-checkbox__former`)}\n            value=\"\"\n            disabled={disabled && !selected}\n            onClick={(e) => {\n              e.stopPropagation();\n              e.nativeEvent.stopImmediatePropagation();\n            }}\n          />\n          <span className={classNames(`${classPrefix}-checkbox__input`)}></span>\n          <span className={classNames(`${classPrefix}-checkbox__label`)}>\n            {children || content || label}\n          </span>\n        </label>\n      );\n    }\n    return <span title={titleContent}>{children || content || label}</span>;\n  };\n\n  return (\n    <li\n      className={classNames(\n        className,\n        `${classPrefix}-${componentType}-option`,\n        {\n          [`${classPrefix}-is-disabled`]: disabled,\n          [`${classPrefix}-is-selected`]: selected,\n          [`${classPrefix}-size-s`]: size === 'small',\n          [`${classPrefix}-size-l`]: size === 'large',\n        },\n      )}\n      key={value}\n      onClick={handleSelect}\n      ref={setRefCurrent}\n      style={style}\n    >\n      {renderItem(children)}\n    </li>\n  );\n};\n\nexport default Option;\n","import { ReactElement } from 'react';\nimport { isPlainObject, get } from 'lodash-es';\nimport OptionGroup from '../OptionGroup';\nimport Option from '../Option';\n\nimport {\n  SelectValue,\n  TdOptionProps,\n  SelectKeysType,\n  TdSelectProps,\n  SelectOption,\n} from '../type';\n\ntype SelectLabeledValue = Required<Omit<TdOptionProps, 'disabled'>>;\n\nexport function isSelectOptionGroup(\n  option: SelectOption,\n): option is SelectOptionGroup {\n  return !!option && 'group' in option && 'children' in option;\n}\n\nexport type ValueToOption = {\n  [value: string | number]: TdOptionProps;\n};\n\nfunction setValueToOptionFormOptionDom(\n  dom: ReactElement,\n  valueToOption: ValueToOption,\n  keys: SelectKeysType,\n) {\n  const { value, label, children } = dom.props;\n  // eslint-disable-next-line no-param-reassign\n  valueToOption[value] = {\n    ...dom.props,\n    [keys?.value || 'value']: value,\n    [keys?.label || 'label']: label || children || value,\n  };\n}\n\n// 获取 value => option，用于快速基于 value 找到对应的 option\nexport const getValueToOption = (\n  children: ReactElement,\n  options: SelectOption[],\n  keys: SelectKeysType,\n): ValueToOption => {\n  const valueToOption = {};\n\n  // options 优先级高于 children\n  if (Array.isArray(options)) {\n    options.forEach((option) => {\n      if (isSelectOptionGroup(option)) {\n        option.children?.forEach((child) => {\n          valueToOption[get(child, keys?.value || 'value')] = {\n            ...child,\n            value: get(child, keys?.value || 'value'),\n            label: get(child, keys?.label || 'label'),\n          };\n        });\n      } else {\n        valueToOption[get(option, keys?.value || 'value')] = {\n          ...option,\n          value: get(option, keys?.value || 'value'),\n          label: get(option, keys?.label || 'label'),\n        };\n      }\n    });\n    return valueToOption;\n  }\n\n  if (isPlainObject(children)) {\n    if (children.type === Option) {\n      setValueToOptionFormOptionDom(children, valueToOption, keys);\n      return valueToOption;\n    }\n\n    if (children.type === OptionGroup) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.forEach((item) => {\n          setValueToOptionFormOptionDom(item, valueToOption, keys);\n        });\n        return valueToOption;\n      }\n    }\n  }\n\n  /**\n   * children如果存在ReactElement和map函数混写的情况，会出现嵌套数组\n   */\n  if (Array.isArray(children)) {\n    const handlerElement = (item: ReactElement) => {\n      if (item.type === Option) {\n        setValueToOptionFormOptionDom(item, valueToOption, keys);\n      }\n\n      if (item.type === OptionGroup) {\n        const groupChildren = (item.props as SelectOption).children;\n        if (Array.isArray(groupChildren)) {\n          groupChildren.forEach((groupItem) => {\n            setValueToOptionFormOptionDom(groupItem, valueToOption, keys);\n          });\n        }\n      }\n\n      if (Array.isArray(item)) {\n        item.forEach((child) => {\n          handlerElement(child);\n        });\n      }\n    };\n    children.forEach((item: ReactElement) => handlerElement(item));\n  }\n\n  return valueToOption;\n};\n\n// 获取单选的 label\nexport const getLabel = (\n  children: ReactElement,\n  value: SelectValue<TdOptionProps>,\n  options: TdOptionProps[],\n  keys: SelectKeysType,\n) => {\n  let selectedLabel = '';\n  // 处理带 options 属性的情况\n  if (Array.isArray(options)) {\n    options.some((option) => {\n      if ([get(value, keys?.value || 'value'), value].includes(option.value)) {\n        selectedLabel = option.label;\n        return true;\n      }\n      return false;\n    });\n\n    return selectedLabel;\n  }\n\n  if (isPlainObject(children)) {\n    selectedLabel = children.props.label;\n\n    if (children.type === OptionGroup) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.some((item) => {\n          const selectedValue = isPlainObject(value)\n            ? get(value, 'value')\n            : value;\n          if (isPlainObject(item.props) && item.props.value === selectedValue) {\n            selectedLabel = item.props.label || item.props.children;\n            return true;\n          }\n          return false;\n        });\n      }\n    }\n  }\n\n  if (Array.isArray(children)) {\n    children.some((item: ReactElement) => {\n      // 处理分组\n      if (item.type === OptionGroup) {\n        const groupChildren = item.props.children;\n        if (Array.isArray(groupChildren)) {\n          const isSelected = groupChildren.some((item) => {\n            const selectedValue = isPlainObject(value)\n              ? get(value, 'value')\n              : value;\n            if (\n              isPlainObject(item.props) &&\n              item.props.value === selectedValue\n            ) {\n              selectedLabel = item.props.label || item.props.children;\n              return true;\n            }\n            return false;\n          });\n          return isSelected;\n        }\n      }\n      const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n      if (isPlainObject(item.props) && item.props.value === selectedValue) {\n        selectedLabel = item.props.label || item.props.children;\n        return true;\n      }\n      return false;\n    });\n  }\n\n  return selectedLabel;\n};\n\nexport const getMultipleTags = (\n  values: SelectValue[],\n  keys: SelectKeysType,\n) => {\n  const tags = values.map((item) => ({\n    label: get(item, keys?.label || 'label') || item.toString(),\n    value: get(item, keys?.value || 'value') || item,\n  }));\n  return tags;\n};\n\nexport const getSelectValueArr = (\n  values: SelectValue | SelectValue[],\n  activeValue: SelectValue,\n  selected?: boolean,\n  valueType?: TdSelectProps['valueType'],\n  keys?: SelectKeysType,\n  objVal?: SelectValue,\n) => {\n  // eslint-disable-next-line no-param-reassign\n  values = Array.isArray(values) ? values : [];\n\n  if (Array.isArray(values)) {\n    let currentValues = [...values];\n    const isValueObj = valueType === 'object';\n    if (selected) {\n      currentValues = currentValues.filter((item: SelectLabeledValue) => {\n        if (isValueObj) {\n          if (isPlainObject(activeValue)) {\n            return (\n              get(item, keys?.value || 'value') !==\n              get(activeValue, keys?.value || 'value')\n            );\n          }\n          return get(item, keys?.value || 'value') !== activeValue;\n        }\n        return item !== activeValue;\n      });\n    } else {\n      const item = isValueObj ? objVal : activeValue;\n\n      currentValues.push(item as SelectValue);\n    }\n    return currentValues;\n  }\n};\n\n// 计算onChange事件回调的selectedOptions参数\nexport const getSelectedOptions = (\n  value: SelectValue,\n  multiple: TdSelectProps['multiple'],\n  valueType: TdSelectProps['valueType'],\n  keys: SelectKeysType,\n  valueToOption: ValueToOption,\n  selectedValue?: SelectValue,\n) => {\n  const isObjectType = valueType === 'object';\n  // 当前所有选中的选项\n  let currentSelectedOptions = [];\n  // 当前选中的选项\n  let currentOption: SelectOption;\n  // 全选值\n  let allSelectedValue: Array<SelectValue>;\n  // 所有可选项\n  const tmpPropOptions = Object.values(valueToOption);\n  if (multiple) {\n    currentSelectedOptions = isObjectType\n      ? (value as Array<SelectValue>)\n      : tmpPropOptions?.filter?.((v) =>\n          (value as Array<string | number>).includes?.(\n            v[keys?.value || 'value'],\n          ),\n        );\n\n    allSelectedValue = isObjectType\n      ? currentSelectedOptions\n      : currentSelectedOptions?.map((v) => v[keys?.value || 'value']);\n\n    currentOption = isObjectType\n      ? (value as Array<SelectValue>).find(\n          (v) => v[keys?.value || 'value'] === selectedValue,\n        )\n      : currentSelectedOptions?.find(\n          (option) => option[keys?.value || 'value'] === selectedValue,\n        );\n  } else {\n    currentSelectedOptions = isObjectType\n      ? [value]\n      : tmpPropOptions?.filter?.((v) => value === v[keys?.value || 'value']) ||\n        [];\n    allSelectedValue = currentSelectedOptions;\n    currentOption = isObjectType\n      ? value\n      : currentSelectedOptions?.find(\n          (option) => option[keys?.value || 'value'] === selectedValue,\n        );\n  }\n\n  return { currentSelectedOptions, currentOption, allSelectedValue };\n};\n","import {\n  useEffect,\n  useMemo,\n  MutableRefObject,\n  useCallback,\n  CSSProperties,\n} from 'react';\nimport useVirtualScroll from '../../hooks/useVirtualScroll';\nimport { TdSelectProps } from '../type';\nimport { TScroll, SizeEnum } from '../../common';\n\ninterface PanelVirtualScroll {\n  scroll?: TdSelectProps['scroll'];\n  popupContentRef: MutableRefObject<HTMLDivElement>;\n  options: TdSelectProps['options'];\n  size: SizeEnum;\n}\n\nconst usePanelVirtualScroll = ({\n  popupContentRef,\n  scroll,\n  options,\n  size,\n}: PanelVirtualScroll) => {\n  const scrollThreshold = scroll?.threshold || 100;\n  const scrollType = scroll?.type;\n\n  const isVirtual = useMemo<boolean>(\n    () => scrollType === 'virtual' && options?.length > scrollThreshold,\n    [scrollType, scrollThreshold, options],\n  );\n\n  const scrollParams = useMemo<TScroll>(() => {\n    const heightMap = {\n      small: 20,\n      medium: 28,\n      large: 36,\n    };\n    const rowHeight = heightMap[size] || 28;\n    return {\n      type: 'virtual',\n      isFixedRowHeight: scroll?.isFixedRowHeight || false,\n      rowHeight: scroll?.rowHeight || rowHeight,\n      bufferSize: scroll?.bufferSize || 20,\n      threshold: scrollThreshold,\n    };\n  }, [scroll, scrollThreshold, size]);\n\n  const {\n    visibleData = null,\n    handleScroll: handleVirtualScroll = null,\n    scrollHeight = null,\n    translateY = null,\n    handleRowMounted = null,\n  } = useVirtualScroll(popupContentRef, {\n    data: options || [],\n    scroll: scrollParams,\n  });\n\n  let lastScrollY = -1;\n\n  const onInnerVirtualScroll = useCallback((e: WheelEvent) => {\n    if (!isVirtual) {\n      return;\n    }\n    const target = e.target as HTMLElement;\n    const top = target.scrollTop;\n    // 排除横向滚动触发的纵向虚拟滚动计算\n    if (Math.abs(lastScrollY - top) > 5) {\n      handleVirtualScroll();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      lastScrollY = top;\n    } else {\n      lastScrollY = -1;\n    }\n  }, []);\n\n  // 监听popup滚动 处理虚拟滚动时的virtualData变化\n  useEffect(() => {\n    const popupContentDom = popupContentRef?.current;\n    if (isVirtual) {\n      popupContentDom?.addEventListener?.('scroll', onInnerVirtualScroll);\n    }\n    return () => {\n      // 卸载时取消监听\n      if (isVirtual) {\n        popupContentDom?.removeEventListener?.('scroll', onInnerVirtualScroll);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isVirtual, onInnerVirtualScroll, popupContentRef.current]);\n\n  const cursorStyle = {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    transition: 'transform 0.2s',\n    transform: `translate(0, ${scrollHeight}px)`,\n    MsTransform: `translate(0, ${scrollHeight}px)`,\n    MozTransform: `translate(0, ${scrollHeight}px)`,\n    WebkitTransform: `translate(0, ${scrollHeight}px)`,\n  } as CSSProperties;\n\n  const panelStyle = {\n    transform: `translate(0, ${translateY}px)`,\n    MsTransform: `translate(0, ${translateY}px)`,\n    MozTransform: `translate(0, ${translateY}px)`,\n    WebkitTransform: `translate(0, ${translateY}px)`,\n  } as CSSProperties;\n\n  return {\n    scrollHeight,\n    translateY,\n    visibleData,\n    handleRowMounted,\n    isVirtual,\n    cursorStyle,\n    panelStyle,\n  };\n};\n\nexport default usePanelVirtualScroll;\n","import React, {\n  Children,\n  isValidElement,\n  cloneElement,\n  useRef,\n  CSSProperties,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames';\nimport { isEqual } from 'lodash-es';\nimport { getSelectValueArr } from './utils/helper';\nimport {\n  TdSelectProps,\n  SelectValue,\n  TdOptionProps,\n  SelectValueChangeTrigger,\n  SelectOption,\n  SelectOptionGroup,\n} from './type';\nimport useConfig from '../hooks/useConfig';\nimport usePanelVirtualScroll from './hooks/usePanelVirtualScroll';\nimport Option, { SelectOptionProps } from './Option';\nimport OptionGroup from './OptionGroup';\n\ninterface SelectPopupProps\n  extends Pick<\n    TdSelectProps,\n    | 'value'\n    | 'size'\n    | 'multiple'\n    | 'empty'\n    | 'options'\n    | 'max'\n    | 'loadingText'\n    | 'loading'\n    | 'valueType'\n    | 'keys'\n    | 'panelTopContent'\n    | 'panelBottomContent'\n    | 'scroll'\n  > {\n  onChange?: (\n    value: SelectValue,\n    context?: {\n      label?: string | number;\n      value?: SelectValue;\n      restData?: Record<string, any>;\n      e: React.MouseEvent<HTMLLIElement>;\n      trigger: SelectValueChangeTrigger;\n    },\n  ) => void;\n  /**\n   * 是否展示popup\n   */\n  showPopup: boolean;\n  /**\n   * 控制popup展示的函数\n   */\n  setShowPopup: (show: boolean) => void;\n  children?: React.ReactNode;\n  onCheckAllChange?: (\n    checkAll: boolean,\n    e: React.MouseEvent<HTMLLIElement>,\n  ) => void;\n  getPopupInstance?: () => HTMLDivElement;\n}\n\nconst PopupContent = React.forwardRef<HTMLDivElement, SelectPopupProps>(\n  (props, ref) => {\n    const {\n      value,\n      size,\n      max,\n      multiple,\n      showPopup,\n      setShowPopup,\n      empty,\n      loadingText,\n      loading,\n      valueType,\n      children,\n      keys,\n      panelTopContent,\n      panelBottomContent,\n      onChange,\n      onCheckAllChange,\n      getPopupInstance,\n      options: propsOptions,\n      scroll: propsScroll,\n    } = props;\n\n    // 国际化文本初始化\n    // const [local, t] = useLocaleReceiver('select');\n    // const emptyText = t(local.empty);\n    const popupContentRef = useRef<HTMLDivElement>(null);\n\n    popupContentRef.current = getPopupInstance();\n\n    const {\n      visibleData,\n      handleRowMounted,\n      isVirtual,\n      panelStyle,\n      cursorStyle,\n    } = usePanelVirtualScroll({\n      popupContentRef,\n      scroll: propsScroll,\n      options: propsOptions,\n      size,\n    });\n\n    // 全部可选选项\n    const selectableOptions = useMemo(() => {\n      const uniqueOptions = {};\n      propsOptions?.forEach((option: SelectOption) => {\n        if ((option as SelectOptionGroup).group) {\n          (option as SelectOptionGroup).children.forEach((item) => {\n            if (!item.disabled && !item.checkAll) {\n              uniqueOptions[item.value] = item;\n            }\n          });\n        } else if (\n          !(option as TdOptionProps).disabled &&\n          !(option as TdOptionProps).checkAll\n        ) {\n          uniqueOptions[(option as TdOptionProps).value] = option;\n        }\n      });\n      return Object.values(uniqueOptions);\n    }, [propsOptions]);\n\n    const { classPrefix } = useConfig();\n    if (!children && !propsOptions) {\n      return null;\n    }\n\n    const onSelect: SelectOptionProps['onSelect'] = (\n      selectedValue,\n      { label, selected, event, restData },\n    ) => {\n      const isValObj = valueType === 'object';\n      let objVal = {};\n      if (isValObj) {\n        objVal = { ...restData };\n        if (!keys?.label) {\n          Object.assign(objVal, { label });\n        }\n        if (!keys?.value) {\n          Object.assign(objVal, { value: selectedValue });\n        }\n      }\n\n      if (!Object.keys(objVal).length) {\n        Object.assign(objVal, {\n          [keys?.label || 'label']: label,\n          [keys?.value || 'value']: selectedValue,\n        });\n      }\n\n      if (multiple) {\n        // calc multiple select values\n        const values = getSelectValueArr(\n          value,\n          selectedValue,\n          selected,\n          valueType,\n          keys,\n          objVal,\n        );\n        onChange(values, {\n          label,\n          value: selectedValue,\n          e: event,\n          trigger: selected ? 'uncheck' : 'check',\n        });\n      } else {\n        // calc single select value\n        const selectVal = valueType === 'object' ? objVal : selectedValue;\n\n        if (!isEqual(value, selectVal)) {\n          onChange(selectVal, {\n            label,\n            value: selectVal,\n            e: event,\n            trigger: 'check',\n          });\n        }\n        setShowPopup(!showPopup);\n      }\n    };\n\n    const childrenWithProps = Children.map(children, (child) => {\n      if (isValidElement(child)) {\n        const addedProps = {\n          size,\n          max,\n          multiple,\n          selectedValue: value,\n          onSelect,\n        };\n        return cloneElement(child, { ...addedProps });\n      }\n      return child;\n    });\n\n    // 渲染 options\n    const renderOptions = (options: SelectOption[]) => {\n      if (options) {\n        // 通过 options API配置的\n        return (\n          <ul className={`${classPrefix}-select__list`}>\n            {options.map((item, index) => {\n              const { group, divider, ...rest } = item as SelectOptionGroup;\n              if (group) {\n                return (\n                  <OptionGroup label={group} divider={divider} key={index}>\n                    {renderOptions(rest.children)}\n                  </OptionGroup>\n                );\n              }\n\n              const {\n                value: optionValue,\n                label,\n                disabled,\n                content,\n                children,\n                ...restData\n              } = item as TdOptionProps;\n              return (\n                <Option\n                  key={index}\n                  max={max}\n                  label={label}\n                  value={optionValue}\n                  onSelect={onSelect}\n                  selectedValue={value}\n                  optionLength={selectableOptions.length}\n                  multiple={multiple}\n                  size={size}\n                  disabled={disabled}\n                  restData={restData}\n                  keys={keys}\n                  content={content}\n                  onCheckAllChange={onCheckAllChange}\n                  onRowMounted={handleRowMounted}\n                  {...(isVirtual\n                    ? {\n                      isVirtual,\n                      bufferSize: propsScroll?.bufferSize,\n                      scrollType: propsScroll?.type,\n                    }\n                    : {})}\n                  {...restData}\n                >\n                  {children}\n                </Option>\n              );\n            })}\n          </ul>\n        );\n      }\n      return (\n        <ul className={`${classPrefix}-select__list`}>{childrenWithProps}</ul>\n      );\n    };\n\n    const isEmpty =\n      (Array.isArray(childrenWithProps) && !childrenWithProps.length) ||\n      (propsOptions && propsOptions.length === 0);\n\n    const renderPanel = (\n      renderedOptions: SelectOption[],\n      extraStyle?: CSSProperties,\n    ) => (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-select__dropdown-inner`, {\n          [`${classPrefix}-select__dropdown-inner--size-s`]: size === 'small',\n          [`${classPrefix}-select__dropdown-inner--size-l`]: size === 'large',\n          [`${classPrefix}-select__dropdown-inner--size-m`]: size === 'medium',\n        })}\n        style={extraStyle}\n      >\n        {loading && (\n          <div className={`${classPrefix}-select__loading-tips`}>\n            {loadingText}\n          </div>\n        )}\n        {!loading && isEmpty && (\n          <div className={`${classPrefix}-select__empty`}>{empty}</div>\n        )}\n        {!loading && !isEmpty && renderOptions(renderedOptions)}\n      </div>\n    );\n    if (isVirtual) {\n      return (\n        <>\n          {panelTopContent}\n          <div>\n            <div style={cursorStyle}></div>\n            {renderPanel(visibleData, panelStyle)}\n          </div>\n          {panelBottomContent}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {panelTopContent}\n        {renderPanel(propsOptions)}\n        {panelBottomContent}\n      </>\n    );\n  },\n);\n\nexport default PopupContent;\n","import React, { useState, useEffect, ReactNode, ReactElement } from 'react';\nimport { get } from 'lodash-es';\nimport type {\n  SelectKeysType,\n  SelectOption,\n  SelectOptionGroup,\n  SelectValue,\n  TdOptionProps,\n} from '../type';\nimport { getValueToOption, type ValueToOption } from '../utils/helper';\nimport Option from '../Option';\nimport OptionGroup from '../OptionGroup';\n\nexport function isSelectOptionGroup(\n  option: SelectOption,\n): option is SelectOptionGroup {\n  return !!option && 'group' in option && 'children' in option;\n}\n\ntype OptionValueType = SelectValue<SelectOption>;\n\n// 处理 options 的逻辑\nfunction UseOptions(\n  keys: SelectKeysType,\n  options: SelectOption[],\n  children: ReactNode,\n  valueType: 'object' | 'value',\n  value: OptionValueType,\n  reserveKeyword: boolean,\n) {\n  const [valueToOption, setValueToOption] = useState<ValueToOption>({});\n  const [currentOptions, setCurrentOptions] = useState<SelectOption[]>([]);\n  const [tmpPropOptions, setTmpPropOptions] = useState<SelectOption[]>([]);\n  const [selectedOptions, setSelectedOptions] = useState<SelectOption[]>([]);\n\n  // 处理设置 option 的逻辑\n  useEffect(() => {\n    let transformedOptions = options;\n\n    const arrayChildren = React.Children.toArray(children);\n    const optionChildren = arrayChildren.filter(\n      (v: ReactElement) => v.type === Option || v.type === OptionGroup,\n    );\n    const isChildrenFilterable =\n      arrayChildren.length > 0 &&\n      optionChildren.length === arrayChildren.length;\n    if (reserveKeyword && currentOptions.length && isChildrenFilterable) return;\n\n    if (isChildrenFilterable) {\n      const handlerOptionElement = (v) => {\n        if (React.isValidElement<SelectOption>(v)) {\n          if (v.type === OptionGroup) {\n            return {\n              ...v.props,\n              group: v.props.label,\n              children: v.props.children?.map((v) => handlerOptionElement(v)),\n            };\n          }\n          return {\n            ...v.props,\n            label: v.props.label || v.props.children,\n          };\n        }\n        return { label: v };\n      };\n      transformedOptions = arrayChildren?.map<SelectOption>((v) =>\n        handlerOptionElement(v),\n      );\n    }\n    if (keys) {\n      // 如果有定制 keys 先做转换\n      transformedOptions = transformedOptions?.map<SelectOption>((option) => ({\n        ...option,\n        value: get(option, keys?.value || 'value'),\n        label: get(option, keys?.label || 'label'),\n      }));\n    }\n    setCurrentOptions(transformedOptions);\n    setTmpPropOptions(transformedOptions);\n\n    setValueToOption(\n      getValueToOption(\n        children as ReactElement,\n        options as TdOptionProps[],\n        keys,\n      ) || {},\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, keys, children, reserveKeyword]);\n\n  // 同步 value 对应的 options\n  useEffect(() => {\n    const valueKey = keys?.value || 'value';\n    const labelKey = keys?.label || 'label';\n\n    setSelectedOptions((oldSelectedOptions: SelectOption[]) => {\n      const createOptionFromValue = (item: OptionValueType) => {\n        if (valueType === 'value') {\n          return (\n            valueToOption[item as string | number] ||\n            oldSelectedOptions.find(\n              (option) => get(option, valueKey) === item,\n            ) || {\n              [valueKey]: item,\n              [labelKey]: item,\n            }\n          );\n        }\n        if (typeof item === 'object' && item !== null) {\n          return item;\n        }\n        return [];\n      };\n\n      // 多选\n      if (Array.isArray(value)) {\n        return value.map(createOptionFromValue);\n      }\n\n      // 单选\n      if (value !== undefined && value !== null) {\n        const option = createOptionFromValue(value);\n        return option ? [option] : [];\n      }\n\n      return [];\n    });\n  }, [value, keys, valueType, valueToOption, setSelectedOptions]);\n\n  return {\n    currentOptions,\n    setCurrentOptions,\n    tmpPropOptions,\n    setTmpPropOptions,\n    valueToOption,\n    setValueToOption,\n    selectedOptions,\n    setSelectedOptions,\n  };\n}\n\nexport default UseOptions;\n","import React, {\n  useEffect,\n  useMemo,\n  KeyboardEvent,\n  WheelEvent,\n  useRef,\n  useCallback,\n  Children,\n  cloneElement,\n  isValidElement,\n  useState,\n} from 'react';\n\nimport classNames from 'classnames';\nimport { isFunction, get, debounce } from 'lodash-es';\nimport { getOffsetTopToContainer } from '../utils/helper';\nimport useControlled from '../hooks/useControlled';\nimport useConfig from '../hooks/useConfig';\nimport forwardRefWithStatics from '../utils/forwardRefWithStatics';\nimport { getSelectValueArr, getSelectedOptions } from './utils/helper';\n\nimport noop from '../utils/noop';\nimport FakeArrow from '../common/FakeArrow';\nimport Loading from '../loading';\nimport SelectInput, {\n  SelectInputValue,\n  SelectInputValueChangeContext,\n} from '../select-input';\nimport Option from './Option';\nimport OptionGroup from './OptionGroup';\nimport PopupContent from './PopupContent';\nimport { Tag } from '../tag';\nimport {\n  TdSelectProps,\n  TdOptionProps,\n  SelectOption,\n  SelectValueChangeTrigger,\n  SelectValue,\n} from './type';\n\nimport { StyledProps } from '../common';\nimport { selectDefaultProps } from './defaultProps';\nimport { PopupVisibleChangeContext } from '../popup';\n\nimport useOptions, { isSelectOptionGroup } from './hooks/useOptions';\nimport composeRefs from '../utils/composeRefs';\nimport { parseContentTNode } from '../utils/parentTNode';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface SelectProps<T = SelectOption>\n  extends TdSelectProps<T>,\n  StyledProps {\n  // 子节点\n  children?: React.ReactNode;\n  onMouseEnter?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\ntype OptionsType = TdOptionProps[];\n\nconst Select = forwardRefWithStatics(\n  (originalProps: SelectProps, ref: React.Ref<HTMLDivElement>) => {\n    const props = useDefaultProps<SelectProps>(\n      originalProps,\n      selectDefaultProps,\n    );\n    const {\n      readonly,\n      borderless,\n      autoWidth,\n      creatable,\n      loadingText = '加载中...',\n      max,\n      popupProps,\n      reserveKeyword,\n      className,\n      style,\n      disabled,\n      size,\n      multiple,\n      placeholder,\n      clearable,\n      prefixIcon,\n      options,\n      filterable,\n      loading,\n      empty,\n      valueType,\n      keys,\n      children,\n      collapsedItems,\n      minCollapsedNum,\n      valueDisplay,\n      showArrow,\n      inputProps,\n      panelBottomContent,\n      panelTopContent,\n      selectInputProps,\n      tagInputProps,\n      tagProps,\n      scroll,\n      suffixIcon,\n      label,\n      filter,\n      onFocus,\n      onBlur,\n      onClear = noop,\n      onCreate,\n      onRemove,\n      onSearch,\n      onEnter,\n      onPopupVisibleChange,\n    } = props;\n\n    const [value, onChange] = useControlled(props, 'value', props.onChange);\n    const selectInputRef = useRef(null);\n    const { classPrefix } = useConfig();\n    const { overlayClassName, onScroll, onScrollToBottom, ...restPopupProps } =\n      popupProps || {};\n    const [isScrolling, toggleIsScrolling] = useState(false);\n\n    const name = `${classPrefix}-select`; // t-select\n\n    const [showPopup, setShowPopup] = useControlled(\n      props,\n      'popupVisible',\n      onPopupVisibleChange,\n    );\n    const [inputValue, onInputChange] = useControlled(\n      props,\n      'inputValue',\n      props.onInputChange,\n    );\n\n    const {\n      currentOptions,\n      setCurrentOptions,\n      tmpPropOptions,\n      valueToOption,\n      selectedOptions,\n    } = useOptions(keys, options, children, valueType, value, reserveKeyword);\n\n    const selectedLabel = useMemo(() => {\n      if (multiple) {\n        return selectedOptions.map(\n          (selectedOption) =>\n            get(selectedOption || {}, keys?.label || 'label') || '',\n        );\n      }\n      return get(selectedOptions[0] || {}, keys?.label || 'label') || undefined;\n    }, [selectedOptions, keys, multiple]);\n\n    const handleShowPopup = (\n      visible: boolean,\n      ctx: PopupVisibleChangeContext,\n    ) => {\n      if (disabled) return;\n      visible && toggleIsScrolling(false);\n      !visible && onInputChange('', { trigger: 'blur' });\n      setShowPopup(visible, ctx);\n    };\n\n    // 可以根据触发来源，自由定制标签变化时的筛选器行为\n    const onTagChange = (_currentTags: SelectInputValue, context) => {\n      const { trigger, index, item, e } = context;\n      // backspace\n      if (trigger === 'backspace') {\n        e.stopPropagation();\n\n        let closest = -1;\n        let len = index;\n        while (len >= 0) {\n          const option = selectedOptions[len];\n          if (!isSelectOptionGroup(option) && !option.disabled) {\n            closest = len;\n            break;\n          }\n          len -= 1;\n        }\n        if (closest < 0) {\n          return;\n        }\n        const values = getSelectValueArr(\n          value,\n          value[closest],\n          true,\n          valueType,\n          keys,\n        );\n\n        // 处理onChange回调中的selectedOptions参数\n        const { currentSelectedOptions } = getSelectedOptions(\n          values,\n          multiple,\n          valueType,\n          keys,\n          valueToOption,\n        );\n        onChange(values, {\n          e,\n          trigger,\n          selectedOptions: currentSelectedOptions,\n        });\n        return;\n      }\n\n      if (trigger === 'tag-remove') {\n        e?.stopPropagation?.();\n        const values = getSelectValueArr(\n          value,\n          value[index],\n          true,\n          valueType,\n          keys,\n        );\n        // 处理onChange回调中的selectedOptions参数\n        const { currentSelectedOptions } = getSelectedOptions(\n          values,\n          multiple,\n          valueType,\n          keys,\n          valueToOption,\n        );\n\n        onChange(values, {\n          e,\n          trigger,\n          selectedOptions: currentSelectedOptions,\n        });\n        if (isFunction(onRemove)) {\n          onRemove({\n            value: value[index],\n            data: {\n              label: item,\n              value: value[index],\n            },\n            e,\n          });\n        }\n      }\n    };\n\n    const onCheckAllChange = (\n      checkAll: boolean,\n      e: React.MouseEvent<HTMLLIElement>,\n    ) => {\n      const isDisabledCheckAll = (opt: TdOptionProps) =>\n        opt.checkAll && opt.disabled;\n      if (\n        !multiple ||\n        currentOptions.some(\n          (opt) => !isSelectOptionGroup(opt) && isDisabledCheckAll(opt),\n        )\n      ) {\n        return;\n      }\n\n      const isSelectableOption = (opt: TdOptionProps) =>\n        !opt.checkAll && !opt.disabled;\n      const getOptionValue = (option: SelectOption) =>\n        valueType === 'object' ? option : option[keys?.value || 'value'];\n\n      const values = [];\n      currentOptions.forEach((option) => {\n        if (isSelectOptionGroup(option)) {\n          option.children.forEach((item) => {\n            if (isSelectableOption(item)) {\n              values.push(getOptionValue(item));\n            }\n          });\n        } else if (isSelectableOption(option)) {\n          values.push(getOptionValue(option));\n        }\n      });\n\n      const { currentSelectedOptions, allSelectedValue } = getSelectedOptions(\n        values,\n        multiple,\n        valueType,\n        keys,\n        valueToOption,\n      );\n\n      const checkAllValue =\n        !checkAll &&\n          allSelectedValue.length !== (props.value as Array<SelectOption>)?.length\n          ? allSelectedValue\n          : [];\n\n      onChange?.(checkAllValue, {\n        e,\n        trigger: !checkAll ? 'check' : 'uncheck',\n        selectedOptions: currentSelectedOptions,\n      });\n    };\n\n    // 选中 Popup 某项\n    const handleChange = (\n      value:\n        | string\n        | number\n        | Array<string | number | Record<string, string | number>>,\n      context: {\n        e: React.MouseEvent<HTMLLIElement>;\n        trigger: SelectValueChangeTrigger;\n        value?: SelectValue;\n        label?: string;\n      },\n    ) => {\n      const selectedValue = multiple ? context.value : value;\n\n      if (multiple) {\n        !reserveKeyword &&\n          inputValue &&\n          onInputChange('', { e: context.e, trigger: 'change' });\n      }\n      if (creatable && isFunction(onCreate)) {\n        if (\n          (options as OptionsType).filter(\n            (option) => option.value === selectedValue,\n          ).length === 0\n        ) {\n          onCreate(selectedValue as string); // 手动输入 此时为string\n        }\n      }\n      // 处理onChange回调中的selectedOptions参数\n      const { currentSelectedOptions, currentOption } = getSelectedOptions(\n        value,\n        multiple,\n        valueType,\n        keys,\n        valueToOption,\n        selectedValue,\n      );\n      onChange?.(value, {\n        e: context.e,\n        trigger: context.trigger,\n        selectedOptions: currentSelectedOptions,\n        option: currentOption,\n      });\n\n      if (multiple && context?.trigger === 'uncheck' && isFunction(onRemove)) {\n        const value = context?.value;\n        const option = (options as OptionsType).find(\n          (option) => option.value === value,\n        );\n        onRemove({\n          value,\n          data: option,\n          e: context.e,\n        });\n      }\n    };\n\n    // 处理filter逻辑\n    const handleFilter = (value: string) => {\n      let filteredOptions: SelectOption[] = [];\n      if (filterable && isFunction(onSearch)) {\n        return;\n      }\n      if (!value) {\n        setCurrentOptions(tmpPropOptions);\n        return;\n      }\n\n      const filterLabels = [];\n      const filterMethods = (option: SelectOption) => {\n        if (filter && isFunction(filter)) {\n          return filter(value, option);\n        }\n        const upperValue = value.toUpperCase();\n        return (option?.label || '').toUpperCase().includes(upperValue);\n      };\n\n      tmpPropOptions?.forEach((option) => {\n        if (isSelectOptionGroup(option)) {\n          filteredOptions.push({\n            ...option,\n            children: option.children?.filter((child) => {\n              if (filterMethods(child)) {\n                filterLabels.push(child.label);\n                return true;\n              }\n              return false;\n            }),\n          });\n        } else if (filterMethods(option)) {\n          filterLabels.push(option.label);\n          filteredOptions.push(option);\n        }\n      });\n      const isSameLabelOptionExist = filterLabels.includes(value);\n      if (creatable && !isSameLabelOptionExist) {\n        filteredOptions = filteredOptions.concat([{ label: value, value }]);\n      }\n      setCurrentOptions(filteredOptions);\n    };\n\n    // 处理输入框逻辑\n    const handleInputChange = (\n      value: string,\n      context: SelectInputValueChangeContext,\n    ) => {\n      if (context.trigger !== 'clear') {\n        onInputChange(value, { e: context.e, trigger: 'input' });\n      }\n      if (value === undefined) {\n        return;\n      }\n      if (isFunction(onSearch)) {\n        onSearch(value, { e: context.e as KeyboardEvent<HTMLDivElement> });\n        return;\n      }\n    };\n\n    const handleClear = (context) => {\n      context.e.stopPropagation();\n      if (Array.isArray(value)) {\n        onChange([], { ...context, trigger: 'clear', selectedOptions: [] });\n      } else {\n        onChange(null, { ...context, trigger: 'clear', selectedOptions: [] });\n      }\n      onClear(context);\n    };\n\n    useEffect(() => {\n      if (typeof inputValue !== 'undefined') {\n        handleFilter(String(inputValue));\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputValue, tmpPropOptions]);\n\n    // 渲染后置图标\n    const renderSuffixIcon = () => {\n      if (suffixIcon) {\n        return suffixIcon;\n      }\n      if (loading) {\n        return (\n          <Loading\n            className={classNames(\n              `${name}__right-icon`,\n              `${name}__active-icon`,\n            )}\n            loading={true}\n            size=\"small\"\n          />\n        );\n      }\n\n      return (\n        showArrow && (\n          <FakeArrow\n            className={`${name}__right-icon`}\n            isActive={showPopup}\n            disabled={disabled}\n          />\n        )\n      );\n    };\n\n    const getPopupInstance = useCallback(\n      () => (selectInputRef as any).current?.getPopupContentElement(),\n      [],\n    );\n\n    const childrenWithProps = Children.map(children, (child) => {\n      if (isValidElement(child)) {\n        const addedProps = { multiple };\n        return cloneElement(child, { ...addedProps });\n      }\n      return child;\n    });\n\n    // 渲染主体内容\n    const renderContent = () => {\n      const popupContentProps = {\n        onChange: handleChange,\n        value,\n        className,\n        size,\n        multiple,\n        showPopup,\n        // popup弹出层内容只会在点击事件之后触发 并且无任何透传参数\n        setShowPopup: (show: boolean) => handleShowPopup(show, {}),\n        options: currentOptions,\n        empty,\n        max,\n        loadingText,\n        loading,\n        valueType,\n        keys,\n        panelBottomContent,\n        panelTopContent,\n        onCheckAllChange,\n        getPopupInstance,\n        scroll,\n      };\n      return (\n        <PopupContent {...popupContentProps}>{childrenWithProps}</PopupContent>\n      );\n    };\n\n    const renderValueDisplay = () => {\n      if (!valueDisplay) {\n        if (!multiple) {\n          if (typeof selectedLabel !== 'string') {\n            return selectedLabel;\n          }\n          return '';\n        }\n        return ({ value: val }) =>\n          val\n            .slice(0, minCollapsedNum ? minCollapsedNum : val.length)\n            .map((v: string, key: number) => {\n              const filterOption: SelectOption & { disabled?: boolean } =\n                options?.find((option) => option.label === v);\n              return (\n                <Tag\n                  key={key}\n                  closable={!filterOption?.disabled && !disabled && !readonly}\n                  size={size}\n                  {...tagProps}\n                  onClose={({ e }) => {\n                    e.stopPropagation();\n                    e?.nativeEvent?.stopImmediatePropagation?.();\n                    const values = getSelectValueArr(\n                      value,\n                      value[key],\n                      true,\n                      valueType,\n                      keys,\n                    );\n\n                    const { currentSelectedOptions } = getSelectedOptions(\n                      values,\n                      multiple,\n                      valueType,\n                      keys,\n                      valueToOption,\n                      value,\n                    );\n                    onChange(values, {\n                      e,\n                      selectedOptions: currentSelectedOptions,\n                      trigger: 'tag-remove',\n                    });\n                    tagProps?.onClose?.({ e });\n\n                    onRemove?.({\n                      value: value[key],\n                      data: { label: v, value: value[key] },\n                      e: e as unknown as React.MouseEvent<\n                        HTMLDivElement,\n                        MouseEvent\n                      >,\n                    });\n                  }}\n                >\n                  {v}\n                </Tag>\n              );\n            });\n      }\n      if (typeof valueDisplay === 'string') {\n        return valueDisplay;\n      }\n      if (multiple) {\n        return ({ onClose }) =>\n          parseContentTNode(valueDisplay, { value: selectedOptions, onClose });\n      }\n      return parseContentTNode(valueDisplay, {\n        value: selectedLabel,\n        onClose: noop,\n      });\n    };\n\n    // 将第一个选中的 option 置于列表可见范围的最后一位\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!content || isScrolling) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = content.querySelector(\n        `.${classPrefix}-is-selected`,\n      );\n      if (!multiple && firstSelectedNode) {\n        const { paddingBottom } = getComputedStyle(firstSelectedNode);\n        const { marginBottom } = getComputedStyle(content);\n        const elementBottomHeight =\n          parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n        // 小于0时不需要特殊处理，会被设为0\n        const updateValue =\n          getOffsetTopToContainer(firstSelectedNode, content) -\n          content.offsetTop -\n          (content.clientHeight - firstSelectedNode.clientHeight) +\n          elementBottomHeight;\n\n        // 通过 setTimeout 确保组件渲染完成后再设置 scrollTop\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        });\n      }\n    };\n\n    const { onMouseEnter, onMouseLeave } = props;\n\n    const handleEnter = (\n      _,\n      context: { inputValue: string; e: KeyboardEvent<HTMLDivElement> },\n    ) => {\n      onEnter?.({ ...context, value });\n    };\n\n    const handleScroll = ({ e }: { e: WheelEvent<HTMLDivElement> }) => {\n      toggleIsScrolling(true);\n\n      onScroll?.({ e });\n      if (onScrollToBottom) {\n        const debounceOnScrollBottom = debounce(\n          (e) => onScrollToBottom({ e }),\n          100,\n        );\n\n        const { scrollTop, clientHeight, scrollHeight } =\n          e.target as HTMLDivElement;\n        if (clientHeight + Math.floor(scrollTop) === scrollHeight) {\n          debounceOnScrollBottom(e);\n        }\n      }\n    };\n\n    return (\n      <div\n        className={classNames(`${name}__wrap`, className)}\n        style={style}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <SelectInput\n          autoWidth={!style?.width && autoWidth}\n          ref={composeRefs(ref, selectInputRef)}\n          className={name}\n          readonly={readonly}\n          autofocus={props.autofocus}\n          allowInput={filterable || isFunction(filter)}\n          multiple={multiple}\n          value={selectedLabel}\n          options={selectedOptions}\n          valueDisplay={renderValueDisplay()}\n          clearable={clearable}\n          disabled={disabled}\n          status={props.status}\n          tips={props.tips}\n          borderless={borderless}\n          label={label}\n          suffix={props.suffix}\n          prefixIcon={prefixIcon}\n          suffixIcon={renderSuffixIcon()}\n          panel={renderContent()}\n          placeholder={\n            !multiple && showPopup && selectedLabel\n              ? selectedLabel\n              : placeholder || '请选择'\n          }\n          inputValue={inputValue}\n          tagInputProps={{\n            size,\n            ...tagInputProps,\n          }}\n          tagProps={{ size, ...tagProps }}\n          inputProps={{\n            size,\n            ...inputProps,\n          }}\n          minCollapsedNum={minCollapsedNum}\n          collapsedItems={collapsedItems}\n          updateScrollTop={updateScrollTop}\n          popupProps={{\n            overlayClassName: [`${name}__dropdown`, overlayClassName],\n            onScroll: handleScroll,\n            ...restPopupProps,\n          }}\n          popupVisible={showPopup}\n          onPopupVisibleChange={handleShowPopup}\n          onTagChange={onTagChange}\n          onInputChange={handleInputChange}\n          onFocus={onFocus}\n          onEnter={handleEnter}\n          onBlur={(_, context) => {\n            onBlur?.({\n              value,\n              e: context.e as React.FocusEvent<HTMLDivElement>,\n            });\n          }}\n          onClear={handleClear}\n          {...selectInputProps}\n        />\n      </div>\n    );\n  },\n  { Option, OptionGroup },\n);\n\nSelect.displayName = 'Select';\n\nexport default Select;\n","import _Select from './Select';\n\nimport './style/index.js';\n\nexport type { SelectProps } from './Select';\nexport * from './type';\n\nexport const Select = _Select;\nexport default Select;\n","/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDialogCardProps, TdDialogProps } from './type';\n\nexport const dialogCardDefaultProps: TdDialogCardProps = {\n  closeBtn: true,\n  footer: true,\n  header: true,\n  theme: 'default',\n};\n\nexport const dialogDefaultProps: TdDialogProps = {\n  closeOnEscKeydown: undefined,\n  closeOnOverlayClick: undefined,\n  destroyOnClose: false,\n  draggable: false,\n  mode: 'modal',\n  placement: 'top',\n  preventScrollThrough: true,\n  showInAttachedElement: false,\n  showOverlay: true,\n  lazy: true,\n};\n","import React, { forwardRef, isValidElement } from 'react';\nimport classNames from 'classnames';\nimport { isString, isObject, isFunction } from 'lodash-es';\nimport {\n    CloseIcon as TdCloseIcon,\n    InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport Button, { ButtonProps } from '../button';\nimport { TdDialogCardProps } from './type';\nimport { StyledProps } from '../common';\nimport parseTNode from '../utils/parseTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\n// import { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { dialogCardDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface DialogCardProps extends TdDialogCardProps, StyledProps, React.HTMLAttributes<HTMLDivElement> {\n    children?: React.ReactNode;\n}\n\nconst renderDialogButton = (btn: DialogCardProps['cancelBtn'], defaultProps: ButtonProps) => {\n    let result = null;\n\n    if (isString(btn)) {\n        result = <Button {...defaultProps}>{btn}</Button>;\n    } else if (isValidElement(btn)) {\n        result = btn;\n    } else if (isObject(btn)) {\n        result = <Button {...defaultProps} {...(btn as {})} />;\n    } else if (isFunction(btn)) {\n        result = btn();\n    }\n\n    return result;\n};\n\nconst DialogCard = forwardRef<HTMLDivElement, DialogCardProps>((props, ref) => {\n    const { classPrefix } = useConfig();\n    const componentCls = `${classPrefix}-dialog`;\n    const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon } = useGlobalIcon({\n        CloseIcon: TdCloseIcon,\n        InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n        CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    });\n    // const [local, t] = useLocaleReceiver('dialog');\n    // const confirmText = t(local.confirm);\n    // const cancelText = t(local.cancel);\n    const confirmText = '确认';\n    const cancelText = '取消';\n    const {\n        theme,\n        header,\n        closeBtn,\n        footer,\n        body,\n        children,\n        className,\n        onCancel,\n        onConfirm,\n        onCloseBtnClick,\n        cancelBtn = cancelText,\n        confirmBtn = confirmText,\n        confirmLoading,\n        ...otherProps\n    } = useDefaultProps<DialogCardProps>(props, dialogCardDefaultProps);\n\n    const renderHeaderContent = () => {\n        const iconMap = {\n            info: <InfoCircleFilledIcon className={`${classPrefix}-is-info`} />,\n            warning: <InfoCircleFilledIcon className={`${classPrefix}-is-warning`} />,\n            // error is going to deprecated\n            error: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n            danger: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n            success: <CheckCircleFilledIcon className={`${classPrefix}-is-success`} />,\n        };\n\n        return (\n            <div className={`${componentCls}__header-content`}>\n                {iconMap[theme]}\n                {header}\n            </div>\n        );\n    };\n\n    const renderCloseBtn = () => {\n        if (!closeBtn) {\n            return null;\n        }\n\n        const closeIcon = () => (closeBtn === true ? <CloseIcon /> : closeBtn);\n\n        return (\n            <span\n                className={`${componentCls}__close`}\n                style={{\n                    marginLeft: 'auto',\n                }}\n                onClick={(e: React.MouseEvent<HTMLDivElement>) => onCloseBtnClick?.({ e })}\n            >\n                {closeIcon()}\n            </span>\n        );\n    };\n\n    const renderHeader = () => (\n        <div className={classNames(`${componentCls}__header`)}>\n            {renderHeaderContent()}\n            {renderCloseBtn()}\n        </div>\n    );\n\n    const renderFooter = () => {\n        const defaultFooter = () => {\n            const renderCancelBtn = renderDialogButton(cancelBtn, {\n                variant: 'outline',\n                onClick: (e: React.MouseEvent<HTMLButtonElement>) => onCancel?.({ e }),\n                className: classNames(`${componentCls}__cancel`, cancelBtn?.props?.className),\n            });\n            const renderConfirmBtn = renderDialogButton(confirmBtn, {\n                theme: 'primary',\n                loading: confirmLoading,\n                onClick: (e: React.MouseEvent<HTMLButtonElement>) => onConfirm?.({ e }),\n                className: classNames(`${componentCls}__confirm`, confirmBtn?.className),\n            });\n\n            return (\n                <>\n                    {renderCancelBtn}\n                    {renderConfirmBtn}\n                </>\n            );\n        };\n\n        return <div className={`${componentCls}__footer`}>{parseTNode(footer, null, defaultFooter())}</div>;\n    };\n\n    return (\n        <div ref={ref} {...otherProps} className={classNames(componentCls, `${componentCls}--default`, className)}>\n            {!!header && renderHeader()}\n            <div className={`${componentCls}__body`}>{body || children}</div>\n            {!!footer && renderFooter()}\n        </div>\n    );\n});\n\nDialogCard.displayName = 'DialogCard';\n\nexport default DialogCard;\n","import { RefObject, useRef } from 'react';\nimport useMouseEvent from '../../hooks/useMouseEvent';\n\ninterface DialogDragProps {\n  dialogCardRef: RefObject<HTMLDivElement | null>;\n  canDraggable?: boolean;\n}\n\nconst useDialogDrag = (props: DialogDragProps) => {\n  const { dialogCardRef, canDraggable } = props;\n\n  const validWindow = typeof window === 'object';\n  const screenHeight = validWindow\n    ? window.innerHeight || document.documentElement.clientHeight\n    : undefined;\n  const screenWidth = validWindow\n    ? window.innerWidth || document.documentElement.clientWidth\n    : undefined;\n\n  const dragOffset = useRef({ x: 0, y: 0 });\n\n  useMouseEvent(dialogCardRef, {\n    enabled: canDraggable,\n    onDown: (e) => {\n      if (\n        !validWindow ||\n        screenWidth === undefined ||\n        screenHeight === undefined ||\n        !dialogCardRef.current\n      )\n        return;\n      const { offsetLeft, offsetTop, offsetWidth, offsetHeight, style } =\n        dialogCardRef.current;\n      if (offsetWidth > screenWidth || offsetHeight > screenHeight) return;\n      style.cursor = 'move';\n      dragOffset.current = {\n        x: e.clientX - offsetLeft,\n        y: e.clientY - offsetTop,\n      };\n    },\n    onMove: (e) => {\n      if (\n        !validWindow ||\n        screenWidth === undefined ||\n        screenHeight === undefined ||\n        !dialogCardRef.current\n      )\n        return;\n      const { offsetWidth, offsetHeight, style } = dialogCardRef.current;\n      let diffX = e.clientX - dragOffset.current.x;\n      let diffY = e.clientY - dragOffset.current.y;\n      // 拖拽上左边界限制\n      if (diffX < 0) diffX = 0;\n      if (diffY < 0) diffY = 0;\n      if (screenWidth - offsetWidth - diffX < 0)\n        diffX = screenWidth - offsetWidth;\n      if (screenHeight - offsetHeight - diffY < 0)\n        diffY = screenHeight - offsetHeight;\n      style.position = 'absolute';\n      style.left = `${diffX}px`;\n      style.top = `${diffY}px`;\n    },\n    onUp: () => {\n      if (dialogCardRef.current) dialogCardRef.current.style.cursor = 'default';\n    },\n  });\n};\n\nexport default useDialogDrag;\n","import { useEffect, type RefObject } from 'react';\n\nconst dialogSet: Set<RefObject<HTMLElement | null>> = new Set();\n\nconst useDialogEsc = (\n  visible: boolean | undefined,\n  dialog: RefObject<HTMLElement | null>,\n) => {\n  useEffect(() => {\n    if (visible) {\n      // 将 dialog 添加至 Set 对象\n      if (dialog?.current) {\n        dialogSet.add(dialog);\n        dialog?.current?.focus();\n      }\n    } else if (dialogSet.has(dialog)) {\n      // 将 dialog 从 Set 对象删除\n      dialogSet.delete(dialog);\n      const dialogList = [...dialogSet];\n      // 将 Set 对象中最后一个 dialog 设置为 focus\n      dialogList[dialogList.length - 1]?.current?.focus();\n    }\n    return () => {\n      // 从 Set 对象删除无效的 dialog\n      dialogSet.forEach((item) => {\n        if (item?.current === null) {\n          dialogSet.delete(item);\n        }\n      });\n    };\n  }, [visible, dialog]);\n};\n\nexport default useDialogEsc;\n","import { RefObject, useEffect, useRef } from 'react';\nimport useIsomorphicLayoutEffect from '../../hooks/useLayoutEffect';\ntype Position = { x: number; y: number };\nexport default function useDialogPosition(\n  visible: boolean | undefined,\n  dialogCardRef: RefObject<HTMLElement | null>,\n) {\n  const mousePosRef = useRef<Position>(null);\n\n  const getClickPosition = (e: MouseEvent) => {\n    if (mousePosRef) {\n      mousePosRef.current = {\n        x: e.clientX,\n        y: e.clientY,\n      };\n      setTimeout(() => {\n        mousePosRef.current = null;\n      }, 100);\n    }\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    document.addEventListener('click', getClickPosition, true);\n    return () => {\n      document.removeEventListener('click', getClickPosition, true);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!visible) return;\n    // 动画渲染初始位置\n    if (mousePosRef.current && dialogCardRef.current) {\n      // eslint-disable-next-line\n      dialogCardRef.current.style.transformOrigin = `${mousePosRef.current.x - dialogCardRef.current.offsetLeft}px ${\n        mousePosRef.current.y - dialogCardRef.current.offsetTop\n      }px`;\n    }\n  }, [visible, dialogCardRef]);\n}\n","import { useRef, useCallback } from 'react';\nimport { getScrollbarWidth } from '../../utils/getScrollbarWidth';\nimport useLayoutEffect from '../../hooks/useLayoutEffect';\nimport type { TdDialogProps } from '../type';\nlet key = 1;\n\nexport default function useDialogLockStyle({\n  preventScrollThrough,\n  visible,\n  mode,\n  showInAttachedElement,\n}: Partial<TdDialogProps>) {\n  const lockStyleRef = useRef<HTMLStyleElement>(null);\n  const timerRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const clearStyleFunc = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = setTimeout(() => {\n      lockStyleRef.current?.parentNode?.removeChild?.(lockStyleRef.current);\n    }, 150);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined' || !visible) return;\n    if (!lockStyleRef.current) {\n      lockStyleRef.current = document.createElement('style');\n    }\n    const hasScrollBar =\n      document.documentElement.scrollHeight >\n      document.documentElement.clientHeight;\n    const scrollbarWidth = hasScrollBar ? getScrollbarWidth() : 0;\n\n    lockStyleRef.current.dataset.id = `td_dialog_${+new Date()}_${(key += 1)}`;\n    lockStyleRef.current.innerHTML = `\n      html body {\n        overflow-y: hidden;\n        width: calc(100% - ${scrollbarWidth}px);\n      }\n    `;\n\n    return clearStyleFunc;\n  }, [visible, clearStyleFunc]);\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined') return;\n    if (mode !== 'modal' || !preventScrollThrough || showInAttachedElement)\n      return;\n\n    if (visible) {\n      if (lockStyleRef.current) document.head.appendChild(lockStyleRef.current);\n    } else {\n      clearStyleFunc();\n    }\n  }, [\n    preventScrollThrough,\n    visible,\n    mode,\n    showInAttachedElement,\n    clearStyleFunc,\n  ]);\n}\n","export function parseValueToPx(value: Number | String) {\n  if (typeof value === 'number') return `${value}px`;\n  return value;\n}\n","import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\nimport { isUndefined } from 'lodash-es';\nimport type { StyledProps } from '../common';\nimport Portal from '../common/Portal';\nimport useAttach from '../hooks/useAttach';\nimport useConfig from '../hooks/useConfig';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useSetState from '../hooks/useSetState';\n// import { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { dialogDefaultProps } from './defaultProps';\nimport DialogCard from './DialogCard';\nimport useDialogDrag from './hooks/useDialogDrag';\nimport useDialogEsc from './hooks/useDialogEsc';\nimport useDialogPosition from './hooks/useDialogPosition';\nimport useLockStyle from './hooks/useLockStyle';\nimport type { DialogInstance, TdDialogProps } from './type';\nimport { parseValueToPx } from './utils';\n\nexport interface DialogProps extends TdDialogProps, StyledProps {\n    isPlugin?: boolean; // 是否以插件形式调用\n}\n\nconst Dialog = forwardRef<DialogInstance, DialogProps>((originalProps, ref) => {\n    const props = useDefaultProps<DialogProps>(originalProps, dialogDefaultProps);\n    const { children, ...restProps } = props;\n    const { classPrefix } = useConfig();\n\n    const componentCls = `${classPrefix}-dialog`;\n    const wrapRef = useRef<HTMLElement>(null);\n    const maskRef = useRef<HTMLElement>(null);\n    const contentClickRef = useRef(false);\n    const dialogCardRef = useRef<HTMLDivElement>(null);\n    const dialogPosition = useRef(null);\n    const portalRef = useRef(null);\n    const [state, setState] = useSetState<DialogProps>({ isPlugin: false, ...restProps });\n    // const [local] = useLocaleReceiver('dialog');\n\n    const {\n        className,\n        dialogClassName,\n        style,\n        width,\n        mode,\n        zIndex,\n        visible,\n        attach,\n        onBeforeOpen,\n        onBeforeClose,\n        onOpened,\n        onCancel,\n        onConfirm,\n        onClose,\n        onClosed,\n        isPlugin,\n        draggable,\n        onOverlayClick,\n        onEscKeydown,\n        closeOnEscKeydown,\n        confirmOnEnter,\n        showOverlay,\n        showInAttachedElement,\n        closeOnOverlayClick,\n        destroyOnClose,\n        preventScrollThrough,\n        onCloseBtnClick,\n        forceRender,\n        lazy,\n        ...restState\n    } = state;\n\n    const dialogAttach = useAttach('dialog', attach);\n\n    useLockStyle({ preventScrollThrough, visible, mode, showInAttachedElement });\n    useDialogEsc(visible, wrapRef);\n    useDialogPosition(visible, dialogCardRef);\n    useDialogDrag({\n        dialogCardRef,\n        canDraggable: draggable && mode === 'modeless',\n    });\n\n    useEffect(() => {\n        if (isPlugin) {\n            return;\n        }\n        // 插件式调用不会更新props, 只有组件式调用才会更新props\n        setState((prevState) => ({ ...prevState, ...props }));\n    }, [props, setState, isPlugin]);\n\n    useImperativeHandle(ref, () => ({\n        show() {\n            setState({ visible: true });\n        },\n        hide() {\n            setState({ visible: false });\n        },\n        setConfirmLoading: (loading: boolean) => {\n            setState({ confirmLoading: loading });\n        },\n        destroy() {\n            setState({ visible: false, destroyOnClose: true });\n        },\n        update(newOptions) {\n            setState((prevState) => ({ ...prevState, ...newOptions }));\n        },\n    }));\n\n    // @ts-ignore 兼容旧版本 2.0 移除\n    if (props.mode === 'normal') {\n        console.error('Dialog', 'mode=\"normal\" is not supported, please use DialogCard.');\n        return <DialogCard {...props} />;\n    }\n\n    const onMaskClick = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (showOverlay && (closeOnOverlayClick)) {\n            // 判断点击事件初次点击是否为内容区域\n            if (contentClickRef.current) {\n                contentClickRef.current = false;\n            } else if (e.target === dialogPosition.current) {\n                onOverlayClick?.({ e });\n                onClose?.({ e, trigger: 'overlay' });\n            }\n        }\n    };\n\n    const handleCancel = ({ e }) => {\n        onCancel?.({ e });\n        onClose?.({ e, trigger: 'cancel' });\n    };\n\n    const handleClose = ({ e }) => {\n        onCloseBtnClick?.({ e });\n        onClose?.({ e, trigger: 'close-btn' });\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n        if (e.key === 'Escape') {\n            e.stopPropagation();\n            onEscKeydown?.({ e });\n            if (closeOnEscKeydown) {\n                onClose?.({ e, trigger: 'esc' });\n            }\n        } else if (e.key === 'Enter' || e.key === 'NumpadEnter') {\n            // 回车键触发点击确认事件\n            e.stopPropagation();\n            confirmOnEnter && onConfirm?.({ e });\n        }\n    };\n\n    const onAnimateLeave = () => {\n        onClosed?.();\n\n        if (!wrapRef.current) return;\n        wrapRef.current.style.display = 'none';\n    };\n\n    const onAnimateStart = () => {\n        if (!wrapRef.current) return;\n        onBeforeOpen?.();\n        wrapRef.current.style.display = 'block';\n    };\n\n    const onInnerAnimateStart = () => {\n        if (!dialogCardRef.current) return;\n        dialogCardRef.current.style.display = 'block';\n    };\n\n    const onInnerAnimateLeave = () => {\n        if (!dialogCardRef.current) return;\n        dialogCardRef.current.style.display = 'none';\n    };\n\n    const renderMask = () => {\n        if (mode !== 'modal') return null;\n\n        return showOverlay ? (\n            <CSSTransition\n                in={visible}\n                appear\n                timeout={300}\n                classNames={`${componentCls}-fade`}\n                mountOnEnter\n                unmountOnExit\n                nodeRef={maskRef}\n            >\n                <div ref={maskRef} className={`${componentCls}__mask`} />\n            </CSSTransition>\n        ) : null;\n    };\n    return (\n        <CSSTransition\n            in={visible}\n            appear\n            timeout={300}\n            mountOnEnter={isUndefined(forceRender) ? lazy : !forceRender}\n            unmountOnExit={destroyOnClose}\n            nodeRef={portalRef}\n            onEnter={onAnimateStart}\n            onEntered={onOpened}\n            onExit={() => onBeforeClose?.()}\n            onExited={onAnimateLeave}\n        >\n            <Portal attach={dialogAttach} ref={portalRef}>\n                <div\n                    ref={wrapRef}\n                    className={classNames(className, `${componentCls}__ctx`, `${componentCls}__${mode}`, {\n                        [`${componentCls}__ctx--fixed`]: !showInAttachedElement,\n                        [`${componentCls}__ctx--absolute`]: showInAttachedElement,\n                    })}\n                    style={{ zIndex, display: 'none' }}\n                    onKeyDown={handleKeyDown}\n                    tabIndex={0}\n                >\n                    {renderMask()}\n                    <div className={`${componentCls}__wrap`}>\n                        <div\n                            ref={dialogPosition}\n                            className={classNames(`${componentCls}__position`, {\n                                [`${componentCls}--top`]: !!props.top || props.placement === 'top',\n                                [`${componentCls}--center`]: props.placement === 'center' && !props.top,\n                            })}\n                            style={{ paddingTop: parseValueToPx(props.top) }}\n                            onClick={onMaskClick}\n                        >\n                            <CSSTransition\n                                in={visible}\n                                appear\n                                timeout={300}\n                                classNames={`${componentCls}-zoom`}\n                                nodeRef={dialogCardRef}\n                                onEnter={onInnerAnimateStart}\n                                onExited={onInnerAnimateLeave}\n                            >\n                                <DialogCard\n                                    ref={dialogCardRef}\n                                    {...restState}\n                                    className={dialogClassName}\n                                    style={{ ...style, width: parseValueToPx(width || style?.width) }}\n                                    onConfirm={onConfirm}\n                                    onCancel={handleCancel}\n                                    onCloseBtnClick={handleClose}\n                                >\n                                    {children}\n                                </DialogCard>\n                            </CSSTransition>\n                        </div>\n                    </div>\n                </div>\n            </Portal>\n        </CSSTransition>\n    );\n});\n\nDialog.displayName = 'Dialog';\n\nexport default Dialog;\n","import React from 'react';\nimport { render } from \"../utils/react-render\";\nimport DialogComponent, { DialogProps } from \"./Dialog\";\nimport { getAttach } from '../utils/dom';\nimport { DialogOptions, DialogMethod, DialogConfirmMethod, DialogAlertMethod, DialogInstance } from './type';\nimport PluginContainer from '../common/PluginContainer';\nimport ConfigProvider from '../config-provider';\n\nexport interface DialogPluginType extends DialogMethod {\n    alert: DialogAlertMethod;\n    confirm: DialogConfirmMethod;\n}\n\n\nconst createDialog: DialogPluginType = (props: DialogOptions): DialogInstance => {\n    const dialogRef = React.createRef<DialogInstance>();\n    const options = { ...props };\n    const { visible = true } = options;\n\n    const fragment = document.createDocumentFragment();\n\n    const dGlobalConfig = ConfigProvider.getGlobalConfig();\n    render(<PluginContainer globalConfig={dGlobalConfig}><DialogComponent {...(options as DialogProps)} visible={visible} ref={dialogRef} isPlugin /></PluginContainer>, fragment); const container = getAttach(options.attach);\n\n    if (container) {\n        container.appendChild(fragment);\n    } else {\n        console.error('Dialog', 'attach is not exist');\n    }\n\n    const dialogNode: DialogInstance = {\n        show: () => {\n            requestAnimationFrame(() => {\n                container?.appendChild(fragment);\n                dialogRef.current?.show();\n            });\n        },\n        hide: () => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.destroy();\n            });\n        },\n        setConfirmLoading: (loading: boolean) => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.setConfirmLoading(loading);\n            });\n        },\n        update: (updateOptions: DialogOptions) => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.update(updateOptions);\n            });\n        },\n        destroy: () => {\n            requestAnimationFrame(() => {\n                dialogRef.current?.destroy();\n            });\n        },\n    };\n    return dialogNode;\n};\n\nconst confirm: DialogConfirmMethod = (props: DialogOptions) => createDialog(props);\n\nconst alert: DialogAlertMethod = (props: Omit<DialogOptions, 'confirmBtn'>) => {\n    const options = { ...props };\n    options.cancelBtn = null;\n    return createDialog(options);\n};\n\ncreateDialog.alert = alert;\ncreateDialog.confirm = confirm;\n\nexport const DialogPlugin = createDialog;\n\n","import _Dialog from './Dialog';\nimport _DialogCard from './DialogCard';\nimport { DialogPlugin as _DialogPlugin } from './plugin';\nimport './style/index.js';\n\nexport type { DialogProps } from './Dialog';\nexport * from './type';\nexport const Dialog = _Dialog;\nexport const DialogCard = _DialogCard;\n\nexport const dialog = _DialogPlugin;\nexport const DialogPlugin = _DialogPlugin;\nexport default Dialog;\n"],"names":["maxWidthClasses","sm","md","lg","xl","full","Container","children","_ref","_ref$className","className","_ref$maxWidth","maxWidth","React","createElement","concat","gridClassMap","cols","gap","Grid","_ref$cols","_ref$gap","rest","_objectWithoutProperties","_excluded","_objectSpread","clsx","directionClasses","row","col","justifyClasses","start","end","center","between","around","evenly","alignClasses","baseline","stretch","wrapClasses","nowrap","wrap","gapClasses","Flex","_ref$direction","direction","_ref$justify","justify","_ref$align","align","_ref$wrap","justifyMap","alignMap","top","middle","bottom","Row","_ref$gutter","gutter","_ref2","Array","isArray","_ref3","_slicedToArray","horizontal","vertical","rowStyle","marginLeft","marginRight","rowGap","style","Children","map","child","_child$props","cloneElement","paddingLeft","paddingRight","paddingTop","paddingBottom","props","SPAN","toPercent","n","toFixed","replace","spanVariants","offsetVariants","i","percent","tv","base","variants","span","offset","order","responsiveClass","breakpoint","Number","Col","alertDefaultProps","closeBtn","maxLine","theme","transitionTime","Alert","forwardRef","ref","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","_useDefaultProps","useDefaultProps","message","title","operation","icon","onClose","_useDefaultProps$onCl","onClosed","noop","alertProps","_React$useState","useState","_React$useState2","closed","setClosed","_React$useState3","_React$useState4","collapsed","setCollapsed","nodeRef","useRef","iconMap","success","info","error","warning","handleClose","e","handleCollapse","renderIconNode","isValidElement","renderMessage","item","index","key","length","onClick","isUsingClose","Reflect","has","closeNode","close","console","warn","renderClose","parseTNode","CSSTransition","unmountOnExit","classNames","exitActive","timeout","onExited","composeRefs","displayName","_Alert","badgeDefaultProps","count","dot","maxCount","shape","showZero","size","Badge","color","content","restProps","childNode","badgeClassName","getDisplayCount","isHidden","getStyle","mergedStyle","backgroundColor","right","marginTop","badge","_Badge","selectDefaultProps","autoWidth","autofocus","borderless","clearable","creatable","loading","max","minCollapsedNum","multiple","placeholder","readonly","reserveKeyword","showArrow","status","valueType","optionDefaultProps","checkAll","disabled","optionGroupDefaultProps","divider","OptionGroup","label","_defineProperty","componentType","Option","propDisabled","propLabel","propTitle","selectedValue","keys","value","onSelect","restData","isVirtual","selected","indeterminate","titleContent","useMemo","controlledTitle","_useDomRefCallback","useDomRefCallback","_useDomRefCallback2","optionRef","setRefCurrent","useEffect","_props$onRowMounted","onRowMounted","call","data","isNumber","isString","get","some","optionLength","handleSelect","event","String","_props$onCheckAllChan","onCheckAllChange","renderItem","type","stopPropagation","nativeEvent","stopImmediatePropagation","isSelectOptionGroup","option","setValueToOptionFormOptionDom","dom","valueToOption","_dom$props","getValueToOption","options","forEach","_option$children","isPlainObject","groupChildren","handlerElement","groupItem","getLabel","selectedLabel","includes","isSelected","getMultipleTags","values","tags","toString","getSelectValueArr","activeValue","objVal","currentValues","_toConsumableArray","isValueObj","filter","push","getSelectedOptions","isObjectType","currentSelectedOptions","currentOption","allSelectedValue","tmpPropOptions","Object","_tmpPropOptions$filte","_currentSelectedOptio","_currentSelectedOptio2","v","_value$includes","find","_tmpPropOptions$filte2","_currentSelectedOptio3","usePanelVirtualScroll","popupContentRef","scroll","scrollThreshold","threshold","scrollType","scrollParams","heightMap","small","medium","large","rowHeight","isFixedRowHeight","bufferSize","_useVirtualScroll","useVirtualScroll","_useVirtualScroll$vis","visibleData","_useVirtualScroll$han","handleScroll","handleVirtualScroll","_useVirtualScroll$scr","scrollHeight","_useVirtualScroll$tra","translateY","_useVirtualScroll$han2","handleRowMounted","lastScrollY","onInnerVirtualScroll","useCallback","target","scrollTop","Math","abs","popupContentDom","current","_popupContentDom$addE","addEventListener","_popupContentDom$remo","removeEventListener","cursorStyle","position","width","height","transition","transform","MsTransform","MozTransform","WebkitTransform","panelStyle","PopupContent","showPopup","setShowPopup","empty","loadingText","panelTopContent","panelBottomContent","onChange","getPopupInstance","propsOptions","propsScroll","_usePanelVirtualScrol","selectableOptions","uniqueOptions","group","isValObj","assign","trigger","selectVal","isEqual","childrenWithProps","addedProps","renderOptions","optionValue","_excluded2","isEmpty","renderPanel","renderedOptions","extraStyle","Fragment","UseOptions","_useState","_useState2","setValueToOption","_useState3","_useState4","currentOptions","setCurrentOptions","_useState5","_useState6","setTmpPropOptions","_useState7","_useState8","selectedOptions","setSelectedOptions","transformedOptions","arrayChildren","toArray","optionChildren","isChildrenFilterable","handlerOptionElement","_v$props$children","_transformedOptions","valueKey","labelKey","oldSelectedOptions","createOptionFromValue","_typeof","Select","forwardRefWithStatics","originalProps","_props$loadingText","popupProps","prefixIcon","filterable","collapsedItems","valueDisplay","inputProps","selectInputProps","tagInputProps","tagProps","suffixIcon","onFocus","onBlur","_props$onClear","onClear","onCreate","onRemove","onSearch","onEnter","onPopupVisibleChange","_useControlled","useControlled","_useControlled2","selectInputRef","overlayClassName","onScroll","onScrollToBottom","restPopupProps","isScrolling","toggleIsScrolling","name","_useControlled3","_useControlled4","_useControlled5","onInputChange","_useControlled6","inputValue","_useOptions","useOptions","selectedOption","handleShowPopup","visible","ctx","onTagChange","_currentTags","context","closest","len","_getSelectedOptions","_e$stopPropagation","_getSelectedOptions2","isFunction","_props$value","isDisabledCheckAll","opt","isSelectableOption","getOptionValue","_getSelectedOptions3","checkAllValue","handleChange","_getSelectedOptions4","handleFilter","filteredOptions","filterLabels","filterMethods","upperValue","toUpperCase","isSameLabelOptionExist","handleInputChange","handleClear","renderSuffixIcon","Loading","FakeArrow","isActive","_selectInputRef$curre","getPopupContentElement","renderContent","popupContentProps","show","renderValueDisplay","val","slice","filterOption","Tag","closable","_e$nativeEvent","_e$nativeEvent$stopIm","_tagProps$onClose","_getSelectedOptions5","_ref4","parseContentTNode","updateScrollTop","firstSelectedNode","querySelector","_getComputedStyle","getComputedStyle","_getComputedStyle2","marginBottom","elementBottomHeight","parseInt","updateValue","getOffsetTopToContainer","offsetTop","clientHeight","setTimeout","onMouseEnter","onMouseLeave","handleEnter","_","_ref5","debounceOnScrollBottom","debounce","_e$target","floor","SelectInput","allowInput","tips","suffix","panel","popupVisible","_Select","dialogCardDefaultProps","footer","header","dialogDefaultProps","closeOnEscKeydown","closeOnOverlayClick","destroyOnClose","draggable","mode","placement","preventScrollThrough","showInAttachedElement","showOverlay","lazy","renderDialogButton","btn","defaultProps","result","Button","isObject","DialogCard","componentCls","confirmText","cancelText","body","onCancel","onConfirm","onCloseBtnClick","_useDefaultProps$canc","cancelBtn","_useDefaultProps$conf","confirmBtn","confirmLoading","otherProps","renderHeaderContent","danger","renderCloseBtn","closeIcon","renderHeader","renderFooter","defaultFooter","_cancelBtn$props","renderCancelBtn","variant","renderConfirmBtn","useDialogDrag","dialogCardRef","canDraggable","validWindow","window","screenHeight","innerHeight","document","documentElement","screenWidth","innerWidth","clientWidth","dragOffset","x","y","useMouseEvent","enabled","onDown","_dialogCardRef$curren","offsetLeft","offsetWidth","offsetHeight","cursor","clientX","clientY","onMove","_dialogCardRef$curren2","diffX","diffY","left","onUp","dialogSet","Set","useDialogEsc","dialog","_dialog$current","add","focus","_dialogList","dialogList","useDialogPosition","mousePosRef","getClickPosition","useIsomorphicLayoutEffect","transformOrigin","useDialogLockStyle","lockStyleRef","timerRef","clearStyleFunc","clearTimeout","_lockStyleRef$current","_lockStyleRef$current2","parentNode","removeChild","useLayoutEffect","hasScrollBar","scrollbarWidth","getScrollbarWidth","dataset","id","Date","innerHTML","head","appendChild","parseValueToPx","Dialog","wrapRef","maskRef","contentClickRef","dialogPosition","portalRef","_useSetState","useSetState","isPlugin","_useSetState2","state","setState","dialogClassName","zIndex","attach","onBeforeOpen","onBeforeClose","onOpened","onOverlayClick","onEscKeydown","confirmOnEnter","forceRender","restState","dialogAttach","useAttach","useLockStyle","prevState","useImperativeHandle","hide","setConfirmLoading","destroy","update","newOptions","onMaskClick","handleCancel","handleKeyDown","onAnimateLeave","display","onAnimateStart","onInnerAnimateStart","onInnerAnimateLeave","renderMask","appear","mountOnEnter","isUndefined","onEntered","onExit","Portal","onKeyDown","tabIndex","createDialog","dialogRef","createRef","_options$visible","fragment","createDocumentFragment","dGlobalConfig","ConfigProvider","getGlobalConfig","render","PluginContainer","globalConfig","DialogComponent","container","getAttach","dialogNode","requestAnimationFrame","_dialogRef$current","_dialogRef$current2","_dialogRef$current3","updateOptions","_dialogRef$current4","_dialogRef$current5","confirm","alert","DialogPlugin","_Dialog","_DialogCard","_DialogPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAMA,eAAA,GAAkB;AACtBC,EAAAA,EAAA,EAAI,iBAAA;AACJC,EAAAA,EAAA,EAAI,iBAAA;AACJC,EAAAA,EAAA,EAAI,iBAAA;AACJC,EAAAA,EAAA,EAAI,iBAAA;AACJ,EAAA,KAAA,EAAO,kBAAA;AACPC,EAAAA,IAAA,EAAM;AACR,CAAA;IAEaC,YAAsC,SAAtCA,gBAIP;AAAA,EAAA,IAHJC,QAAA,GAAAC,IAAA,CAAAD,QAAA;IAAAE,cAAA,GAAAD,IAAA,CACAE,SAAA;AAAAA,IAAAA,SAAA,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAY,EAAA,GAAAA,cAAA;IAAAE,aAAA,GAAAH,IAAA,CACZI,QAAA;AAAAA,IAAAA,QAAA,GAAAD,aAAA,KAAA,KAAA,CAAA,GAAW,IAAA,GAAAA,aAAA;AAEX,EAAA,sBACEE,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIJ,SAAA,EAAA,eAAA,CAAAK,MAAA,CAA2Bf,eAAA,CAAgBY,QAAQ,CAAC,EAAA,GAAA,CAAA,CAAAG,MAAA,CAAIL,SAAS;GAAA,EACnEH,QACH,CAAA;AAEJ;;;;;ACzBA,IAAMS,YAAA,GAAe;AACnBC,EAAAA,IAAA,EAAM;AACJ,IAAA,EAAA,EAAI,cAAA;AACJ,IAAA,EAAA,EAAI,cAAA;AACJ,IAAA,EAAA,EAAI,cAAA;AACJ,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG,aAAA;AACH,IAAA,CAAA,EAAG;GACL;AACAC,EAAAA,GAAA,EAAK;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,CAAA,EAAG,OAAA;AACH,IAAA,EAAA,EAAI,QAAA;AACJ,IAAA,EAAA,EAAI,QAAA;AACJ,IAAA,EAAA,EAAI;AACN;AACF,CAAA;IASaC,OAA4B,SAA5BA,WAMP;AAAA,EAAA,IAAAC,SAAA,GAAAZ,IAAA,CALJS,IAAA;AAAAA,IAAAA,IAAA,GAAAG,SAAA,KAAA,KAAA,CAAA,GAAO,EAAA,GAAAA,SAAA;IAAAC,QAAA,GAAAb,IAAA,CACPU,GAAA;AAAAA,IAAAA,GAAA,GAAAG,QAAA,KAAA,KAAA,CAAA,GAAM,CAAA,GAAAA,QAAA;IACNX,SAAA,GAAAF,IAAA,CAAAE,SAAA;IACAH,QAAA,GAAAC,IAAA,CAAAD,QAAA;AACGe,IAAAA,IAAA,GAAAC,wBAAA,CAAAf,IAAA,EAAAgB,WAAA,CAAA;AAEH,EAAA,sBACEX,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAAW,eAAA,CAAA;IACCf,SAAA,EAAWgB,IAAA,CAAA,OAAA,CAAAX,MAAA,CACDC,aAAaC,IAAA,CAAKA,IAAI,CAAC,EAAA,GAAA,CAAA,CAAAF,MAAA,CAAIC,YAAA,CAAaE,GAAA,CAAIA,GAAG,CAAC,CAAA,EACxDR,SACF;GAAA,EACIY,IAAA,CAAA,EAEHf,QACH,CAAA;AAEJ;;AC7CA,IAAMoB,gBAAA,GAAmB;AACvBC,EAAAA,GAAA,EAAK,UAAA;AACLC,EAAAA,GAAA,EAAK,UAAA;AACL,EAAA,aAAA,EAAe,kBAAA;AACf,EAAA,aAAA,EAAe;AACjB,CAAA;AAEA,IAAMC,cAAA,GAAiB;AACrBC,EAAAA,KAAA,EAAO,eAAA;AACPC,EAAAA,GAAA,EAAK,aAAA;AACLC,EAAAA,MAAA,EAAQ,gBAAA;AACRC,EAAAA,OAAA,EAAS,iBAAA;AACTC,EAAAA,MAAA,EAAQ,gBAAA;AACRC,EAAAA,MAAA,EAAQ;AACV,CAAA;AAEA,IAAMC,YAAA,GAAe;AACnBN,EAAAA,KAAA,EAAO,aAAA;AACPC,EAAAA,GAAA,EAAK,WAAA;AACLC,EAAAA,MAAA,EAAQ,cAAA;AACRK,EAAAA,QAAA,EAAU,gBAAA;AACVC,EAAAA,OAAA,EAAS;AACX,CAAA;AAEA,IAAMC,WAAA,GAAc;AAClBC,EAAAA,MAAA,EAAQ,aAAA;AACRC,EAAAA,IAAA,EAAM,WAAA;AACN,EAAA,cAAA,EAAgB;AAClB,CAAA;AAEA,IAAMC,UAAA,GAAa;AACjB,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,CAAA,EAAG,OAAA;AACH,EAAA,EAAA,EAAI,QAAA;AACJ,EAAA,EAAA,EAAI,QAAA;AACJ,EAAA,EAAA,EAAI;AACN,CAAA;IAEaC,OAA4B,SAA5BA,WAQP;AAAA,EAAA,IAPJrC,QAAA,GAAAC,IAAA,CAAAD,QAAA;IAAAE,cAAA,GAAAD,IAAA,CACAE,SAAA;AAAAA,IAAAA,SAAA,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAY,EAAA,GAAAA,cAAA;IAAAoC,cAAA,GAAArC,IAAA,CACZsC,SAAA;AAAAA,IAAAA,SAAA,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAY,KAAA,GAAAA,cAAA;IAAAE,YAAA,GAAAvC,IAAA,CACZwC,OAAA;AAAAA,IAAAA,OAAA,GAAAD,YAAA,KAAA,KAAA,CAAA,GAAU,OAAA,GAAAA,YAAA;IAAAE,UAAA,GAAAzC,IAAA,CACV0C,KAAA;AAAAA,IAAAA,KAAA,GAAAD,UAAA,KAAA,KAAA,CAAA,GAAQ,SAAA,GAAAA,UAAA;IAAAE,SAAA,GAAA3C,IAAA,CACRkC,IAAA;AAAAA,IAAAA,IAAA,GAAAS,SAAA,KAAA,KAAA,CAAA,GAAO,QAAA,GAAAA,SAAA;IAAA9B,QAAA,GAAAb,IAAA,CACPU,GAAA;AAAAA,IAAAA,GAAA,GAAAG,QAAA,KAAA,KAAA,CAAA,GAAM,CAAA,GAAAA,QAAA;AAEN,EAAA,sBACER,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACCJ,IAAAA,SAAA,UAAAK,MAAA,CAAmBY,gBAAA,CAAiBmB,SAAS,CAAC,EAAA,GAAA,CAAA,CAAA/B,MAAA,CAAIe,cAAA,CAAekB,OAAO,CAAC,EAAA,GAAA,CAAA,CAAAjC,MAAA,CAAIsB,YAAA,CAAaa,KAAK,CAAC,OAAAnC,MAAA,CAAIyB,YAAYE,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA3B,MAAA,CAAI4B,UAAA,CAAWzB,GAAG,CAAC,EAAA,GAAA,CAAA,CAAAH,MAAA,CAAIL,SAAS;GAAA,EAEpJH,QACH,CAAA;AAEJ;;;;ACnEA,IAAM6C,UAAA,GAAa;AACjBrB,EAAAA,KAAA,EAAO,eAAA;AACPE,EAAAA,MAAA,EAAQ,gBAAA;AACRD,EAAAA,GAAA,EAAK,aAAA;AACL,EAAA,eAAA,EAAiB,iBAAA;AACjB,EAAA,cAAA,EAAgB;AAClB,CAAA;AAEA,IAAMqB,QAAA,GAAW;AACfC,EAAAA,GAAA,EAAK,aAAA;AACLC,EAAAA,MAAA,EAAQ,cAAA;AACRC,EAAAA,MAAA,EAAQ;AACV,CAAA;IAEaC,MAA0B,SAA1BA,UAMP;AAAA,EAAA,IAAAC,WAAA,GAAAlD,IAAA,CALJmD,MAAA;AAAAA,IAAAA,MAAA,GAAAD,WAAA,KAAA,KAAA,CAAA,GAAS,CAAA,GAAAA,WAAA;IAAAX,YAAA,GAAAvC,IAAA,CACTwC,OAAA;AAAAA,IAAAA,OAAA,GAAAD,YAAA,KAAA,KAAA,CAAA,GAAU,OAAA,GAAAA,YAAA;IAAAE,UAAA,GAAAzC,IAAA,CACV0C,KAAA;AAAAA,IAAAA,KAAA,GAAAD,UAAA,KAAA,KAAA,CAAA,GAAQ,KAAA,GAAAA,UAAA;IACRvC,SAAA,GAAAF,IAAA,CAAAE,SAAA;IACAH,QAAA,GAAAC,IAAA,CAAAD,QAAA;AAEA,EAAA,IAAAqD,KAAA,GAA+BC,KAAA,CAAMC,OAAA,CAAQH,MAAM,CAAA,GAAIA,MAAA,GAAS,CAACA,MAAA,EAAQ,CAAC,CAAA;IAAAI,KAAA,GAAAC,cAAA,CAAAJ,KAAA,EAAA,CAAA,CAAA;AAAnEK,IAAAA,UAAA,GAAAF,KAAA,CAAA,CAAA,CAAA;AAAYG,IAAAA,QAAQ,GAAAH,KAAA,CAAA,CAAA,CAAA;AAC3B,EAAA,IAAMI,QAAA,GAAW;AACfC,IAAAA,UAAA,MAAArD,MAAA,CAAgBkD,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC9BI,IAAAA,WAAA,MAAAtD,MAAA,CAAiBkD,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC/BK,IAAAA,MAAA,EAAQJ;GACV;AAEA,EAAA,sBACErD,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACCJ,IAAAA,SAAA,EAAWgB,KAAK,gBAAA,EAAkB0B,UAAA,CAAWJ,OAAO,CAAA,EAAGK,QAAA,CAASH,KAAK,CAAA,EAAGxC,SAAS,CAAA;AACjF6D,IAAAA,KAAA,EAAOJ;GAAA,EAENtD,KAAA,CAAM2D,QAAA,CAASC,GAAA,CAAIlE,QAAA,EAAU,UAACmE,KAAA,EAAc;AAAA,IAAA,IAAAC,YAAA;AAC3C,IAAA,oBAAO9D,KAAA,CAAM+D,aAAaF,KAAA,EAAO;AAC/BH,MAAAA,KAAA,EAAA9C,eAAA,CAAA;AACEoD,QAAAA,WAAA,KAAA9D,MAAA,CAAgBkD,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC9Ba,QAAAA,YAAA,KAAA/D,MAAA,CAAiBkD,UAAA,GAAa,CAAC,EAAA,IAAA,CAAA;AAC/Bc,QAAAA,UAAA,MAAAhE,MAAA,CAAgBmD,QAAA,GAAW,CAAC,EAAA,IAAA,CAAA;AAC5Bc,QAAAA,aAAA,EAAA,GAAA,CAAAjE,MAAA,CAAmBmD,QAAA,GAAW,CAAC,EAAA,IAAA;AAAA,OAAA,EAC3B,CAAA,CAAAS,YAAA,GAAAD,KAAA,CAAMO,KAAA,MAAA,IAAA,IAAAN,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,YAAA,CAAaJ,KAAA,KAAS,EAAC;AAE/B,KAAC,CAAA;AACH,EAAA,CAAC,CACH,CAAA;AAEJ;;AC5CA,IAAMW,IAAA,GAAO,EAAA;AAEb,SAASC,UAAUC,CAAA,EAAW;AAC5B,EAAA,OAAA,CAASA,CAAA,GAAIF,OAAQ,GAAA,EAAKG,OAAA,CAAQ,CAAC,CAAA,CAAEC,OAAA,CAAQ,QAAA,EAAU,EAAE,CAAA,GAAI,GAAA;AAC/D;AAEO,IAAMC,eAAuC,EAAC;AAC9C,IAAMC,iBAAyC,EAAC;AAEvD,KAAA,IAASC,CAAA,GAAI,CAAA,EAAGA,CAAA,IAAKP,IAAA,EAAMO,CAAA,EAAA,EAAK;AAC9B,EAAA,IAAMC,OAAA,GAAUP,UAAUM,CAAC,CAAA;EAC3BF,YAAA,CAAaE,CAAC,CAAA,GAAA,SAAA,CAAA1E,MAAA,CAAc2E,OAAO,EAAA,WAAA,CAAA,CAAA3E,MAAA,CAAY2E,OAAO,EAAA,GAAA,CAAA;AACtDF,EAAAA,cAAA,CAAeC,CAAC,CAAA,UAAA1E,MAAA,CAAW2E,OAAO,EAAA,GAAA,CAAA;AACpC;AAEO,IAAM7D,MAAM8D,EAAA,CAAG;AACpBC,EAAAA,IAAA,EAAM,+BAAA;AACNC,EAAAA,QAAA,EAAU;AACRC,IAAAA,IAAA,EAAM;AACJ,MAAA,CAAA,EAAG,6BAAA;AACH,MAAA,CAAA,EAAG,6BAAA;AACH,MAAA,CAAA,EAAG,6BAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,yBAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,6BAAA;AACH,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,yBAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,6BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,yBAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,6BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI;KACN;AACAC,IAAAA,MAAA,EAAQ;AACN,MAAA,CAAA,EAAG,YAAA;AACH,MAAA,CAAA,EAAG,YAAA;AACH,MAAA,CAAA,EAAG,YAAA;AACH,MAAA,CAAA,EAAG,aAAA;AACH,MAAA,CAAA,EAAG,aAAA;AACH,MAAA,CAAA,EAAG,UAAA;AACH,MAAA,CAAA,EAAG,aAAA;AACH,MAAA,CAAA,EAAG,aAAA;AACH,MAAA,CAAA,EAAG,YAAA;AACH,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,UAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,YAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,UAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,YAAA;AACJ,MAAA,EAAA,EAAI,aAAA;AACJ,MAAA,EAAA,EAAI,amCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI;KACN;AACAC,IAAAA,EAAA,EAAI;AACF,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI;KACN;AACAC,IAAAA,EAAA,EAAI;AACF,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI;KACN;AACAC,IAAAA,EAAA,EAAI;AACF,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,+BAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,qCAAA;AACH,MAAA,CAAA,EAAG,mCAAA;AACH,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,+BAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,mCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI,qCAAA;AACJ,MAAA,EAAA,EAAI;AACN;AACF;AACF,CAAC,CAAA;AACD,IAAM6F,eAAA,GAAkB,SAAlBA,eAAAA,CAAmBC,UAAA,EAAoBJ,IAAA,EAAkB;AAC7D,EAAA,IAAI,CAACA,MAAM,OAAO,EAAA;AAClB,EAAA,IAAMJ,UAAUS,MAAA,CAAA,CAASL,IAAA,GAAO,KAAM,GAAA,EAAKT,OAAA,CAAQ,CAAC,CAAC,CAAA;AACrD,EAAA,OAAA,EAAA,CAAAtE,MAAA,CAAUmF,UAAU,EAAA,UAAA,CAAA,CAAAnF,MAAA,CAAW2E,OAAO,EAAA,KAAA,CAAA,CAAA3E,MAAA,CAAMmF,UAAU,EAAA,UAAA,CAAA,CAAAnF,MAAA,CAAW2E,OAAO,EAAA,IAAA,CAAA;AAC1E,CAAA;IACaU,MAA0B,SAA1BA,UAWP;AAAA,EAAA,IAVJN,IAAA,GAAAtF,IAAA,CAAAsF,IAAA;IACAC,MAAA,GAAAvF,IAAA,CAAAuF,MAAA;IACAC,KAAA,GAAAxF,IAAA,CAAAwF,KAAA;IACA/F,EAAA,GAAAO,IAAA,CAAAP,EAAA;IACAC,EAAA,GAAAM,IAAA,CAAAN,EAAA;IACAC,EAAA,GAAAK,IAAA,CAAAL,EAAA;IACAC,EAAA,GAAAI,IAAA,CAAAJ,EAAA;IACAM,SAAA,GAAAF,IAAA,CAAAE,SAAA;IACAH,QAAA,GAAAC,IAAA,CAAAD,QAAA;IACAgE,KAAA,GAAA/D,IAAA,CAAA+D,KAAA;AAEA,EAAA,sBACE1D,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACCJ,IAAAA,SAAA,EAAWgB,IAAA,CACTG,GAAA,CAAI;AAAEiE,MAAAA,IAAA,EAAAA,IAAA;AAAMC,MAAAA,MAAA,EAAAA,MAAA;AAAQC,MAAAA,OAAAA;AAAM,KAAC,CAAA,EAC3BC,eAAA,CAAgB,MAAMhG,EAAE,CAAA,EACxBgG,eAAA,CAAgB,MAAM/F,EAAE,CAAA,EACxB+F,eAAA,CAAgB,MAAM9F,EAAE,CAAA,EACxB8F,eAAA,CAAgB,MAAM7F,EAAE,CAAA,EACxBM,SACF,CAAA;AACA6D,IAAAA,KAAA,EAAAA;GAAA,EAEChE,QACH,CAAA;AAEJ;;AC/OO,IAAM8F,oBAAkC;AAAEC,EAAAA,QAAA,EAAU;AAAOC,EAAAA,OAAA,EAAS,CAAA;AAAGC,EAAAA,OAAO;AAAO,CAAA;;;;;ACoB5F,IAAMC,cAAA,GAAiB,GAAA;AAE0C;AAEjE,IAAMC,OAAA,gBAAQC,uBAAA,CAAuC,UAAC1B,KAAA,EAAO2B,GAAA,EAAQ;AACnE,EAAA,IAAAC,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;EAER,IAAAC,cAAA,GAA0FC,aAAA,CAAc;AACtGC,MAAAA,SAAA,EAAWC,CAAA;AACXC,MAAAA,oBAAA,EAAsBC,IAAA;AACtBC,MAAAA,qBAAA,EAAuBC,WAAA;AACvBC,MAAAA,qBAAA,EAAuBC;AACzB,KAAC,CAAA;IALOP,SAAA,GAAAF,cAAA,CAAAE,SAAA;IAAWE,oBAAA,GAAAJ,cAAA,CAAAI,oBAAA;IAAsBE,qBAAA,GAAAN,cAAA,CAAAM,qBAAA;IAAuBE,qBAAA,GAAAR,cAAA,CAAAQ,qBAAA;AAOhE,EAAA,IAAAE,gBAAA,GAYIC,eAAA,CAAgB1C,KAAA,EAAOoB,iBAAiB,CAAA;IAX1CuB,OAAA,GAAAF,gBAAA,CAAAE,OAAA;IACAC,KAAA,GAAAH,gBAAA,CAAAG,KAAA;IACAC,SAAA,GAAAJ,gBAAA,CAAAI,SAAA;IACAtB,KAAA,GAAAkB,gBAAA,CAAAlB,KAAA;IACAuB,IAAA,GAAAL,gBAAA,CAAAK,IAAA;IACAzB,QAAA,GAAAoB,gBAAA,CAAApB,QAAA;IACAC,OAAA,GAAAmB,gBAAA,CAAAnB,OAAA;IACAyB,OAAA,GAAAN,gBAAA,CAAAM,OAAA;IACAtH,SAAA,GAAAgH,gBAAA,CAAAhH,SAAA;IAAAuH,qBAAA,GAAAP,gBAAA,CACAQ,QAAA;AAAAA,IAAAA,QAAA,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAWE,IAAA,GAAAF,qBAAA;AACRG,IAAAA,UAAA,GAAA7G,wBAAA,CAAAmG,gBAAA,EAAAlG,WAAA,CAAA;AAGL,EAAA,IAAA6G,eAAA,GAA4BxH,KAAA,CAAMyH,SAAS,KAAK,CAAA;IAAAC,gBAAA,GAAAvE,cAAA,CAAAqE,eAAA,EAAA,CAAA,CAAA;AAAzCG,IAAAA,MAAA,GAAAD,gBAAA,CAAA,CAAA,CAAA;AAAQE,IAAAA,SAAS,GAAAF,gBAAA,CAAA,CAAA,CAAA;AACxB,EAAA,IAAAG,gBAAA,GAAkC7H,KAAA,CAAMyH,SAAS,IAAI,CAAA;IAAAK,gBAAA,GAAA3E,cAAA,CAAA0E,gBAAA,EAAA,CAAA,CAAA;AAA9CE,IAAAA,SAAA,GAAAD,gBAAA,CAAA,CAAA,CAAA;AAAWE,IAAAA,YAAY,GAAAF,gBAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAMG,OAAA,GAAUC,oBAAuB,IAAI,CAAA;AAE3C,EAAA,IAAMC,OAAA,GAAU;AACdC,IAAAA,OAAA,EAAS3B,qBAAA;AACT4B,IAAAA,IAAA,EAAM9B,oBAAA;AACN+B,IAAAA,KAAA,EAAO3B,qBAAA;AACP4B,IAAAA,OAAA,EAAS5B;GACX;AAEA,EAAA,IAAM6B,WAAA,GAAc,SAAdA,WAAAA,CAAeC,CAAA,EAAwC;IAC3Db,SAAA,CAAU,IAAI,CAAA;AACdT,IAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAU;AAAEsB,MAAAA,GAAAA;AAAE,KAAC,CAAA;EACjB,CAAA;AAEA,EAAA,IAAMC,iBAAiB,SAAjBA,iBAAuB;IAC3BV,YAAA,CAAa,UAACD,UAAAA,EAAAA;AAAAA,MAAAA,OAAc,CAACA,UAAS;IAAA,CAAA,CAAA;EACxC,CAAA;AAEA,EAAA,IAAMY,iBAAiB,SAAjBA,iBAAuB;IAC3B,iBAAI3I,KAAA,CAAM4I,cAAA,CAAe1B,IAAI,CAAA,EAAG,OAAOA,IAAA;IACvC,oBAAOlH,KAAA,CAAMC,aAAA,CAAckI,OAAA,CAAQxC,KAAK,CAAC,CAAA;EAC3C,CAAA;AAEA,EAAA,IAAMkD,gBAAgB,SAAhBA,gBAAsB;IAC1B,IAAI,CAACnD,OAAA,GAAU,CAAA,IAAK1C,KAAA,CAAMC,OAAA,CAAQ8D,OAAO,CAAA,EAAG;AAC1C,MAAA,sBACE/G,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;QAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,qBAAA;SAC3Ba,OAAA,CAAQnD,GAAA,CAAI,UAACkF,IAAA,EAAMC,KAAA,EAAU;AAC5B,QAAA,IAAIhB,SAAA,EAAW;AACb,UAAA,IAAIgB,KAAA,GAAQ,CAACrD,OAAA,EAAS;AACpB,YAAA,sBAAO1F,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AAAI+I,cAAAA,GAAA,EAAKD;aAAA,EAAQD,IAAK,CAAA;AAChC,UAAA;AACF,QAAA,CAAA,MAAO;AACL,UAAA,sBAAO9I,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AAAI+I,YAAAA,GAAA,EAAKD;WAAA,EAAQD,IAAK,CAAA;AAChC,QAAA;AACA,QAAA,OAAO,IAAA;AACT,MAAA,CAAC,CAAA,EACA,CAACpD,OAAA,GAAUqB,OAAA,CAAQkC,yBAClBjJ,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AAAIJ,QAAAA,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,kBAAA,CAAA;AAAoBgD,QAAAA,OAAA,EAASR;SACxDX,SAAA,GAAY,cAAA,GAAO,cACtB,CAEJ,CAAA;AAEJ,IAAA;AACA,IAAA,0CAAQ,KAAA,EAAA;MAAIlI,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,qBAAA;OAAwBa,OAAQ,CAAA;EACvE,CAAA;EAGA,IAAMoC,YAAA,GAAeC,OAAA,CAAQC,GAAA,CAAIjF,KAAA,EAAO,OAAO,CAAA;AAC/C,EAAA,IAAMkF,SAAA,GAAYH,eAAeI,KAAA,GAAQ9D,QAAA;AACzC,EAAA,IAAI0D,YAAA,EAAc;AAChBK,IAAAA,OAAA,CAAQC,IAAA,CAAK,UAAU,wEAAwE,CAAA;AACjG,EAAA;AACA,EAAA,IAAMC,cAAc,SAAdA,cAAoB;AACxB,IAAA,IAAIJ,SAAA,KAAc,OAAO,OAAO,IAAA;AAChC,IAAA,0CACG,KAAA,EAAA;AAAIzJ,MAAAA,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,eAAA;AAAiBgD,MAAAA,OAAA,EAASV;AAAA,KAAA,EACrDmB,UAAA,CAAWL,SAAA,EAAW,uBAAWtJ,KAAA,CAAAC,aAAA,CAACoG,SAAA,EAAA;AAAUxG,MAAAA,SAAA,EAAU;KAAS,CAAY,CAC9E,CAAA;EAEJ,CAAA;AAEA,EAAA,sBACEG,KAAA,CAAAC,aAAA,CAAC2J,aAAA,EAAA;AACC,IAAA,IAAA,EAAI,CAACjC,MAAA;AACLkC,IAAAA,aAAA,EAAa,IAAA;AACbC,IAAAA,UAAA,EAAY;MACVC,UAAA,EAAA,EAAA,CAAA7J,MAAA,CAAegG,WAAW,EAAA,iBAAA;KAC5B;AACA+B,IAAAA,OAAA,EAAAA,OAAA;AACA+B,IAAAA,OAAA,EAASpE,cAAA;AACTqE,IAAAA,QAAA,EAAU5C;GAAA,iBAEVrH,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAAW,eAAA,CAAA;AACCmF,IAAAA,GAAA,EAAKmE,WAAA,CAAYnE,GAAA,EAAKkC,OAAO,CAAA;AAC7BpI,IAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,EAAA,QAAA,CAAA,EAAA,EAAA,CAAAhG,MAAA,CAAagG,WAAW,EAAA,UAAA,CAAA,CAAAhG,MAAA,CAAWyF,KAAK,GAAI9F,SAAS;GAAA,EACrF0H,UAAA,sCAEH,KAAA,EAAA;IAAI1H,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,cAAA;AAAA,GAAA,EAAiByC,gBAAiB,CAAA,qCAC/D,KAAA,EAAA;IAAI9I,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,iBAAA;KAC3Bc,KAAA,kBAAQhH,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,eAAA;AAAA,GAAA,EAAkBc,KAAM,CAAA,GAAS,qBACxEhH,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,iBAAA;AAAA,GAAA,EAC3B2C,aAAA,EAAc,EACd5B,SAAA,sCAAa,KAAA,EAAA;IAAIpH,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,mBAAA;KAAsByD,UAAA,CAAW1C,SAAS,CAAE,CAAA,GAAS,IAClG,CACF,CAAA,EACCyC,WAAA,EACH,CACF,CAAA;AAEJ,CAAC,CAAA;AAED7D,OAAA,CAAMsE,WAAA,GAAc,OAAA;;AC1Ib,IAAMtE,KAAA,GAAQuE;;ACJd,IAAMC,iBAAA,GAAkC;AAC7CC,EAAAA,KAAA,EAAO,CAAA;AACPC,EAAAA,GAAA,EAAK,KAAA;AACLC,EAAAA,QAAA,EAAU,EAAA;AACVC,EAAAA,KAAA,EAAO,QAAA;AACPC,EAAAA,QAAA,EAAU,KAAA;AACVC,EAAAA,IAAA,EAAM;AACR,CAAA;;;;;ACAA,IAAMC,OAAA,gBAAQ9E,uBAAA,CAAwC,UAAC1B,KAAA,EAAO2B,GAAA,EAAQ;AACpE,EAAA,IAAAc,gBAAA,GAcIC,eAAA,CAA4B1C,KAAA,EAAOiG,iBAAiB,CAAA;IAbtDQ,KAAA,GAAAhE,gBAAA,CAAAgE,KAAA;IACAN,GAAA,GAAA1D,gBAAA,CAAA0D,GAAA;IACAC,QAAA,GAAA3D,gBAAA,CAAA2D,QAAA;IACAF,KAAA,GAAAzD,gBAAA,CAAAyD,KAAA;IACAK,IAAA,GAAA9D,gBAAA,CAAA8D,IAAA;IACAF,KAAA,GAAA5D,gBAAA,CAAA4D,KAAA;IACAC,QAAA,GAAA7D,gBAAA,CAAA6D,QAAA;IACAxF,MAAA,GAAA2B,gBAAA,CAAA3B,MAAA;IACArF,SAAA,GAAAgH,gBAAA,CAAAhH,SAAA;IACAiL,OAAA,GAAAjE,gBAAA,CAAAiE,OAAA;IACApL,QAAA,GAAAmH,gBAAA,CAAAnH,QAAA;IACAgE,KAAA,GAAAmD,gBAAA,CAAAnD,KAAA;AACGqH,IAAAA,SAAA,GAAArK,wBAAA,CAAAmG,gBAAA,EAAAlG,WAAA,CAAA;AAEL,EAAA,IAAAqF,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AAER,EAAA,IAAM8E,YAAYF,OAAA,IAAWpL,QAAA;AAE7B,EAAA,IAAMuL,cAAA,GAAiBnB,UAAA,CACrB,CAACkB,SAAA,OAAA9K,MAAA,CAAgBgG,WAAW,EAAA,gBAAA,CAAA,EAC5BqE,gBAASrE,WAAW,sBAAAhG,MAAA,CAAmBgG,WAAW,EAAA,UAAA,CAAA,CAAAhG,MAAA,CAAWuK,KAAK,CAAA,EAClEE,IAAA,KAAS,OAAA,IAAA,EAAA,CAAAzK,MAAA,CAAcgG,WAAW,EAAA,SAAA,CAAA,EAClC,CAAC8E,SAAA,IAAanL,SAChB,CAAA;AACA,EAAA,IAAMqL,kBAAkB,SAAlBA,kBAAwB;IAC5B,IAAI,OAAOZ,KAAA,KAAU,QAAA,IAAYA,KAAA,GAAQE,QAAA,EAAU;MACjD,OAAA,EAAA,CAAAtK,MAAA,CAAUsK,QAAQ,EAAA,GAAA,CAAA;AACpB,IAAA;AACA,IAAA,OAAOF,KAAA;EACT,CAAA;EAEA,IAAIa,WAAW,CAACb,KAAA;AAChB,EAAA,IAAI,OAAOA,UAAU,QAAA,EAAU;AAC7Ba,IAAAA,QAAA,GAAWb,KAAA,GAAQ,KAAK,CAACI,QAAA;AAC3B,EAAA;AAEA,EAAA,IAAMU,WAAW,SAAXA,WAAiB;AACrB,IAAA,IAAMC,WAAA,GAAAzK,eAAA,CAAA,EAAA,EAAwC8C,KAAA,CAAM;AACpD,IAAA,IAAImH,KAAA,EAAO;MACTQ,WAAA,CAAYC,eAAA,GAAkBT,KAAA;AAChC,IAAA;AACA,IAAA,IAAI3F,MAAA,EAAQ;AACV,MAAA,IAAIA,MAAA,CAAO,CAAC,CAAA,EAAG;AACbmG,QAAAA,WAAA,CAAYE,KAAA,GAAQ,CAACrG,MAAA,CAAO,CAAC,CAAA;AAC/B,MAAA;AACA,MAAA,IAAIA,MAAA,CAAO,CAAC,CAAA,EAAG;AACbmG,QAAAA,WAAA,CAAYG,SAAA,GAAY,CAACtG,MAAA,CAAO,CAAC,CAAA;AACnC,MAAA;AACF,IAAA;AACA,IAAA,OAAOmG,WAAA;EACT,CAAA;EAEA,IAAMI,KAAA,GAAQ,CAACN,QAAA,kBACbnL,KAAA,CAAAC,aAAA,CAAC,4CAAU+K,SAAA,GAAY,EAAC,GAAID,SAAA,CAAA,EAAA,EAAA,EAAA;AAAYlL,IAAAA,WAAWoL,cAAA;IAAgBvH,KAAA,EAAO0H;GAAS,CAAA,EAChF,CAACb,MAAMW,eAAA,EAAgB,GAAI,IAC9B,CAAA,GACE,IAAA;EAEJ,IAAI,CAACF,SAAA,EAAW;AACd,IAAA,OAAOS,KAAA;AACT,EAAA;EAEA,sBACEzL,KAAA,CAAAC,aAAA,CAAC,MAAA,EAAAW,eAAA,CAAAA,eAAA,CAAA,EAAA,EAASmK,SAAA,CAAA,EAAA,EAAA,EAAA;IAAWlL,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,EAAA,QAAA,CAAA,EAAUrG,SAAS,CAAA;AAAGkG,IAAAA,GAAA,EAAAA;GAAA,CAAA,EAC5EiF,WACAS,KACH,CAAA;AAEJ,CAAC,CAAA;AAEDb,OAAA,CAAMT,WAAA,GAAc,OAAA;;AC3Eb,IAAMS,KAAA,GAAQc;;ACLd,IAAMC,kBAAA,GAAoC;AAC/CC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,UAAA,EAAY,KAAA;AACZC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,OAAA,EAAS,KAAA;AACTC,EAAAA,GAAA,EAAK,CAAA;AACLC,EAAAA,eAAA,EAAiB,CAAA;AACjBC,EAAAA,QAAA,EAAU,KAAA;EACVC,WAAA,EAAa,KAAA,CAAA;AACbC,EAAAA,QAAA,EAAU,KAAA;AACVC,EAAAA,cAAA,EAAgB,KAAA;AAChBC,EAAAA,SAAA,EAAW,IAAA;AACX7B,EAAAA,IAAA,EAAM,QAAA;AACN8B,EAAAA,MAAA,EAAQ,SAAA;AACRC,EAAAA,SAAA,EAAW;AACb,CAAA;AAEO,IAAMC,kBAAA,GAAoC;AAC/CC,EAAAA,QAAA,EAAU,KAAA;AACVC,EAAAA,QAAA,EAAU;AACZ,CAAA;AAEO,IAAMC,uBAAA,GAA8C;AAAEC,EAAAA,OAAA,EAAS;AAAK,CAAA;;ACd3E,IAAMC,WAAA,GAAiD,SAAjDA,WAAAA,CAAkD5I,KAAA,EAAU;AAChE,EAAA,IAAAyC,gBAAA,GAAqCC,eAAA,CACnC1C,KAAA,EACA0I,uBACF,CAAA;IAHQpN,QAAA,GAAAmH,gBAAA,CAAAnH,QAAA;IAAUuN,KAAA,GAAApG,gBAAA,CAAAoG,KAAA;IAAOF,OAAA,GAAAlG,gBAAA,CAAAkG,OAAA;AAKzB,EAAA,IAAA/G,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AAER,EAAA,sBACElG,KAAA,CAAAC,aAAA,CAAC,IAAA,EAAA;AACCJ,IAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,EAAA,sBAAA,CAAA,EAAAgH,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAhN,MAAA,CAC9BgG,WAAW,EAAA,+BAAA,CAAA,EAAkC6G,OAAA,CAClD;AAAA,GAAA,EAAA,CAECE,KAAA,KAAA,IAAA,IAAAA,KAAA,cAAAA,KAAA,GAAS,yBACTjN,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIJ,qBAAcqG,WAAW,EAAA,8BAAA;KAC3B+G,KACH,CAAA,EAEDvN,QACH,CAAA;AAEF,EAAA;AACF,CAAA;;ACOA,IAAMyN,aAAA,GAAgB,QAAA;AAEtB,IAAMC,MAAA,GAAsC,SAAtCA,MAAAA,CAAuChJ,KAAA,EAAU;AACrD,EAAA,IACYiJ,YAAA,GAiBRjJ,KAAA,CAjBFyI,QAAA;IACOS,SAAA,GAgBLlJ,KAAA,CAhBF6I,KAAA;IACOM,SAAA,GAeLnJ,KAAA,CAfF4C,KAAA;IACAwG,aAAA,GAcEpJ,KAAA,CAdFoJ,aAAA;IACAZ,QAAA,GAaExI,KAAA,CAbFwI,QAAA;IACAR,QAAA,GAYEhI,KAAA,CAZFgI,QAAA;IACAzB,IAAA,GAWEvG,KAAA,CAXFuG,IAAA;IACAuB,GAAA,GAUE9H,KAAA,CAVF8H,GAAA;IACAuB,IAAA,GASErJ,KAAA,CATFqJ,IAAA;IACAC,KAAA,GAQEtJ,KAAA,CARFsJ,KAAA;IACAC,QAAA,GAOEvJ,KAAA,CAPFuJ,QAAA;IACAjO,QAAA,GAME0E,KAAA,CANF1E,QAAA;IACAoL,OAAA,GAKE1G,KAAA,CALF0G,OAAA;IACA8C,QAAA,GAIExJ,KAAA,CAJFwJ,QAAA;IACAlK,KAAA,GAGEU,KAAA,CAHFV,KAAA;IACA7D,SAAA,GAEEuE,KAAA,CAFFvE,SAAA;IACAgO,SAAA,GACEzJ,KAAA,CADFyJ,SAAA;AAEF,EAAA,IAAIC,QAAA;AACJ,EAAA,IAAIC,aAAA;AACJ,EAAA,IAAMd,QAAQK,SAAA,IAAaI,KAAA;AAC3B,EAAA,IAAMb,QAAA,GACJQ,gBACCjB,QAAA,IACCpJ,KAAA,CAAMC,QAAQuK,aAAa,CAAA,IAC3BtB,GAAA,IACAsB,aAAA,CAAcvE,MAAA,IAAUiD,GAAA;AAE5B,EAAA,IAAM8B,YAAA,GAAeC,qBAAQ,YAAM;IAEjC,IAAMC,eAAA,GAAkB9E,OAAA,CAAQC,GAAA,CAAIjF,KAAA,EAAO,OAAO,CAAA;IAClD,IAAI8J,iBAAiB,OAAOX,SAAA;AAC5B,IAAA,IAAI,OAAON,KAAA,KAAU,QAAA,EAAU,OAAOA,KAAA;AACtC,IAAA,OAAO,IAAA;AAET,EAAA,CAAA,EAAG,CAACM,SAAA,EAAWN,KAAK,CAAC,CAAA;AACrB,EAAA,IAAAjH,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AAER,EAAA,IAAAiI,kBAAA,GAAmCC,iBAAA,EAAkB;IAAAC,mBAAA,GAAAlL,cAAA,CAAAgL,kBAAA,EAAA,CAAA,CAAA;AAA9CG,IAAAA,SAAA,GAAAD,mBAAA,CAAA,CAAA,CAAA;AAAWE,IAAAA,aAAa,GAAAF,mBAAA,CAAA,CAAA,CAAA;AAE/BG,EAAAA,sBAAA,CAAU,YAAM;IACd,IAAIX,aAAaS,SAAA,EAAW;AAAA,MAAA,IAAAG,mBAAA;AAC1B,MAAA,CAAAA,mBAAA,GAAArK,KAAA,CAAMsK,YAAA,MAAA,IAAA,IAAAD,mBAAA,KAAA,KAAA,CAAA,IAANA,mBAAA,CAAAE,IAAA,CAAAvK,KAAA,EAAqB;AACnB2B,QAAAA,GAAA,EAAKuI,SAAA;AACLM,QAAAA,IAAA,EAAMxK;AACR,OAAC,CAAA;AACH,IAAA;AAEF,EAAA,CAAA,EAAG,CAACyJ,SAAA,EAAWS,SAAS,CAAC,CAAA;EAGzB,IAAI,CAAClC,QAAA,EAAU;AACb0B,IAAAA,QAAA,GACEe,QAAA,CAASrB,aAAa,CAAA,IAAKsB,QAAA,CAAStB,aAAa,CAAA,GAC7CE,KAAA,KAAUF,aAAA,GACVE,KAAA,KAAUqB,GAAA,CAAIvB,aAAA,EAAe,CAAAC,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,UAAS,OAAO,CAAA;AAC3D,EAAA;EAGA,IAAItB,QAAA,IAAYpJ,KAAA,CAAMC,OAAA,CAAQuK,aAAa,CAAA,EAAG;AAC5CM,IAAAA,QAAA,GAAWN,aAAA,CAAcwB,IAAA,CAAK,UAAClG,IAAA,EAAS;MACtC,IAAI+F,QAAA,CAAS/F,IAAI,CAAA,IAAKgG,QAAA,CAAShG,IAAI,CAAA,EAAG;QAEpC,OAAOA,IAAA,KAAS4E,KAAA;AAClB,MAAA;AACA,MAAA,OAAOqB,GAAA,CAAIjG,IAAA,EAAM,CAAA2E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,KAAMA,KAAA;AAC/C,IAAA,CAAC,CAAA;IACD,IAAItJ,MAAMwI,QAAA,EAAU;AAClBkB,MAAAA,QAAA,GAAWN,aAAA,CAAcvE,WAAW7E,KAAA,CAAM6K,YAAA;MAC1ClB,aAAA,GAAgBP,aAAA,CAAcvE,MAAA,GAAS,CAAA,IAAK,CAAC6E,QAAA;AAC/C,IAAA;AACF,EAAA;AAEA,EAAA,IAAMoB,YAAA,GAAe,SAAfA,YAAAA,CAAgBC,KAAA,EAA2C;AAC/D,IAAA,IAAI,CAACtC,QAAA,IAAY,CAACD,QAAA,EAAU;MAC1B,IAAIc,KAAA,EACFC,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAWD,KAAA,EAAO;AAAET,QAAAA,KAAA,EAAOmC,MAAA,CAAOnC,KAAK,CAAA;AAAGa,QAAAA,QAAA,EAAAA,QAAA;AAAUqB,QAAAA,KAAA,EAAAA,KAAA;AAAOvB,QAAAA,QAAA,EAAAA;AAAS,OAAC,CAAA;AACzE,IAAA;AACA,IAAA,IAAIhB,QAAA,EAAU;AAAA,MAAA,IAAAyC,qBAAA;AACZ,MAAA,CAAAA,qBAAA,GAAAjL,KAAA,CAAMkL,gBAAA,cAAAD,qBAAA,KAAA,KAAA,CAAA,IAANA,qBAAA,CAAAV,IAAA,CAAAvK,KAAA,EAAyB0J,UAAUqB,KAAK,CAAA;AAC1C,IAAA;EACF,CAAA;AAEA,EAAA,IAAMI,UAAA,GAAa,SAAbA,UAAAA,CAAc7P,SAAAA,EAA8B;AAChD,IAAA,IAAI0M,QAAA,EAAU;AACZ,MAAA,sBACEpM,KAAA,CAAAC,aAAA,CAAC,OAAA,EAAA;AACCJ,QAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,EAAA,WAAA,CAAA,EAAAgH,eAAA,CAAAA,eAAA,CAAAA,eAAA,QAAAhN,MAAA,CAC9BgG,WAAW,EAAA,mBAAA,CAAA,EAAsB6H,aAAA,CAAA,EAAA,EAAA,CAAA7N,MAAA,CACjCgG,WAAW,EAAA,cAAA,CAAA,EAAiB2G,QAAA,CAAA,EAAA,EAAA,CAAA3M,MAAA,CAC5BgG,WAAW,EAAA,aAAA,CAAA,EAAgB4H,QAAA,CAChC,CAAA;AACD9G,QAAAA,KAAA,EAAOgH;AAAA,OAAA,iBAEPhO,KAAA,CAAAC,aAAA,CAAC,OAAA,EAAA;AACCuP,QAAAA,IAAA,EAAK,UAAA;AACL3P,QAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,sBAAmB,CAAA;AACvDwH,QAAAA,KAAA,EAAM,EAAA;AACNb,QAAAA,QAAA,EAAUA,YAAY,CAACiB,QAAA;AACvB5E,QAAAA,OAAA,EAAS,SAATA,OAAAA,CAAUT,CAAA,EAAM;UACdA,CAAA,CAAEgH,eAAA,EAAgB;AAClBhH,UAAAA,CAAA,CAAEiH,YAAYC,wBAAA,EAAyB;AACzC,QAAA;OACF,CAAA,qCACC,MAAA,EAAA;AAAK9P,QAAAA,SAAA,EAAWiK,qBAAc5D,WAAW,EAAA,kBAAA,CAAkB;OAAG,CAAA,iBAC/DlG,KAAA,CAAAC,aAAA,CAAC,MAAA,EAAA;AAAKJ,QAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,EAAA,kBAAA,CAAkB;AAAA,OAAA,EACzDxG,SAAAA,IAAYoL,OAAA,IAAWmC,KAC1B,CACF,CAAA;AAEJ,IAAA;AACA,IAAA,0CAAQ,MAAA,EAAA;AAAKjG,MAAAA,KAAA,EAAOgH;AAAA,KAAA,EAAetO,SAAAA,IAAYoL,WAAWmC,KAAM,CAAA;EAClE,CAAA;AAEA,EAAA,sBACEjN,KAAA,CAAAC,aAAA,CAAC,IAAA,EAAA;IACCJ,SAAA,EAAWiK,UAAA,CACTjK,SAAA,KAAAK,MAAA,CACGgG,WAAW,EAAA,GAAA,CAAA,CAAAhG,MAAA,CAAIiN,aAAa,EAAA,SAAA,CAAA,EAAAD,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAhN,MAAA,CAEzBgG,WAAW,mBAAiB2G,QAAA,CAAA,EAAA,EAAA,CAAA3M,MAAA,CAC5BgG,WAAW,mBAAiB4H,QAAA,CAAA,EAAA,EAAA,CAAA5N,MAAA,CAC5BgG,WAAW,EAAA,SAAA,CAAA,EAAYyE,IAAA,KAAS,OAAA,CAAA,EAAA,EAAA,CAAAzK,MAAA,CAChCgG,WAAW,cAAYyE,IAAA,KAAS,OAAA,CAExC,CAAA;AACA3B,IAAAA,GAAA,EAAK0E,KAAA;AACLxE,IAAAA,OAAA,EAASgG,YAAA;AACTnJ,IAAAA,GAAA,EAAKwI,aAAA;AACL7K,IAAAA,KAAA,EAAAA;AAAA,GAAA,EAEC6L,WAAW7P,QAAQ,CACtB,CAAA;AAEJ,CAAA;;;;ACrKO,SAASkQ,sBACdC,MAAA,EAC6B;EAC7B,OAAO,CAAC,CAACA,MAAA,IAAU,OAAA,IAAWA,UAAU,UAAA,IAAcA,MAAA;AACxD;AAMA,SAASC,6BAAAA,CACPC,GAAA,EACAC,aAAA,EACAvC,IAAA,EACA;AACA,EAAA,IAAAwC,UAAA,GAAmCF,GAAA,CAAI3L,KAAA;IAA/BsJ,KAAA,GAAAuC,UAAA,CAAAvC,KAAA;IAAOT,KAAA,GAAAgD,UAAA,CAAAhD,KAAA;IAAOvN,QAAA,GAAAuQ,UAAA,CAAAvQ,QAAA;EAEtBsQ,aAAA,CAActC,KAAK,CAAA,GAAA9M,eAAA,CAAAA,eAAA,KACdmP,GAAA,CAAI3L,KAAA,CAAA,EAAA,EAAA,EAAA8I,eAAA,CAAAA,eAAA,CAAA,EAAA,EACN,CAAAO,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,EAAGA,KAAA,GACzB,CAAAD,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,KAAA,KAAS,OAAO,EAAGA,SAASvN,QAAA,IAAYgO,KAAA,CAAA,CACjD;AACF;AAGO,IAAMwC,gBAAA,GAAmB,SAAnBA,gBAAAA,CACXxQ,QAAA,EACAyQ,OAAA,EACA1C,IAAA,EACkB;EAClB,IAAMuC,gBAAgB,EAAC;AAGvB,EAAA,IAAIhN,KAAA,CAAMC,OAAA,CAAQkN,OAAO,CAAA,EAAG;AAC1BA,IAAAA,OAAA,CAAQC,OAAA,CAAQ,UAACP,MAAA,EAAW;AAC1B,MAAA,IAAID,qBAAA,CAAoBC,MAAM,CAAA,EAAG;AAAA,QAAA,IAAAQ,gBAAA;AAC/B,QAAA,CAAAA,gBAAA,GAAAR,MAAA,CAAOnQ,QAAA,MAAA,IAAA,IAAA2Q,gBAAA,KAAA,KAAA,CAAA,IAAPA,gBAAA,CAAiBD,OAAA,CAAQ,UAACvM,KAAA,EAAU;UAClCmM,aAAA,CAAcjB,IAAIlL,KAAA,EAAO,CAAA4J,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAC,CAAA,GAAA9M,eAAA,CAAAA,eAAA,CAAA,EAAA,EAC3CiD,KAAA,CAAA,EAAA,EAAA,EAAA;AACH6J,YAAAA,KAAA,EAAOqB,GAAA,CAAIlL,KAAA,EAAO,CAAA4J,IAAA,KAAA,IAAA,IAAAA,IAAA,uBAAAA,IAAA,CAAMC,UAAS,OAAO,CAAA;AACxCT,YAAAA,KAAA,EAAO8B,GAAA,CAAIlL,KAAA,EAAO,CAAA4J,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,UAAS,OAAO;WAAA,CAC1C;AACF,QAAA,CAAC,CAAA;AACH,MAAA,CAAA,MAAO;QACL+C,aAAA,CAAcjB,IAAIc,MAAA,EAAQ,CAAApC,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAC,CAAA,GAAA9M,eAAA,CAAAA,eAAA,CAAA,EAAA,EAC5CiP,MAAA,CAAA,EAAA,EAAA,EAAA;AACHnC,UAAAA,KAAA,EAAOqB,GAAA,CAAIc,MAAA,EAAQ,CAAApC,IAAA,KAAA,IAAA,IAAAA,IAAA,uBAAAA,IAAA,CAAMC,UAAS,OAAO,CAAA;AACzCT,UAAAA,KAAA,EAAO8B,GAAA,CAAIc,MAAA,EAAQ,CAAApC,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,UAAS,OAAO;SAAA,CAC3C;AACF,MAAA;AACF,IAAA,CAAC,CAAA;AACD,IAAA,OAAO+C,aAAA;AACT,EAAA;AAEA,EAAA,IAAIM,aAAA,CAAc5Q,QAAQ,CAAA,EAAG;AAC3B,IAAA,IAAIA,QAAA,CAAS8P,SAASpC,MAAA,EAAQ;AAC5B0C,MAAAA,6BAAA,CAA8BpQ,QAAA,EAAUsQ,eAAevC,IAAI,CAAA;AAC3D,MAAA,OAAOuC,aAAA;AACT,IAAA;AAEA,IAAA,IAAItQ,QAAA,CAAS8P,SAASxC,WAAA,EAAa;AACjC,MAAA,IAAMuD,aAAA,GAAgB7Q,SAAS0E,KAAA,CAAM1E,QAAA;AAErC,MAAA,IAAIsD,KAAA,CAAMC,OAAA,CAAQsN,aAAa,CAAA,EAAG;AAChCA,QAAAA,aAAA,CAAcH,OAAA,CAAQ,UAACtH,IAAA,EAAS;AAC9BgH,UAAAA,6BAAA,CAA8BhH,IAAA,EAAMkH,eAAevC,IAAI,CAAA;AACzD,QAAA,CAAC,CAAA;AACD,QAAA,OAAOuC,aAAA;AACT,MAAA;AACF,IAAA;AACF,EAAA;AAKA,EAAA,IAAIhN,KAAA,CAAMC,OAAA,CAAQvD,QAAQ,CAAA,EAAG;AAC3B,IAAA,IAAM8Q,eAAA,GAAiB,SAAjBA,cAAAA,CAAkB1H,IAAA,EAAuB;AAC7C,MAAA,IAAIA,IAAA,CAAK0G,SAASpC,MAAA,EAAQ;AACxB0C,QAAAA,6BAAA,CAA8BhH,IAAA,EAAMkH,eAAevC,IAAI,CAAA;AACzD,MAAA;AAEA,MAAA,IAAI3E,IAAA,CAAK0G,SAASxC,WAAA,EAAa;AAC7B,QAAA,IAAMuD,cAAA,GAAiBzH,KAAK1E,KAAA,CAAuB1E,QAAA;AACnD,QAAA,IAAIsD,KAAA,CAAMC,OAAA,CAAQsN,cAAa,CAAA,EAAG;AAChCA,UAAAA,cAAA,CAAcH,OAAA,CAAQ,UAACK,SAAA,EAAc;AACnCX,YAAAA,6BAAA,CAA8BW,SAAA,EAAWT,eAAevC,IAAI,CAAA;AAC9D,UAAA,CAAC,CAAA;AACH,QAAA;AACF,MAAA;AAEA,MAAA,IAAIzK,KAAA,CAAMC,OAAA,CAAQ6F,IAAI,CAAA,EAAG;AACvBA,QAAAA,IAAA,CAAKsH,OAAA,CAAQ,UAACvM,KAAA,EAAU;UACtB2M,eAAA,CAAe3M,KAAK,CAAA;AACtB,QAAA,CAAC,CAAA;AACH,MAAA;IACF,CAAA;AACAnE,IAAAA,QAAA,CAAS0Q,OAAA,CAAQ,UAACtH,IAAA,EAAA;MAAA,OAAuB0H,eAAA,CAAe1H,IAAI,CAAC;IAAA,CAAA,CAAA;AAC/D,EAAA;AAEA,EAAA,OAAOkH,aAAA;AACT,CAAA;AAGO,IAAMU,QAAA,GAAW,SAAXA,QAAAA,CACXhR,QAAA,EACAgO,KAAA,EACAyC,SACA1C,IAAA,EACG;EACH,IAAIkD,aAAA,GAAgB,EAAA;AAEpB,EAAA,IAAI3N,KAAA,CAAMC,OAAA,CAAQkN,OAAO,CAAA,EAAG;AAC1BA,IAAAA,OAAA,CAAQnB,IAAA,CAAK,UAACa,MAAA,EAAW;MACvB,IAAI,CAACd,GAAA,CAAIrB,KAAA,EAAO,CAAAD,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,EAAGA,KAAK,CAAA,CAAEkD,QAAA,CAASf,MAAA,CAAOnC,KAAK,CAAA,EAAG;QACtEiD,aAAA,GAAgBd,MAAA,CAAO5C,KAAA;AACvB,QAAA,OAAO,IAAA;AACT,MAAA;AACA,MAAA,OAAO,KAAA;AACT,IAAA,CAAC,CAAA;AAED,IAAA,OAAO0D,aAAA;AACT,EAAA;AAEA,EAAA,IAAIL,aAAA,CAAc5Q,QAAQ,CAAA,EAAG;AAC3BiR,IAAAA,aAAA,GAAgBjR,SAAS0E,KAAA,CAAM6I,KAAA;AAE/B,IAAA,IAAIvN,QAAA,CAAS8P,SAASxC,WAAA,EAAa;AACjC,MAAA,IAAMuD,aAAA,GAAgB7Q,SAAS0E,KAAA,CAAM1E,QAAA;AAErC,MAAA,IAAIsD,KAAA,CAAMC,OAAA,CAAQsN,aAAa,CAAA,EAAG;AAChCA,QAAAA,aAAA,CAAcvB,IAAA,CAAK,UAAClG,IAAA,EAAS;AAC3B,UAAA,IAAM0E,gBAAgB8C,aAAA,CAAc5C,KAAK,IACrCqB,GAAA,CAAIrB,KAAA,EAAO,OAAO,CAAA,GAClBA,KAAA;AACJ,UAAA,IAAI4C,cAAcxH,IAAA,CAAK1E,KAAK,KAAK0E,IAAA,CAAK1E,KAAA,CAAMsJ,UAAUF,aAAA,EAAe;YACnEmD,aAAA,GAAgB7H,IAAA,CAAK1E,KAAA,CAAM6I,KAAA,IAASnE,IAAA,CAAK1E,KAAA,CAAM1E,QAAA;AAC/C,YAAA,OAAO,IAAA;AACT,UAAA;AACA,UAAA,OAAO,KAAA;AACT,QAAA,CAAC,CAAA;AACH,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,IAAIsD,KAAA,CAAMC,OAAA,CAAQvD,QAAQ,CAAA,EAAG;AAC3BA,IAAAA,QAAA,CAASsP,IAAA,CAAK,UAAClG,IAAA,EAAuB;AAEpC,MAAA,IAAIA,IAAA,CAAK0G,SAASxC,WAAA,EAAa;AAC7B,QAAA,IAAMuD,eAAA,GAAgBzH,KAAK1E,KAAA,CAAM1E,QAAA;AACjC,QAAA,IAAIsD,KAAA,CAAMC,OAAA,CAAQsN,eAAa,CAAA,EAAG;UAChC,IAAMM,UAAA,GAAaN,eAAA,CAAcvB,IAAA,CAAK,UAAClG,KAAAA,EAAS;AAC9C,YAAA,IAAM0E,iBAAgB8C,aAAA,CAAc5C,KAAK,IACrCqB,GAAA,CAAIrB,KAAA,EAAO,OAAO,CAAA,GAClBA,KAAA;AACJ,YAAA,IACE4C,cAAcxH,KAAAA,CAAK1E,KAAK,KACxB0E,KAAAA,CAAK1E,KAAA,CAAMsJ,UAAUF,cAAAA,EACrB;cACAmD,aAAA,GAAgB7H,KAAAA,CAAK1E,KAAA,CAAM6I,KAAA,IAASnE,KAAAA,CAAK1E,KAAA,CAAM1E,QAAA;AAC/C,cAAA,OAAO,IAAA;AACT,YAAA;AACA,YAAA,OAAO,KAAA;AACT,UAAA,CAAC,CAAA;AACD,UAAA,OAAOmR,UAAA;AACT,QAAA;AACF,MAAA;AACA,MAAA,IAAMrD,gBAAgB8C,aAAA,CAAc5C,KAAK,IAAIqB,GAAA,CAAIrB,KAAA,EAAO,OAAO,CAAA,GAAIA,KAAA;AACnE,MAAA,IAAI4C,cAAcxH,IAAA,CAAK1E,KAAK,KAAK0E,IAAA,CAAK1E,KAAA,CAAMsJ,UAAUF,aAAA,EAAe;QACnEmD,aAAA,GAAgB7H,IAAA,CAAK1E,KAAA,CAAM6I,KAAA,IAASnE,IAAA,CAAK1E,KAAA,CAAM1E,QAAA;AAC/C,QAAA,OAAO,IAAA;AACT,MAAA;AACA,MAAA,OAAO,KAAA;AACT,IAAA,CAAC,CAAA;AACH,EAAA;AAEA,EAAA,OAAOiR,aAAA;AACT,CAAA;AAEO,IAAMG,eAAA,GAAkB,SAAlBA,eAAAA,CACXC,MAAA,EACAtD,IAAA,EACG;AACH,EAAA,IAAMuD,IAAA,GAAOD,MAAA,CAAOnN,GAAA,CAAI,UAACkF,IAAA,EAAA;IAAA,OAAU;MACjCmE,KAAA,EAAO8B,IAAIjG,IAAA,EAAM,CAAA2E,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,UAAS,OAAO,CAAA,IAAKnE,KAAKmI,QAAA,EAAS;AAC1DvD,MAAAA,OAAOqB,GAAA,CAAIjG,IAAA,EAAM,CAAA2E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,IAAK5E;KAC9C;AAAA,EAAA,CAAE,CAAA;AACF,EAAA,OAAOkI,IAAA;AACT,CAAA;AAEO,IAAME,oBAAoB,SAApBA,kBACXH,MAAA,EACAI,aACArD,QAAA,EACApB,SAAA,EACAe,MACA2D,MAAA,EACG;EAEHL,MAAA,GAAS/N,KAAA,CAAMC,OAAA,CAAQ8N,MAAM,CAAA,GAAIA,SAAS,EAAC;AAE3C,EAAA,IAAI/N,KAAA,CAAMC,OAAA,CAAQ8N,MAAM,CAAA,EAAG;AACzB,IAAA,IAAIM,aAAA,GAAAC,kBAAA,CAAoBP,MAAM,CAAA;AAC9B,IAAA,IAAMQ,aAAa7E,SAAA,KAAc,QAAA;AACjC,IAAA,IAAIoB,QAAA,EAAU;AACZuD,MAAAA,aAAA,GAAgBA,aAAA,CAAcG,MAAA,CAAO,UAAC1I,IAAA,EAA6B;AACjE,QAAA,IAAIyI,UAAA,EAAY;AACd,UAAA,IAAIjB,aAAA,CAAca,WAAW,CAAA,EAAG;AAC9B,YAAA,OACEpC,GAAA,CAAIjG,IAAA,EAAM,CAAA2E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,MAChCqB,GAAA,CAAIoC,WAAA,EAAa,CAAA1D,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA;AAE3C,UAAA;AACA,UAAA,OAAOqB,GAAA,CAAIjG,IAAA,EAAM,CAAA2E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,KAAMyD,WAAA;AAC/C,QAAA;QACA,OAAOrI,IAAA,KAASqI,WAAA;AAClB,MAAA,CAAC,CAAA;AACH,IAAA,CAAA,MAAO;AACL,MAAA,IAAMrI,IAAA,GAAOyI,aAAaH,MAAA,GAASD,WAAA;AAEnCE,MAAAA,aAAA,CAAcI,KAAK3I,IAAmB,CAAA;AACxC,IAAA;AACA,IAAA,OAAOuI,aAAA;AACT,EAAA;AACF,CAAA;AAGO,IAAMK,qBAAqB,SAArBA,mBACXhE,KAAA,EACAtB,UACAM,SAAA,EACAe,IAAA,EACAuC,eACAxC,aAAA,EACG;AACH,EAAA,IAAMmE,eAAejF,SAAA,KAAc,QAAA;EAEnC,IAAIkF,yBAAyB,EAAC;AAE9B,EAAA,IAAIC,aAAA;AAEJ,EAAA,IAAIC,gBAAA;AAEJ,EAAA,IAAMC,cAAA,GAAiBC,MAAA,CAAOjB,MAAA,CAAOf,aAAa,CAAA;AAClD,EAAA,IAAI5D,QAAA,EAAU;AAAA,IAAA,IAAA6F,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA;IACZP,sBAAA,GAAyBD,YAAA,GACpBjE,QACDqE,cAAA,KAAA,IAAA,IAAAA,cAAA,KAAA,KAAA,CAAA,IAAA,CAAAE,qBAAA,GAAAF,cAAA,CAAgBP,MAAA,MAAA,IAAA,IAAAS,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,qBAAA,CAAAtD,IAAA,CAAAoD,cAAA,EAAyB,UAACK;;gCACvB1E,KAAA,CAAiCkD,QAAA,MAAA,IAAA,IAAAyB,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjCA,eAAA,CAAA1D,IAAA,CAAAjB,KAAA,EACC0E,CAAA,CAAE,CAAA3E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAC1B,CAAA;AAAA,IAAA,CACF,CAAA;AAEJoE,IAAAA,gBAAA,GAAmBH,YAAA,GACfC,sBAAA,GAAA,CAAAM,qBAAA,GACAN,sBAAA,MAAA,IAAA,IAAAM,qBAAA,uBAAAA,qBAAA,CAAwBtO,GAAA,CAAI,UAACwO;aAAMA,CAAA,CAAE,CAAA3E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAC;IAAA,CAAA,CAAA;IAEhEmE,aAAA,GAAgBF,eACXjE,KAAA,CAA6B4E,IAAA,CAC5B,UAACF,CAAA,EAAA;AAAA,MAAA,OAAMA,CAAA,CAAE,CAAA3E,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,KAAMF,aAAA;AAAA,IAAA,CACvC,8BACAoE,sBAAA,MAAA,IAAA,IAAAO,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,sBAAA,CAAwBG,IAAA,CACtB,UAACzC,MAAA,EAAA;AAAA,MAAA,OAAWA,MAAA,CAAO,CAAApC,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,KAAMF,aAAA;AAAA,IAAA,CACjD,CAAA;AACN,EAAA,CAAA,MAAO;IAAA,IAAA+E,sBAAA,EAAAC,sBAAA;IACLZ,sBAAA,GAAyBD,YAAA,GACrB,CAACjE,KAAK,CAAA,GACN,CAAAqE,2BAAAA,uDAAAA,eAAgBP,MAAA,MAAA,IAAA,IAAAe,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,sBAAA,CAAA5D,IAAA,CAAAoD,gBAAyB,UAACK,CAAA,EAAA;AAAA,MAAA,OAAM1E,KAAA,KAAU0E,EAAE,CAAA3E,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAC;AAAA,IAAA,CAAA,MACnE,EAAC;AACLoE,IAAAA,gBAAA,GAAmBF,sBAAA;AACnBC,IAAAA,aAAA,GAAgBF,YAAA,GACZjE,kCACAkE,sBAAA,MAAA,IAAA,IAAAY,sBAAA,uBAAAA,sBAAA,CAAwBF,IAAA,CACtB,UAACzC,MAAA,EAAA;AAAA,MAAA,OAAWA,MAAA,CAAO,CAAApC,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA,KAAMF,aAAA;AAAA,IAAA,CACjD,CAAA;AACN,EAAA;EAEA,OAAO;AAAEoE,IAAAA,sBAAA,EAAAA,sBAAA;AAAwBC,IAAAA,aAAA,EAAAA,aAAA;AAAeC,IAAAA,gBAAA,EAAAA;GAAiB;AACnE,CAAA;;AClRA,IAAMW,wBAAwB,SAAxBA,4BAKoB;AAAA,EAAA,IAJxBC,eAAA,GAAA/S,IAAA,CAAA+S,eAAA;IACAC,MAAA,GAAAhT,IAAA,CAAAgT,MAAA;IACAxC,OAAA,GAAAxQ,IAAA,CAAAwQ,OAAA;IACAxF,IAAA,GAAAhL,IAAA,CAAAgL,IAAA;EAEA,IAAMiI,eAAA,GAAkB,CAAAD,mBAAAA,6BAAAA,OAAQE,SAAA,KAAa,GAAA;EAC7C,IAAMC,aAAaH,MAAA,KAAA,IAAA,IAAAA,MAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAQnD,IAAA;EAE3B,IAAM3B,SAAA,GAAYI,oBAAA,CAChB,YAAA;AAAA,IAAA,OAAM6E,UAAA,KAAe,SAAA,IAAa,CAAA3C,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAASlH,MAAA,IAAS2J,eAAA;AAAA,EAAA,CAAA,EACpD,CAACE,UAAA,EAAYF,eAAA,EAAiBzC,OAAO,CACvC,CAAA;AAEA,EAAA,IAAM4C,YAAA,GAAe9E,qBAAiB,YAAM;AAC1C,IAAA,IAAM+E,SAAA,GAAY;AAChBC,MAAAA,KAAA,EAAO,EAAA;AACPC,MAAAA,MAAA,EAAQ,EAAA;AACRC,MAAAA,KAAA,EAAO;KACT;AACA,IAAA,IAAMC,SAAA,GAAYJ,SAAA,CAAUrI,IAAI,CAAA,IAAK,EAAA;IACrC,OAAO;AACL6E,MAAAA,IAAA,EAAM,SAAA;MACN6D,gBAAA,EAAkB,CAAAV,mBAAAA,6BAAAA,OAAQU,gBAAA,KAAoB,KAAA;MAC9CD,SAAA,EAAW,CAAAT,mBAAAA,6BAAAA,OAAQS,SAAA,KAAaA,SAAA;MAChCE,UAAA,EAAY,CAAAX,mBAAAA,6BAAAA,OAAQW,UAAA,KAAc,EAAA;AAClCT,MAAAA,SAAA,EAAWD;KACb;EACF,CAAA,EAAG,CAACD,MAAA,EAAQC,eAAA,EAAiBjI,IAAI,CAAC,CAAA;AAElC,EAAA,IAAA4I,iBAAA,GAMIC,iBAAiBd,eAAA,EAAiB;MACpC9D,IAAA,EAAMuB,WAAW,EAAC;AAClBwC,MAAAA,MAAA,EAAQI;AACV,KAAC,CAAA;IAAAU,qBAAA,GAAAF,iBAAA,CARCG,WAAA;AAAAA,IAAAA,WAAA,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAc,IAAA,GAAAA,qBAAA;IAAAE,qBAAA,GAAAJ,iBAAA,CACdK;AAAcC,IAAAA,mBAAA,GAAAF,qBAAA,KAAA,KAAA,CAAA,GAAsB,IAAA,GAAAA,qBAAA;IAAAG,qBAAA,GAAAP,iBAAA,CACpCQ,YAAA;AAAAA,IAAAA,YAAA,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAe,IAAA,GAAAA,qBAAA;IAAAE,qBAAA,GAAAT,iBAAA,CACfU,UAAA;AAAAA,IAAAA,UAAA,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAa,IAAA,GAAAA,qBAAA;IAAAE,sBAAA,GAAAX,iBAAA,CACbY,gBAAA;AAAAA,IAAAA,gBAAA,GAAAD,sBAAA,KAAA,KAAA,CAAA,GAAmB,IAAA,GAAAA,sBAAA;EAMrB,IAAIE,WAAA,GAAc,CAAA,CAAA;AAElB,EAAA,IAAMC,oBAAA,GAAuBC,wBAAA,CAAY,UAAC7L,CAAA,EAAkB;IAC1D,IAAI,CAACoF,SAAA,EAAW;AACd,MAAA;AACF,IAAA;AACA,IAAA,IAAM0G,SAAS9L,CAAA,CAAE8L,MAAA;AACjB,IAAA,IAAM9R,MAAM8R,MAAA,CAAOC,SAAA;IAEnB,IAAIC,IAAA,CAAKC,GAAA,CAAIN,WAAA,GAAc3R,GAAG,IAAI,CAAA,EAAG;AACnCoR,MAAAA,mBAAA,EAAoB;AAEpBO,MAAAA,WAAA,GAAc3R,GAAA;AAChB,IAAA,CAAA,MAAO;MACL2R,WAAA,GAAc,CAAA,CAAA;AAChB,IAAA;EACF,CAAA,EAAG,EAAE,CAAA;AAGL5F,EAAAA,sBAAA,CAAU,YAAM;IACd,IAAMmG,kBAAkBjC,eAAA,KAAA,IAAA,IAAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,eAAA,CAAiBkC,OAAA;AACzC,IAAA,IAAI/G,SAAA,EAAW;AAAA,MAAA,IAAAgH,qBAAA;MACbF,eAAA,KAAA,IAAA,IAAAA,eAAA,KAAA,KAAA,CAAA,IAAA,CAAAE,qBAAA,GAAAF,eAAA,CAAiBG,gBAAA,MAAA,IAAA,IAAAD,qBAAA,eAAjBA,qBAAA,CAAAlG,IAAA,CAAAgG,eAAA,EAAoC,UAAUN,oBAAoB,CAAA;AACpE,IAAA;AACA,IAAA,OAAO,YAAM;AAEX,MAAA,IAAIxG,SAAA,EAAW;AAAA,QAAA,IAAAkH,qBAAA;QACbJ,eAAA,KAAA,IAAA,IAAAA,eAAA,KAAA,KAAA,CAAA,IAAA,CAAAI,qBAAA,GAAAJ,eAAA,CAAiBK,mBAAA,MAAA,IAAA,IAAAD,qBAAA,eAAjBA,qBAAA,CAAApG,IAAA,CAAAgG,eAAA,EAAuC,UAAUN,oBAAoB,CAAA;AACvE,MAAA;IACF,CAAA;EAEF,GAAG,CAACxG,SAAA,EAAWwG,oBAAA,EAAsB3B,eAAA,CAAgBkC,OAAO,CAAC,CAAA;AAE7D,EAAA,IAAMK,WAAA,GAAc;AAClBC,IAAAA,QAAA,EAAU,UAAA;AACVC,IAAAA,KAAA,EAAO,KAAA;AACPC,IAAAA,MAAA,EAAQ,KAAA;AACRC,IAAAA,UAAA,EAAY,gBAAA;AACZC,IAAAA,SAAA,EAAA,eAAA,CAAApV,MAAA,CAA2B6T,YAAY,EAAA,KAAA,CAAA;AACvCwB,IAAAA,WAAA,EAAA,eAAA,CAAArV,MAAA,CAA6B6T,YAAY,EAAA,KAAA,CAAA;AACzCyB,IAAAA,YAAA,EAAA,eAAA,CAAAtV,MAAA,CAA8B6T,YAAY,EAAA,KAAA,CAAA;IAC1C0B,eAAA,EAAA,eAAA,CAAAvV,MAAA,CAAiC6T,YAAY,EAAA,KAAA;GAC/C;AAEA,EAAA,IAAM2B,UAAA,GAAa;AACjBJ,IAAAA,SAAA,EAAA,eAAA,CAAApV,MAAA,CAA2B+T,UAAU,EAAA,KAAA,CAAA;AACrCsB,IAAAA,WAAA,EAAA,eAAA,CAAArV,MAAA,CAA6B+T,UAAU,EAAA,KAAA,CAAA;AACvCuB,IAAAA,YAAA,EAAA,eAAA,CAAAtV,MAAA,CAA8B+T,UAAU,EAAA,KAAA,CAAA;IACxCwB,eAAA,EAAA,eAAA,CAAAvV,MAAA,CAAiC+T,UAAU,EAAA,KAAA;GAC7C;EAEA,OAAO;AACLF,IAAAA,YAAA,EAAAA,YAAA;AACAE,IAAAA,UAAA,EAAAA,UAAA;AACAP,IAAAA,WAAA,EAAAA,WAAA;AACAS,IAAAA,gBAAA,EAAAA,gBAAA;AACAtG,IAAAA,SAAA,EAAAA,SAAA;AACAoH,IAAAA,WAAA,EAAAA,WAAA;AACAS,IAAAA,UAAA,EAAAA;GACF;AACF,CAAA;;;;;;ACpDA,IAAMC,4BAAe3V,KAAA,CAAM8F,UAAA,CACzB,UAAC1B,OAAO2B,GAAA,EAAQ;AACd,EAAA,IACE2H,KAAA,GAmBEtJ,KAAA,CAnBFsJ,KAAA;IACA/C,IAAA,GAkBEvG,KAAA,CAlBFuG,IAAA;IACAuB,GAAA,GAiBE9H,KAAA,CAjBF8H,GAAA;IACAE,QAAA,GAgBEhI,KAAA,CAhBFgI,QAAA;IACAwJ,SAAA,GAeExR,KAAA,CAfFwR,SAAA;IACAC,YAAA,GAcEzR,KAAA,CAdFyR,YAAA;IACAC,KAAA,GAaE1R,KAAA,CAbF0R,KAAA;IACAC,WAAA,GAYE3R,KAAA,CAZF2R,WAAA;IACA9J,OAAA,GAWE7H,KAAA,CAXF6H,OAAA;IACAS,SAAA,GAUEtI,KAAA,CAVFsI,SAAA;IACAhN,QAAA,GASE0E,KAAA,CATF1E,QAAA;IACA+N,IAAA,GAQErJ,KAAA,CARFqJ,IAAA;IACAuI,eAAA,GAOE5R,KAAA,CAPF4R,eAAA;IACAC,kBAAA,GAME7R,KAAA,CANF6R,kBAAA;IACAC,QAAA,GAKE9R,KAAA,CALF8R,QAAA;IACA5G,gBAAA,GAIElL,KAAA,CAJFkL,gBAAA;IACA6G,gBAAA,GAGE/R,KAAA,CAHF+R,gBAAA;IACSC,YAAA,GAEPhS,KAAA,CAFF+L,OAAA;IACQkG,WAAA,GACNjS,KAAA,CADFuO,MAAA;AAMF,EAAA,IAAMD,eAAA,GAAkBxK,oBAAuB,IAAI,CAAA;AAEnDwK,EAAAA,eAAA,CAAgBkC,UAAUuB,gBAAA,EAAiB;EAE3C,IAAAG,qBAAA,GAMI7D,qBAAA,CAAsB;AACxBC,MAAAA,eAAA,EAAAA,eAAA;AACAC,MAAAA,MAAA,EAAQ0D,WAAA;AACRlG,MAAAA,OAAA,EAASiG,YAAA;AACTzL,MAAAA,IAAA,EAAAA;AACF,KAAC,CAAA;IAVC+I,WAAA,GAAA4C,qBAAA,CAAA5C,WAAA;IACAS,gBAAA,GAAAmC,qBAAA,CAAAnC,gBAAA;IACAtG,SAAA,GAAAyI,qBAAA,CAAAzI,SAAA;IACA6H,UAAA,GAAAY,qBAAA,CAAAZ,UAAA;IACAT,WAAA,GAAAqB,qBAAA,CAAArB,WAAA;AASF,EAAA,IAAMsB,iBAAA,GAAoBtI,qBAAQ,YAAM;IACtC,IAAMuI,gBAAgB,EAAC;IACvBJ,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,IAAAA,YAAA,CAAchG,OAAA,CAAQ,UAACP,MAAA,EAAyB;MAC9C,IAAKA,OAA6B4G,KAAA,EAAO;AACtC5G,QAAAA,MAAA,CAA6BnQ,QAAA,CAAS0Q,OAAA,CAAQ,UAACtH,IAAA,EAAS;UACvD,IAAI,CAACA,IAAA,CAAK+D,QAAA,IAAY,CAAC/D,KAAK8D,QAAA,EAAU;AACpC4J,YAAAA,aAAA,CAAc1N,IAAA,CAAK4E,KAAK,CAAA,GAAI5E,IAAA;AAC9B,UAAA;AACF,QAAA,CAAC,CAAA;MACH,WACE,CAAE+G,MAAA,CAAyBhD,QAAA,IAC3B,CAAEgD,OAAyBjD,QAAA,EAC3B;AACA4J,QAAAA,aAAA,CAAe3G,MAAA,CAAyBnC,KAAK,CAAA,GAAImC,MAAA;AACnD,MAAA;AACF,IAAA,CAAC,CAAA;AACD,IAAA,OAAOmC,MAAA,CAAOjB,OAAOyF,aAAa,CAAA;AACpC,EAAA,CAAA,EAAG,CAACJ,YAAY,CAAC,CAAA;AAEjB,EAAA,IAAApQ,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AACR,EAAA,IAAI,CAACxG,QAAA,IAAY,CAAC0W,YAAA,EAAc;AAC9B,IAAA,OAAO,IAAA;AACT,EAAA;EAEA,IAAMzI,QAAA,GAA0C,SAA1CA,QAAAA,CACJH,aAAA,EAAA7N,IAAA,EAEG;AAAA,IAAA,IADDsN,aAAAA;MAAOa,QAAA,GAAAnO,IAAA,CAAAmO,QAAA;MAAUqB,KAAA,GAAAxP,IAAA,CAAAwP,KAAA;MAAOvB,gBAAAA;AAE1B,IAAA,IAAM8I,WAAWhK,SAAA,KAAc,QAAA;IAC/B,IAAI0E,SAAS,EAAC;AACd,IAAA,IAAIsF,QAAA,EAAU;AACZtF,MAAAA,MAAA,GAAAxQ,eAAA,CAAA,EAAA,EAAcgN,QAAA,CAAS;MACvB,IAAI,EAACH,iBAAAA,mBAAAA,KAAMR,KAAA,CAAA,EAAO;AAChB+E,QAAAA,MAAA,CAAO2E,MAAA,CAAOvF,MAAA,EAAQ;AAAEnE,UAAAA,KAAA,EAAAA;AAAM,SAAC,CAAA;AACjC,MAAA;MACA,IAAI,EAACQ,iBAAAA,mBAAAA,KAAMC,KAAA,CAAA,EAAO;AAChBsE,QAAAA,MAAA,CAAO2E,MAAA,CAAOvF,MAAA,EAAQ;AAAE1D,UAAAA,KAAA,EAAOF;AAAc,SAAC,CAAA;AAChD,MAAA;AACF,IAAA;IAEA,IAAI,CAACwE,MAAA,CAAOvE,IAAA,CAAK2D,MAAM,EAAEnI,MAAA,EAAQ;AAC/B+I,MAAAA,MAAA,CAAO2E,OAAOvF,MAAA,EAAAlE,eAAA,CAAAA,eAAA,CAAA,EAAA,EACX,CAAAO,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,KAAA,KAAS,OAAO,EAAGA,KAAA,CAAA,EACzB,CAAAQ,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,EAAGF,aAAA,CAC3B,CAAA;AACH,IAAA;AAEA,IAAA,IAAIpB,QAAA,EAAU;AAEZ,MAAA,IAAM2E,MAAA,GAASG,iBAAA,CACbxD,KAAA,EACAF,aAAA,EACAM,QAAA,EACApB,SAAA,EACAe,IAAA,EACA2D,MACF,CAAA;MACA8E,QAAA,CAASnF,MAAA,EAAQ;AACf9D,QAAAA,KAAA,EAAAA,KAAA;AACAS,QAAAA,KAAA,EAAOF,aAAA;AACP/E,QAAAA,CAAA,EAAG0G,KAAA;AACHyH,QAAAA,OAAA,EAAS9I,WAAW,SAAA,GAAY;AAClC,OAAC,CAAA;AACH,IAAA,CAAA,MAAO;MAEL,IAAM+I,SAAA,GAAYnK,SAAA,KAAc,QAAA,GAAW0E,MAAA,GAAS5D,aAAA;AAEpD,MAAA,IAAI,CAACsJ,OAAA,CAAQpJ,KAAA,EAAOmJ,SAAS,CAAA,EAAG;QAC9BX,QAAA,CAASW,SAAA,EAAW;AAClB5J,UAAAA,KAAA,EAAAA,KAAA;AACAS,UAAAA,KAAA,EAAOmJ,SAAA;AACPpO,UAAAA,CAAA,EAAG0G,KAAA;AACHyH,UAAAA,OAAA,EAAS;AACX,SAAC,CAAA;AACH,MAAA;MACAf,YAAA,CAAa,CAACD,SAAS,CAAA;AACzB,IAAA;EACF,CAAA;EAEA,IAAMmB,iBAAA,GAAoBpT,qBAAA,CAASC,GAAA,CAAIlE,QAAA,EAAU,UAACmE,KAAA,EAAU;AAC1D,IAAA,iBAAI+E,2BAAA,CAAe/E,KAAK,CAAA,EAAG;AACzB,MAAA,IAAMmT,UAAA,GAAa;AACjBrM,QAAAA,IAAA,EAAAA,IAAA;AACAuB,QAAAA,GAAA,EAAAA,GAAA;AACAE,QAAAA,QAAA,EAAAA,QAAA;AACAoB,QAAAA,aAAA,EAAeE,KAAA;AACfC,QAAAA,QAAA,EAAAA;OACF;MACA,oBAAO5J,yBAAA,CAAaF,KAAA,EAAAjD,eAAA,CAAA,EAAA,EAAYoW,WAAY,CAAA;AAC9C,IAAA;AACA,IAAA,OAAOnT,KAAA;AACT,EAAA,CAAC,CAAA;AAGD,EAAA,IAAMoT,cAAA,GAAgB,SAAhBA,aAAAA,CAAiB9G,OAAA,EAA4B;AACjD,IAAA,IAAIA,OAAA,EAAS;AAEX,MAAA,sBACEnQ,KAAA,CAAAC,aAAA,CAAC,IAAA,EAAA;QAAGJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,eAAA;SAC1BiK,OAAA,CAAQvM,GAAA,CAAI,UAACkF,IAAA,EAAMC,KAAA,EAAU;AAC5B,QAAA,IAAQ0N,KAAA,GAA4B3N,IAAA,CAA5B2N,KAAA;UAAO1J,OAAA,GAAqBjE,IAAA,CAArBiE,OAAA;AAAYtM,UAAAA,gCAASqI,IAAA,EAAAnI,WAAA,CAAA;AACpC,QAAA,IAAI8V,KAAA,EAAO;AACT,UAAA,sBACEzW,KAAA,CAAAC,aAAA,CAAC+M,WAAA,EAAA;AAAYC,YAAAA,KAAA,EAAOwJ,KAAA;AAAO1J,YAAAA,OAAA,EAAAA,OAAA;AAAkB/D,YAAAA,KAAKD;AAAA,WAAA,EAC/CkO,cAAA,CAAcxW,IAAA,CAAKf,QAAQ,CAC9B,CAAA;AAEJ,QAAA;AAEA,QAAA,IACSwX,WAAA,GAMLpO,IAAA,CANF4E,KAAA;UACAT,KAAA,GAKEnE,IAAA,CALFmE,KAAA;UACAJ,QAAA,GAIE/D,IAAA,CAJF+D,QAAA;UACA/B,OAAA,GAGEhC,IAAA,CAHFgC,OAAA;UACApL,SAAAA,GAEEoJ,IAAA,CAFFpJ,QAAA;AACGkO,UAAAA,QAAA,GAAAlN,wBAAA,CACDoI,IAAA,EAAAqO,YAAA,CAAA;QACJ,sBACEnX,KAAA,CAAAC,aAAA,CAACmN,MAAA,EAAAxM,eAAA,CAAAA,eAAA,CAAA;AACCoI,UAAAA,GAAA,EAAKD,KAAA;AACLmD,UAAAA,GAAA,EAAAA,GAAA;AACAe,UAAAA,KAAA,EAAAA,KAAA;AACAS,UAAAA,KAAA,EAAOwJ,WAAA;AACPvJ,UAAAA,QAAA,EAAAA,QAAA;AACAH,UAAAA,aAAA,EAAeE,KAAA;UACfuB,cAAcsH,iBAAA,CAAkBtN,MAAA;AAChCmD,UAAAA,QAAA,EAAAA,QAAA;AACAzB,UAAAA,IAAA,EAAAA,IAAA;AACAkC,UAAAA,QAAA,EAAAA,QAAA;AACAe,UAAAA,QAAA,EAAAA,QAAA;AACAH,UAAAA,IAAA,EAAAA,IAAA;AACA3C,UAAAA,OAAA,EAAAA,OAAA;AACAwE,UAAAA,gBAAA,EAAAA,gBAAA;AACAZ,UAAAA,YAAA,EAAcyF;AAAA,SAAA,EACTtG,SAAA,GACD;AACAA,UAAAA,SAAA,EAAAA,SAAA;AACAyF,UAAAA,YAAY+C,WAAA,KAAA,IAAA,IAAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,WAAA,CAAa/C,UAAA;AACzBR,UAAAA,YAAYuD,WAAA,KAAA,IAAA,IAAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,WAAA,CAAa7G;AAC3B,YACE,EAAC,GACD5B,QAAA,CAAA,EAEHlO,SACH,CAAA;AAEJ,MAAA,CAAC,CACH,CAAA;AAEJ,IAAA;AACA,IAAA,0CACG,IAAA,EAAA;MAAGG,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,eAAA;OAAkB6Q,iBAAkB,CAAA;EAErE,CAAA;EAEA,IAAMK,OAAA,GACHpU,KAAA,CAAMC,OAAA,CAAQ8T,iBAAiB,CAAA,IAAK,CAACA,iBAAA,CAAkB9N,MAAA,IACvDmN,YAAA,IAAgBA,YAAA,CAAanN,MAAA,KAAW,CAAA;AAE3C,EAAA,IAAMoO,WAAA,GAAc,SAAdA,WAAAA,CACJC,eAAA,EACAC,UAAA,EAAA;AAAA,IAAA,sBAEAvX,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACC8F,MAAAA,GAAA,EAAAA,GAAA;AACAlG,MAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcgG,WAAW,EAAA,yBAAA,CAAA,EAAAgH,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAhN,MAAA,CAC9BgG,WAAW,EAAA,iCAAA,CAAA,EAAoCyE,IAAA,KAAS,OAAA,MAAAzK,MAAA,CACxDgG,WAAW,EAAA,iCAAA,CAAA,EAAoCyE,IAAA,KAAS,OAAA,CAAA,EAAA,EAAA,CAAAzK,MAAA,CACxDgG,WAAW,EAAA,iCAAA,CAAA,EAAoCyE,IAAA,KAAS,QAAA,CAC7D,CAAA;AACDjH,MAAAA,KAAA,EAAO6T;KAAA,EAENtL,0BACCjM,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;MAAIJ,qBAAcqG,WAAW,EAAA,uBAAA;OAC3B6P,WACH,CAAA,EAED,CAAC9J,WAAWmL,OAAA,mBACXpX,KAAA,CAAAC,aAAA,CAAC;MAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,gBAAA;AAAA,KAAA,EAAmB4P,KAAM,CAAA,EAExD,CAAC7J,OAAA,IAAW,CAACmL,OAAA,IAAWH,eAAcK,eAAe,CACxD,CAAA;AAAA,EAAA,CAAA;AAEF,EAAA,IAAIzJ,SAAA,EAAW;AACb,IAAA,sBACE7N,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAwX,QAAA,EAAA,IAAA,EACGxB,eAAA,iBACDhW,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA,IAAA,qCACE,KAAA,EAAA;AAAIyD,MAAAA,KAAA,EAAOuR;KAAa,CAAA,EACxBoC,WAAA,CAAY3D,WAAA,EAAagC,UAAU,CACtC,GACCO,kBACH,CAAA;AAEJ,EAAA;AAEA,EAAA,sBACEjW,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAwX,QAAA,EAAA,IAAA,EACGxB,eAAA,EACAqB,WAAA,CAAYjB,YAAY,GACxBH,kBACH,CAAA;AAEJ,CACF,CAAA;;;;AC/SO,SAASrG,oBACdC,MAAA,EAC6B;EAC7B,OAAO,CAAC,CAACA,MAAA,IAAU,OAAA,IAAWA,UAAU,UAAA,IAAcA,MAAA;AACxD;AAKA,SAAS4H,WACPhK,IAAA,EACA0C,OAAA,EACAzQ,QAAA,EACAgN,SAAA,EACAgB,OACAnB,cAAA,EACA;AACA,EAAA,IAAAmL,SAAA,GAA0CjQ,qBAAA,CAAwB,EAAE,CAAA;IAAAkQ,UAAA,GAAAxU,cAAA,CAAAuU,SAAA,EAAA,CAAA,CAAA;AAA7D1H,IAAAA,aAAA,GAAA2H,UAAA,CAAA,CAAA,CAAA;AAAeC,IAAAA,gBAAgB,GAAAD,UAAA,CAAA,CAAA,CAAA;AACtC,EAAA,IAAAE,UAAA,GAA4CpQ,qBAAA,CAAyB,EAAE,CAAA;IAAAqQ,UAAA,GAAA3U,cAAA,CAAA0U,UAAA,EAAA,CAAA,CAAA;AAAhEE,IAAAA,cAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAgBE,IAAAA,iBAAiB,GAAAF,UAAA,CAAA,CAAA,CAAA;AACxC,EAAA,IAAAG,UAAA,GAA4CxQ,qBAAA,CAAyB,EAAE,CAAA;IAAAyQ,UAAA,GAAA/U,cAAA,CAAA8U,UAAA,EAAA,CAAA,CAAA;AAAhElG,IAAAA,cAAA,GAAAmG,UAAA,CAAA,CAAA,CAAA;AAAgBC,IAAAA,iBAAiB,GAAAD,UAAA,CAAA,CAAA,CAAA;AACxC,EAAA,IAAAE,UAAA,GAA8C3Q,qBAAA,CAAyB,EAAE,CAAA;IAAA4Q,UAAA,GAAAlV,cAAA,CAAAiV,UAAA,EAAA,CAAA,CAAA;AAAlEE,IAAAA,eAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAiBE,IAAAA,kBAAkB,GAAAF,UAAA,CAAA,CAAA,CAAA;AAG1C7J,EAAAA,sBAAA,CAAU,YAAM;IACd,IAAIgK,kBAAA,GAAqBrI,OAAA;IAEzB,IAAMsI,aAAA,GAAgBzY,KAAA,CAAM2D,QAAA,CAAS+U,OAAA,CAAQhZ,QAAQ,CAAA;AACrD,IAAA,IAAMiZ,iBAAiBF,aAAA,CAAcjH,MAAA,CACnC,UAACY,CAAA,EAAA;MAAA,OAAoBA,CAAA,CAAE5C,IAAA,KAASpC,MAAA,IAAUgF,EAAE5C,IAAA,KAASxC,WAAA;AAAA,IAAA,CACvD,CAAA;AACA,IAAA,IAAM4L,uBACJH,aAAA,CAAcxP,MAAA,GAAS,CAAA,IACvB0P,cAAA,CAAe1P,WAAWwP,aAAA,CAAcxP,MAAA;AAC1C,IAAA,IAAIsD,cAAA,IAAkBwL,cAAA,CAAe9O,MAAA,IAAU2P,oBAAA,EAAsB;AAErE,IAAA,IAAIA,oBAAA,EAAsB;AACxB,MAAA,IAAMC,qBAAA,GAAuB,SAAvBA,oBAAAA,CAAwBzG,CAAA,EAAM;AAClC,QAAA,iBAAIpS,KAAA,CAAM4I,cAAA,CAA6BwJ,CAAC,CAAA,EAAG;AACzC,UAAA,IAAIA,CAAA,CAAE5C,SAASxC,WAAA,EAAa;AAAA,YAAA,IAAA8L,iBAAA;AAC1B,YAAA,OAAAlY,eAAA,CAAAA,eAAA,CAAA,EAAA,EACKwR,CAAA,CAAEhO,KAAA,CAAA,EAAA,EAAA,EAAA;AACLqS,cAAAA,KAAA,EAAOrE,EAAEhO,KAAA,CAAM6I,KAAA;AACfvN,cAAAA,QAAA,GAAAoZ,iBAAA,GAAU1G,EAAEhO,KAAA,CAAM1E,QAAA,MAAA,IAAA,IAAAoZ,iBAAA,uBAARA,iBAAA,CAAkBlV,IAAI,UAACwO,EAAAA,EAAAA;gBAAAA,OAAMyG,qBAAA,CAAqBzG,EAAC,CAAC;AAAA,cAAA,CAAA;AAAA,aAAA,CAAA;AAElE,UAAA;AACA,UAAA,OAAAxR,eAAA,CAAAA,eAAA,CAAA,EAAA,EACKwR,CAAA,CAAEhO,KAAA,CAAA,EAAA,EAAA,EAAA;YACL6I,KAAA,EAAOmF,CAAA,CAAEhO,KAAA,CAAM6I,KAAA,IAASmF,EAAEhO,KAAA,CAAM1E;AAAA,WAAA,CAAA;AAEpC,QAAA;QACA,OAAO;AAAEuN,UAAAA,OAAOmF;SAAE;MACpB,CAAA;MACAoG,kBAAA,GAAqBC,aAAA,KAAA,IAAA,IAAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,aAAA,CAAe7U,GAAA,CAAkB,UAACwO,CAAA,EAAA;QAAA,OACrDyG,qBAAA,CAAqBzG,CAAC,CAAA;AAAA,MAAA,CACxB,CAAA;AACF,IAAA;AACA,IAAA,IAAI3E,IAAA,EAAM;AAAA,MAAA,IAAAsL,mBAAA;AAERP,MAAAA,kBAAA,GAAA,CAAAO,mBAAA,GAAqBP,kBAAA,MAAA,IAAA,IAAAO,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,mBAAA,CAAoBnV,GAAA,CAAkB,UAACiM,MAAA,EAAA;AAAA,QAAA,OAAAjP,eAAA,CAAAA,eAAA,CAAA,EAAA,EACvDiP,MAAA,CAAA,EAAA,EAAA,EAAA;AACHnC,UAAAA,KAAA,EAAOqB,GAAA,CAAIc,MAAA,EAAQ,CAAApC,IAAA,KAAA,IAAA,IAAAA,IAAA,uBAAAA,IAAA,CAAMC,UAAS,OAAO,CAAA;AACzCT,UAAAA,KAAA,EAAO8B,GAAA,CAAIc,MAAA,EAAQ,CAAApC,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,UAAS,OAAO;AAAA,SAAA,CAAA;AAAA,MAAA,CACzC,CAAA;AACJ,IAAA;IACA+K,iBAAA,CAAkBQ,kBAAkB,CAAA;IACpCL,iBAAA,CAAkBK,kBAAkB,CAAA;AAEpCZ,IAAAA,gBAAA,CACE1H,gBAAA,CACExQ,QAAA,EACAyQ,OAAA,EACA1C,IACF,KAAK,EACP,CAAA;EAEF,GAAG,CAAC0C,OAAA,EAAS1C,IAAA,EAAM/N,QAAA,EAAU6M,cAAc,CAAC,CAAA;AAG5CiC,EAAAA,sBAAA,CAAU,YAAM;IACd,IAAMwK,QAAA,GAAW,CAAAvL,iBAAAA,2BAAAA,KAAMC,KAAA,KAAS,OAAA;IAChC,IAAMuL,QAAA,GAAW,CAAAxL,iBAAAA,2BAAAA,KAAMR,KAAA,KAAS,OAAA;IAEhCsL,kBAAA,CAAmB,UAACW,kBAAA,EAAuC;AACzD,MAAA,IAAMC,qBAAA,GAAwB,SAAxBA,qBAAAA,CAAyBrQ,IAAA,EAA0B;QACvD,IAAI4D,cAAc,OAAA,EAAS;UACzB,OACEsD,aAAA,CAAclH,IAAuB,CAAA,IACrCoQ,kBAAA,CAAmB5G,IAAA,CACjB,UAACzC,MAAA,EAAA;AAAA,YAAA,OAAWd,GAAA,CAAIc,MAAA,EAAQmJ,QAAQ,CAAA,KAAMlQ,IAAA;AAAA,UAAA,CACxC,CAAA,IAAAoE,eAAA,CAAAA,eAAA,CAAA,EAAA,EACG8L,QAAQ,EAAGlQ,IAAA,CAAA,EACXmQ,QAAQ,EAAGnQ,IAAA,CACd;AAEJ,QAAA;QACA,IAAIsQ,OAAA,CAAOtQ,IAAA,CAAA,KAAS,QAAA,IAAYA,IAAA,KAAS,IAAA,EAAM;AAC7C,UAAA,OAAOA,IAAA;AACT,QAAA;AACA,QAAA,OAAO,EAAC;MACV,CAAA;AAGA,MAAA,IAAI9F,KAAA,CAAMC,OAAA,CAAQyK,KAAK,CAAA,EAAG;AACxB,QAAA,OAAOA,KAAA,CAAM9J,IAAIuV,qBAAqB,CAAA;AACxC,MAAA;MAGA,IAAIzL,KAAA,KAAU,KAAA,CAAA,IAAaA,KAAA,KAAU,IAAA,EAAM;AACzC,QAAA,IAAMmC,MAAA,GAASsJ,sBAAsBzL,KAAK,CAAA;AAC1C,QAAA,OAAOmC,MAAA,GAAS,CAACA,MAAM,CAAA,GAAI,EAAC;AAC9B,MAAA;AAEA,MAAA,OAAO,EAAC;AACV,IAAA,CAAC,CAAA;AACH,EAAA,GAAG,CAACnC,KAAA,EAAOD,MAAMf,SAAA,EAAWsD,aAAA,EAAeuI,kBAAkB,CAAC,CAAA;EAE9D,OAAO;AACLR,IAAAA,cAAA,EAAAA,cAAA;AACAC,IAAAA,iBAAA,EAAAA,iBAAA;AACAjG,IAAAA,cAAA,EAAAA,cAAA;AACAoG,IAAAA,iBAAA,EAAAA,iBAAA;AACAnI,IAAAA,aAAA,EAAAA,aAAA;AACA4H,IAAAA,gBAAA,EAAAA,gBAAA;AACAU,IAAAA,eAAA,EAAAA,eAAA;AACAC,IAAAA,kBAAA,EAAAA;GACF;AACF;;;;;AC/EA,IAAMc,QAAA,GAASC,qBAAA,CACb,UAACC,eAA4BxT,GAAA,EAAmC;AAC9D,EAAA,IAAM3B,KAAA,GAAQ0C,eAAA,CACZyS,aAAA,EACA5N,kBACF,CAAA;AACA,EAAA,IACEW,QAAA,GA6CElI,KAAA,CA7CFkI,QAAA;IACAR,UAAA,GA4CE1H,KAAA,CA5CF0H,UAAA;IACAF,SAAA,GA2CExH,KAAA,CA3CFwH,SAAA;IACAI,SAAA,GA0CE5H,KAAA,CA1CF4H,SAAA;IAAAwN,kBAAA,GA0CEpV,KAAA,CAzCF2R,WAAA;AAAAA,IAAAA,WAAA,GAAAyD,kBAAA,KAAA,KAAA,CAAA,GAAc,uBAAA,GAAAA,kBAAA;IACdtN,GAAA,GAwCE9H,KAAA,CAxCF8H,GAAA;IACAuN,UAAA,GAuCErV,KAAA,CAvCFqV,UAAA;IACAlN,cAAA,GAsCEnI,KAAA,CAtCFmI,cAAA;IACA1M,SAAA,GAqCEuE,KAAA,CArCFvE,SAAA;IACA6D,KAAA,GAoCEU,KAAA,CApCFV,KAAA;IACAmJ,QAAA,GAmCEzI,KAAA,CAnCFyI,QAAA;IACAlC,IAAA,GAkCEvG,KAAA,CAlCFuG,IAAA;IACAyB,QAAA,GAiCEhI,KAAA,CAjCFgI,QAAA;IACAC,WAAA,GAgCEjI,KAAA,CAhCFiI,WAAA;IACAN,SAAA,GA+BE3H,KAAA,CA/BF2H,SAAA;IACA2N,UAAA,GA8BEtV,KAAA,CA9BFsV,UAAA;IACAvJ,OAAA,GA6BE/L,KAAA,CA7BF+L,OAAA;IACAwJ,UAAA,GA4BEvV,KAAA,CA5BFuV,UAAA;IACA1N,OAAA,GA2BE7H,KAAA,CA3BF6H,OAAA;IACA6J,KAAA,GA0BE1R,KAAA,CA1BF0R,KAAA;IACApJ,SAAA,GAyBEtI,KAAA,CAzBFsI,SAAA;IACAe,IAAA,GAwBErJ,KAAA,CAxBFqJ,IAAA;IACA/N,QAAA,GAuBE0E,KAAA,CAvBF1E,QAAA;IACAka,cAAA,GAsBExV,KAAA,CAtBFwV,cAAA;IACAzN,eAAA,GAqBE/H,KAAA,CArBF+H,eAAA;IACA0N,YAAA,GAoBEzV,KAAA,CApBFyV,YAAA;IACArN,SAAA,GAmBEpI,KAAA,CAnBFoI,SAAA;IACAsN,UAAA,GAkBE1V,KAAA,CAlBF0V,UAAA;IACA7D,kBAAA,GAiBE7R,KAAA,CAjBF6R,kBAAA;IACAD,eAAA,GAgBE5R,KAAA,CAhBF4R,eAAA;IACA+D,gBAAA,GAeE3V,KAAA,CAfF2V,gBAAA;IACAC,aAAA,GAcE5V,KAAA,CAdF4V,aAAA;IACAC,QAAA,GAaE7V,KAAA,CAbF6V,QAAA;IACAtH,MAAA,GAYEvO,KAAA,CAZFuO,MAAA;IACAuH,UAAA,GAWE9V,KAAA,CAXF8V,UAAA;IACAjN,KAAA,GAUE7I,KAAA,CAVF6I,KAAA;IACAuE,MAAA,GASEpN,KAAA,CATFoN,MAAA;IACA2I,OAAA,GAQE/V,KAAA,CARF+V,OAAA;IACAC,OAAA,GAOEhW,KAAA,CAPFgW,MAAA;IAAAC,cAAA,GAOEjW,KAAA,CANFkW,OAAA;AAAAA,IAAAA,OAAA,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAU/S,IAAA,GAAA+S,cAAA;IACVE,QAAA,GAKEnW,KAAA,CALFmW,QAAA;IACAC,QAAA,GAIEpW,KAAA,CAJFoW,QAAA;IACAC,QAAA,GAGErW,KAAA,CAHFqW,QAAA;IACAC,OAAA,GAEEtW,KAAA,CAFFsW,OAAA;IACAC,oBAAA,GACEvW,KAAA,CADFuW,oBAAA;EAGF,IAAAC,cAAA,GAA0BC,cAAczW,KAAA,EAAO,OAAA,EAASA,MAAM8R,QAAQ,CAAA;IAAA4E,eAAA,GAAA3X,cAAA,CAAAyX,cAAA,EAAA,CAAA,CAAA;AAA/DlN,IAAAA;AAAOwI,IAAAA,QAAQ,GAAA4E,eAAA,CAAA,CAAA,CAAA;AACtB,EAAA,IAAMC,cAAA,GAAiB7S,oBAAO,IAAI,CAAA;AAClC,EAAA,IAAAlC,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AACR,EAAA,IAAAvG,IAAA,GACE8Z,cAAc,EAAC;IADTuB,wBAAAA;IAAkBC,QAAA,GAAAtb,IAAA,CAAAsb,QAAA;IAAUC,gBAAA,GAAAvb,IAAA,CAAAub,gBAAA;AAAqBC,IAAAA,cAAA,GAAAza,wBAAA,CAAAf,IAAA,EAAAgB,WAAA,CAAA;AAEzD,EAAA,IAAA+W,SAAA,GAAyCjQ,sBAAS,KAAK,CAAA;IAAAkQ,UAAA,GAAAxU,cAAA,CAAAuU,SAAA,EAAA,CAAA,CAAA;AAAhD0D,IAAAA,WAAA,GAAAzD,UAAA,CAAA,CAAA,CAAA;AAAa0D,IAAAA,iBAAiB,GAAA1D,UAAA,CAAA,CAAA,CAAA;AAErC,EAAA,IAAM2D,IAAA,GAAA,EAAA,CAAApb,MAAA,CAAUgG,WAAW,EAAA,SAAA,CAAA;EAE3B,IAAAqV,eAAA,GAAkCV,aAAA,CAChCzW,KAAA,EACA,cAAA,EACAuW,oBACF,CAAA;IAAAa,eAAA,GAAArY,cAAA,CAAAoY,eAAA,EAAA,CAAA,CAAA;AAJO3F,IAAAA,SAAA,GAAA4F,eAAA,CAAA,CAAA,CAAA;AAAW3F,IAAAA,YAAY,GAAA2F,eAAA,CAAA,CAAA,CAAA;EAK9B,IAAAC,eAAA,GAAoCZ,aAAA,CAClCzW,KAAA,EACA,YAAA,EACAA,KAAA,CAAMsX,aACR,CAAA;IAAAC,eAAA,GAAAxY,cAAA,CAAAsY,eAAA,EAAA,CAAA,CAAA;AAJOG,IAAAA,UAAA,GAAAD,eAAA,CAAA,CAAA,CAAA;AAAYD,IAAAA,aAAa,GAAAC,eAAA,CAAA,CAAA,CAAA;AAMhC,EAAA,IAAAE,WAAA,GAMIC,UAAA,CAAWrO,IAAA,EAAM0C,SAASzQ,QAAA,EAAUgN,SAAA,EAAWgB,OAAOnB,cAAc,CAAA;IALtEwL,cAAA,GAAA8D,WAAA,CAAA9D,cAAA;IACAC,iBAAA,GAAA6D,WAAA,CAAA7D,iBAAA;IACAjG,cAAA,GAAA8J,WAAA,CAAA9J,cAAA;IACA/B,aAAA,GAAA6L,WAAA,CAAA7L,aAAA;IACAsI,eAAA,GAAAuD,WAAA,CAAAvD,eAAA;AAGF,EAAA,IAAM3H,aAAA,GAAgB1C,qBAAQ,YAAM;AAClC,IAAA,IAAI7B,QAAA,EAAU;AACZ,MAAA,OAAOkM,eAAA,CAAgB1U,GAAA,CACrB,UAACmY;eACChN,GAAA,CAAIgN,cAAA,IAAkB,EAAC,EAAG,CAAAtO,IAAA,aAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,KAAA,KAAS,OAAO,CAAA,IAAK,EAAA;AAAA,MAAA,CACzD,CAAA;AACF,IAAA;IACA,OAAO8B,GAAA,CAAIuJ,gBAAgB,CAAC,CAAA,IAAK,EAAC,EAAG,CAAA7K,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMR,KAAA,KAAS,OAAO,CAAA,IAAK,KAAA,CAAA;EAClE,CAAA,EAAG,CAACqL,eAAA,EAAiB7K,IAAA,EAAMrB,QAAQ,CAAC,CAAA;EAEpC,IAAM4P,eAAA,GAAkB,SAAlBA,eAAAA,CACJC,OAAA,EACAC,GAAA,EACG;AACH,IAAA,IAAIrP,QAAA,EAAU;AACdoP,IAAAA,OAAA,IAAWZ,kBAAkB,KAAK,CAAA;AAClC,IAAA,CAACY,WAAWP,aAAA,CAAc,EAAA,EAAI;AAAE9E,MAAAA,OAAA,EAAS;AAAO,KAAC,CAAA;AACjDf,IAAAA,YAAA,CAAaoG,SAASC,GAAG,CAAA;EAC3B,CAAA;EAGA,IAAMC,WAAA,GAAc,SAAdA,WAAAA,CAAeC,YAAA,EAAgCC,OAAA,EAAY;AAC/D,IAAA,IAAQzF,OAAA,GAA4ByF,OAAA,CAA5BzF,OAAA;MAAS7N,KAAA,GAAmBsT,OAAA,CAAnBtT,KAAA;MAAOD,IAAA,GAAYuT,OAAA,CAAZvT,IAAA;MAAML,IAAM4T,OAAA,CAAN5T;IAE9B,IAAImO,YAAY,WAAA,EAAa;MAC3BnO,CAAA,CAAEgH,eAAA,EAAgB;MAElB,IAAI6M,OAAA,GAAU,CAAA,CAAA;MACd,IAAIC,GAAA,GAAMxT,KAAA;MACV,OAAOwT,OAAO,CAAA,EAAG;AACf,QAAA,IAAM1M,MAAA,GAASyI,gBAAgBiE,GAAG,CAAA;QAClC,IAAI,CAAC3M,mBAAA,CAAoBC,MAAM,CAAA,IAAK,CAACA,OAAOhD,QAAA,EAAU;AACpDyP,UAAAA,OAAA,GAAUC,GAAA;AACV,UAAA;AACF,QAAA;AACAA,QAAAA,GAAA,IAAO,CAAA;AACT,MAAA;MACA,IAAID,UAAU,CAAA,EAAG;AACf,QAAA;AACF,MAAA;AACA,MAAA,IAAMvL,MAAA,GAASG,iBAAA,CACbxD,KAAA,EACAA,MAAM4O,OAAO,CAAA,EACb,IAAA,EACA5P,SAAA,EACAe,IACF,CAAA;AAGA,MAAA,IAAA+O,mBAAA,GAAmC9K,kBAAA,CACjCX,MAAA,EACA3E,QAAA,EACAM,SAAA,EACAe,IAAA,EACAuC,aACF,CAAA;QANQ4B,6CAAAA;MAORsE,QAAA,CAASnF,MAAA,EAAQ;AACftI,QAAAA,CAAA,EAAAA,CAAA;AACAmO,QAAAA,OAAA,EAAAA,OAAA;AACA0B,QAAAA,eAAA,EAAiB1G;AACnB,OAAC,CAAA;AACD,MAAA;AACF,IAAA;IAEA,IAAIgF,YAAY,YAAA,EAAc;AAAA,MAAA,IAAA6F,kBAAA;AAC5BhU,MAAAA,CAAA,aAAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAAgU,kBAAA,GAAAhU,CAAA,CAAGgH,eAAA,MAAA,IAAA,IAAAgN,kBAAA,eAAHA,kBAAA,CAAA9N,IAAA,CAAAlG,CAAqB,CAAA;AACrB,MAAA,IAAMsI,OAAA,GAASG,iBAAA,CACbxD,KAAA,EACAA,MAAM3E,KAAK,CAAA,EACX,IAAA,EACA2D,SAAA,EACAe,IACF,CAAA;AAEA,MAAA,IAAAiP,oBAAA,GAAmChL,kBAAA,CACjCX,OAAA,EACA3E,QAAA,EACAM,SAAA,EACAe,IAAA,EACAuC,aACF,CAAA;QANQ4B,+CAAAA;MAQRsE,QAAA,CAASnF,OAAA,EAAQ;AACftI,QAAAA,CAAA,EAAAA,CAAA;AACAmO,QAAAA,OAAA,EAAAA,OAAA;AACA0B,QAAAA,eAAA,EAAiB1G;AACnB,OAAC,CAAA;AACD,MAAA,IAAI+K,UAAA,CAAWnC,QAAQ,CAAA,EAAG;AACxBA,QAAAA,QAAA,CAAS;AACP9M,UAAAA,KAAA,EAAOA,MAAM3E,KAAK,CAAA;AAClB6F,UAAAA,IAAA,EAAM;AACJ3B,YAAAA,KAAA,EAAOnE,IAAA;YACP4E,KAAA,EAAOA,MAAM3E,KAAK;WACpB;AACAN,UAAAA,CAAA,EAAAA;AACF,SAAC,CAAA;AACH,MAAA;AACF,IAAA;EACF,CAAA;EAEA,IAAM6G,gBAAA,GAAmB,SAAnBA,gBAAAA,CACJ1C,QAAA,EACAnE,CAAA,EACG;AAAA,IAAA,IAAAmU,YAAA;AACH,IAAA,IAAMC,kBAAA,GAAqB,SAArBA,kBAAAA,CAAsBC,GAAA,EAAA;AAAA,MAAA,OAC1BA,GAAA,CAAIlQ,YAAYkQ,GAAA,CAAIjQ,QAAA;AAAA,IAAA,CAAA;IACtB,IACE,CAACT,YACD2L,cAAA,CAAe/I,IAAA,CACb,UAAC8N,GAAA,EAAA;MAAA,OAAQ,CAAClN,oBAAoBkN,GAAG,CAAA,IAAKD,mBAAmBC,GAAG,CAAA;AAAA,IAAA,CAC9D,CAAA,EACA;AACA,MAAA;AACF,IAAA;AAEA,IAAA,IAAMC,qBAAqB,SAArBA,mBAAsBD,GAAA,EAAA;MAAA,OAC1B,CAACA,GAAA,CAAIlQ,QAAA,IAAY,CAACkQ,GAAA,CAAIjQ,QAAA;AAAA,IAAA,CAAA;AACxB,IAAA,IAAMmQ,cAAA,GAAiB,SAAjBA,cAAAA,CAAkBnN,MAAA,EAAA;AAAA,MAAA,OACtBnD,SAAA,KAAc,WAAWmD,MAAA,GAASA,MAAA,CAAO,CAAApC,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,KAAA,KAAS,OAAO,CAAA;AAAA,IAAA,CAAA;IAEjE,IAAMqD,SAAS,EAAC;AAChBgH,IAAAA,cAAA,CAAe3H,OAAA,CAAQ,UAACP,MAAA,EAAW;AACjC,MAAA,IAAID,mBAAA,CAAoBC,MAAM,CAAA,EAAG;AAC/BA,QAAAA,MAAA,CAAOnQ,QAAA,CAAS0Q,OAAA,CAAQ,UAACtH,IAAA,EAAS;AAChC,UAAA,IAAIiU,kBAAA,CAAmBjU,IAAI,CAAA,EAAG;AAC5BiI,YAAAA,MAAA,CAAOU,IAAA,CAAKuL,cAAA,CAAelU,IAAI,CAAC,CAAA;AAClC,UAAA;AACF,QAAA,CAAC,CAAA;AACH,MAAA,CAAA,MAAA,IAAWiU,kBAAA,CAAmBlN,MAAM,CAAA,EAAG;AACrCkB,QAAAA,MAAA,CAAOU,IAAA,CAAKuL,cAAA,CAAenN,MAAM,CAAC,CAAA;AACpC,MAAA;AACF,IAAA,CAAC,CAAA;AAED,IAAA,IAAAoN,oBAAA,GAAqDvL,kBAAA,CACnDX,MAAA,EACA3E,QAAA,EACAM,SAAA,EACAe,IAAA,EACAuC,aACF,CAAA;MANQ4B,sBAAA,GAAAqL,oBAAA,CAAArL,sBAAA;MAAwBE,gBAAA,GAAAmL,oBAAA,CAAAnL,gBAAA;IAQhC,IAAMoL,aAAA,GACJ,CAACtQ,QAAA,IACCkF,gBAAA,CAAiB7I,4BAAY7E,KAAA,CAAMsJ,KAAA,MAAA,IAAA,IAAAkP,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,YAAA,CAAqC3T,MAAA,CAAA,GAChE6I,gBAAA,GACA,EAAC;AAEPoE,IAAAA,QAAA,aAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAWgH,aAAA,EAAe;AACxBzU,MAAAA,CAAA,EAAAA,CAAA;AACAmO,MAAAA,OAAA,EAAS,CAAChK,QAAA,GAAW,OAAA,GAAU,SAAA;AAC/B0L,MAAAA,eAAA,EAAiB1G;AACnB,KAAC,CAAA;EACH,CAAA;EAGA,IAAMuL,YAAA,GAAe,SAAfA,YAAAA,CACJzP,MAAAA,EAIA2O,OAAA,EAMG;IACH,IAAM7O,aAAA,GAAgBpB,QAAA,GAAWiQ,OAAA,CAAQ3O,KAAA,GAAQA,MAAAA;AAEjD,IAAA,IAAItB,QAAA,EAAU;AACZ,MAAA,CAACG,cAAA,IACCqP,UAAA,IACAF,aAAA,CAAc,EAAA,EAAI;QAAEjT,GAAG4T,OAAA,CAAQ5T,CAAA;AAAGmO,QAAAA,OAAA,EAAS;AAAS,OAAC,CAAA;AACzD,IAAA;AACA,IAAA,IAAI5K,SAAA,IAAa2Q,UAAA,CAAWpC,QAAQ,CAAA,EAAG;AACrC,MAAA,IACGpK,OAAA,CAAwBqB,MAAA,CACvB,UAAC3B,MAAA,EAAA;AAAA,QAAA,OAAWA,MAAA,CAAOnC,KAAA,KAAUF,aAAA;AAAA,MAAA,CAC/B,CAAA,CAAEvE,WAAW,CAAA,EACb;QACAsR,QAAA,CAAS/M,aAAuB,CAAA;AAClC,MAAA;AACF,IAAA;AAEA,IAAA,IAAA4P,oBAAA,GAAkD1L,kBAAA,CAChDhE,MAAAA,EACAtB,QAAA,EACAM,SAAA,EACAe,IAAA,EACAuC,aAAA,EACAxC,aACF,CAAA;MAPQoE,sBAAA,GAAAwL,oBAAA,CAAAxL,sBAAA;MAAwBC,aAAA,GAAAuL,oBAAA,CAAAvL,aAAA;AAQhCqE,IAAAA,QAAA,aAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAWxI,MAAAA,EAAO;MAChBjF,GAAG4T,OAAA,CAAQ5T,CAAA;MACXmO,SAASyF,OAAA,CAAQzF,OAAA;AACjB0B,MAAAA,eAAA,EAAiB1G,sBAAA;AACjB/B,MAAAA,MAAA,EAAQgC;AACV,KAAC,CAAA;AAED,IAAA,IAAIzF,YAAY,CAAAiQ,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAASzF,OAAA,MAAY,SAAA,IAAa+F,UAAA,CAAWnC,QAAQ,CAAA,EAAG;MACtE,IAAM9M,SAAQ2O,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAAS3O,KAAA;AACvB,MAAA,IAAMmC,SAAUM,OAAA,CAAwBmC,IAAA,CACtC,UAACzC,OAAAA,EAAAA;AAAAA,QAAAA,OAAWA,OAAAA,CAAOnC,KAAA,KAAUA,MAAAA;AAAAA,MAAAA,CAC/B,CAAA;AACA8M,MAAAA,QAAA,CAAS;AACP9M,QAAAA,KAAA,EAAAA,MAAAA;AACAkB,QAAAA,IAAA,EAAMiB,MAAA;QACNpH,GAAG4T,OAAA,CAAQ5T;AACb,OAAC,CAAA;AACH,IAAA;EACF,CAAA;AAGA,EAAA,IAAM4U,YAAA,GAAe,SAAfA,YAAAA,CAAgB3P,MAAAA,EAAkB;IACtC,IAAI4P,kBAAkC,EAAC;AACvC,IAAA,IAAI3D,UAAA,IAAcgD,UAAA,CAAWlC,QAAQ,CAAA,EAAG;AACtC,MAAA;AACF,IAAA;IACA,IAAI,CAAC/M,MAAAA,EAAO;MACVsK,iBAAA,CAAkBjG,cAAc,CAAA;AAChC,MAAA;AACF,IAAA;IAEA,IAAMwL,eAAe,EAAC;AACtB,IAAA,IAAMC,aAAA,GAAgB,SAAhBA,aAAAA,CAAiB3N,MAAA,EAAyB;AAC9C,MAAA,IAAI2B,MAAA,IAAUmL,UAAA,CAAWnL,MAAM,CAAA,EAAG;AAChC,QAAA,OAAOA,MAAA,CAAO9D,QAAOmC,MAAM,CAAA;AAC7B,MAAA;AACA,MAAA,IAAM4N,UAAA,GAAa/P,OAAMgQ,WAAA,EAAY;AACrC,MAAA,OAAA,CAAQ,CAAA7N,mBAAAA,6BAAAA,OAAQ5C,KAAA,KAAS,EAAA,EAAIyQ,WAAA,EAAY,CAAE9M,SAAS6M,UAAU,CAAA;IAChE,CAAA;IAEA1L,cAAA,KAAA,IAAA,IAAAA,cAAA,KAAA,KAAA,CAAA,IAAAA,cAAA,CAAgB3B,OAAA,CAAQ,UAACP,MAAA,EAAW;AAClC,MAAA,IAAID,mBAAA,CAAoBC,MAAM,CAAA,EAAG;AAAA,QAAA,IAAAQ,gBAAA;AAC/BiN,QAAAA,eAAA,CAAgB7L,IAAA,CAAA7Q,eAAA,CAAAA,eAAA,KACXiP,MAAA,CAAA,EAAA,EAAA,EAAA;AACHnQ,UAAAA,QAAA,EAAA,CAAA2Q,gBAAA,GAAUR,MAAA,CAAOnQ,QAAA,MAAA,IAAA,IAAA2Q,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,gBAAA,CAAiBmB,MAAA,CAAO,UAAC3N,KAAA,EAAU;AAC3C,YAAA,IAAI2Z,aAAA,CAAc3Z,KAAK,CAAA,EAAG;AACxB0Z,cAAAA,YAAA,CAAa9L,IAAA,CAAK5N,MAAMoJ,KAAK,CAAA;AAC7B,cAAA,OAAO,IAAA;AACT,YAAA;AACA,YAAA,OAAO,KAAA;UACT,CAAC;AAAA,SAAA,CACF,CAAA;AACH,MAAA,CAAA,MAAA,IAAWuQ,aAAA,CAAc3N,MAAM,CAAA,EAAG;AAChC0N,QAAAA,YAAA,CAAa9L,IAAA,CAAK5B,OAAO5C,KAAK,CAAA;AAC9BqQ,QAAAA,eAAA,CAAgB7L,KAAK5B,MAAM,CAAA;AAC7B,MAAA;AACF,IAAA,CAAC,CAAA;AACD,IAAA,IAAM8N,sBAAA,GAAyBJ,YAAA,CAAa3M,QAAA,CAASlD,MAAK,CAAA;AAC1D,IAAA,IAAI1B,SAAA,IAAa,CAAC2R,sBAAA,EAAwB;AACxCL,MAAAA,eAAA,GAAkBA,eAAA,CAAgBpd,OAAO,CAAC;AAAE+M,QAAAA,OAAOS,MAAAA;AAAOA,QAAAA,KAAA,EAAAA;AAAM,OAAC,CAAC,CAAA;AACpE,IAAA;IACAsK,iBAAA,CAAkBsF,eAAe,CAAA;EACnC,CAAA;EAGA,IAAMM,iBAAA,GAAoB,SAApBA,iBAAAA,CACJlQ,MAAAA,EACA2O,OAAA,EACG;AACH,IAAA,IAAIA,OAAA,CAAQzF,YAAY,OAAA,EAAS;MAC/B8E,aAAA,CAAchO,QAAO;QAAEjF,CAAA,EAAG4T,QAAQ5T,CAAA;AAAGmO,QAAAA,OAAA,EAAS;AAAQ,OAAC,CAAA;AACzD,IAAA;AACA,IAAA,IAAIlJ,WAAU,KAAA,CAAA,EAAW;AACvB,MAAA;AACF,IAAA;AACA,IAAA,IAAIiP,UAAA,CAAWlC,QAAQ,CAAA,EAAG;MACxBA,QAAA,CAAS/M,MAAAA,EAAO;QAAEjF,CAAA,EAAG4T,OAAA,CAAQ5T;AAAmC,OAAC,CAAA;AACjE,MAAA;AACF,IAAA;EACF,CAAA;AAEA,EAAA,IAAMoV,WAAA,GAAc,SAAdA,WAAAA,CAAexB,OAAA,EAAY;AAC/BA,IAAAA,OAAA,CAAQ5T,EAAEgH,eAAA,EAAgB;AAC1B,IAAA,IAAIzM,KAAA,CAAMC,OAAA,CAAQyK,KAAK,CAAA,EAAG;AACxBwI,MAAAA,QAAA,CAAS,EAAC,EAAAtV,eAAA,CAAAA,eAAA,KAAQyb,OAAA,CAAA,EAAA,EAAA,EAAA;AAASzF,QAAAA,SAAS,OAAA;AAAS0B,QAAAA,eAAA,EAAiB;AAAC,OAAA,CAAG,CAAA;AACpE,IAAA,CAAA,MAAO;AACLpC,MAAAA,QAAA,CAAS,IAAA,EAAAtV,eAAA,CAAAA,eAAA,KAAWyb,OAAA,CAAA,EAAA,EAAA,EAAA;AAASzF,QAAAA,SAAS,OAAA;AAAS0B,QAAAA,eAAA,EAAiB;AAAC,OAAA,CAAG,CAAA;AACtE,IAAA;IACAgC,OAAA,CAAQ+B,OAAO,CAAA;EACjB,CAAA;AAEA7N,EAAAA,sBAAA,CAAU,YAAM;AACd,IAAA,IAAI,OAAOoN,eAAe,WAAA,EAAa;AACrCyB,MAAAA,YAAA,CAAajO,MAAA,CAAOwM,UAAU,CAAC,CAAA;AACjC,IAAA;AAEF,EAAA,CAAA,EAAG,CAACA,UAAA,EAAY7J,cAAc,CAAC,CAAA;AAG/B,EAAA,IAAM+L,mBAAmB,SAAnBA,mBAAyB;AAC7B,IAAA,IAAI5D,UAAA,EAAY;AACd,MAAA,OAAOA,UAAA;AACT,IAAA;AACA,IAAA,IAAIjO,OAAA,EAAS;AACX,MAAA,sBACEjM,KAAA,CAAAC,aAAA,CAAC8d,OAAA,EAAA;QACCle,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CACNob,IAAI,EAAA,cAAA,CAAA,EAAA,EAAA,CAAApb,MAAA,CACJob,IAAI,EAAA,eAAA,CACT,CAAA;AACArP,QAAAA,OAAA,EAAS,IAAA;AACTtB,QAAAA,IAAA,EAAK;AAAA,OACP,CAAA;AAEJ,IAAA;IAEA,OACE6B,SAAA,mBACExM,KAAA,CAAAC,aAAA,CAAC+d,SAAA,EAAA;AACCne,MAAAA,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcob,IAAI,EAAA,cAAA,CAAA;AAClB2C,MAAAA,QAAA,EAAUrI,SAAA;AACV/I,MAAAA,QAAA,EAAAA;AAAA,KACF,CAAA;EAGN,CAAA;EAEA,IAAMsJ,gBAAA,GAAmB7B,wBAAA,CACvB,YAAA;AAAA,IAAA,IAAA4J,qBAAA;AAAA,IAAA,OAAA,CAAAA,qBAAA,GAAOnD,cAAA,CAAuBnG,OAAA,MAAA,IAAA,IAAAsJ,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvBA,qBAAA,CAAgCC,sBAAA,EAAuB;AAAA,EAAA,CAAA,EAC9D,EACF,CAAA;EAEA,IAAMpH,iBAAA,GAAoBpT,qBAAA,CAASC,GAAA,CAAIlE,QAAA,EAAU,UAACmE,KAAA,EAAU;AAC1D,IAAA,iBAAI+E,2BAAA,CAAe/E,KAAK,CAAA,EAAG;AACzB,MAAA,IAAMmT,UAAA,GAAa;AAAE5K,QAAAA,QAAA,EAAAA;OAAS;MAC9B,oBAAOrI,yBAAA,CAAaF,KAAA,EAAAjD,eAAA,CAAA,EAAA,EAAYoW,WAAY,CAAA;AAC9C,IAAA;AACA,IAAA,OAAOnT,KAAA;AACT,EAAA,CAAC,CAAA;AAGD,EAAA,IAAMua,gBAAgB,SAAhBA,gBAAsB;AAC1B,IAAA,IAAMC,iBAAA,GAAoB;AACxBnI,MAAAA,QAAA,EAAUiH,YAAA;AACVzP,MAAAA,KAAA,EAAAA,KAAA;AACA7N,MAAAA,SAAA,EAAAA,SAAA;AACA8K,MAAAA,IAAA,EAAAA,IAAA;AACAyB,MAAAA,QAAA,EAAAA,QAAA;AACAwJ,MAAAA,SAAA,EAAAA,SAAA;AAAA;AAEAC,MAAAA,cAAc,SAAdA,aAAeyI,IAAA,EAAA;AAAA,QAAA,OAAkBtC,eAAA,CAAgBsC,IAAA,EAAM,EAAE,CAAA;AAAA,MAAA,CAAA;AACzDnO,MAAAA,OAAA,EAAS4H,cAAA;AACTjC,MAAAA,KAAA,EAAAA,KAAA;AACA5J,MAAAA,GAAA,EAAAA,GAAA;AACA6J,MAAAA,WAAA,EAAAA,WAAA;AACA9J,MAAAA,OAAA,EAAAA,OAAA;AACAS,MAAAA,SAAA,EAAAA,SAAA;AACAe,MAAAA,IAAA,EAAAA,IAAA;AACAwI,MAAAA,kBAAA,EAAAA,kBAAA;AACAD,MAAAA,eAAA,EAAAA,eAAA;AACA1G,MAAAA,gBAAA,EAAAA,gBAAA;AACA6G,MAAAA,gBAAA,EAAAA,gBAAA;AACAxD,MAAAA,MAAA,EAAAA;KACF;AACA,IAAA,sBACE3S,KAAA,CAAAC,aAAA,CAAC0V,YAAA,EAAA/U,eAAA,CAAA,EAAA,EAAiByd,iBAAA,CAAA,EAAoBtH,iBAAkB,CAAA;EAE5D,CAAA;AAEA,EAAA,IAAMwH,qBAAqB,SAArBA,qBAA2B;IAC/B,IAAI,CAAC1E,YAAA,EAAc;MACjB,IAAI,CAACzN,QAAA,EAAU;AACb,QAAA,IAAI,OAAOuE,kBAAkB,QAAA,EAAU;AACrC,UAAA,OAAOA,aAAA;AACT,QAAA;AACA,QAAA,OAAO,EAAA;AACT,MAAA;AACA,MAAA,OAAO,UAAA5N,KAAA,EAAA;AAAA,QAAA,IAAUyb,GAAA,GAAAzb,KAAA,CAAP2K,KAAA;QAAA,OACR8Q,IACGC,KAAA,CAAM,CAAA,EAAGtS,eAAA,GAAkBA,eAAA,GAAkBqS,IAAIvV,MAAM,CAAA,CACvDrF,GAAA,CAAI,UAACwO,GAAWpJ,GAAA,EAAgB;UAC/B,IAAM0V,eACJvO,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAASmC,IAAA,CAAK,UAACzC,MAAA,EAAA;AAAA,YAAA,OAAWA,MAAA,CAAO5C,UAAUmF,CAAC;UAAA,CAAA,CAAA;UAC9C,sBACEpS,KAAA,CAAAC,aAAA,CAAC0e,GAAA,EAAA/d,eAAA,CAAAA,eAAA,CAAA;AACCoI,YAAAA,GAAA,EAAAA,GAAA;AACA4V,YAAAA,UAAU,EAACF,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,IAAAA,YAAA,CAAc7R,QAAA,CAAA,IAAY,CAACA,YAAY,CAACP,QAAA;AACnD3B,YAAAA,IAAA,EAAAA;AAAA,WAAA,EACIsP,QAAA,CAAA,EAAA,EAAA,EAAA;AACJ9S,YAAAA,OAAA,EAAS,SAATA,OAAAA,CAAAjE,KAAA,EAAoB;AAAA,cAAA,IAAA2b,cAAA,EAAAC,qBAAA,EAAAC,iBAAA;AAAA,cAAA,IAARtW,CAAA,GAAAvF,KAAA,CAAAuF,CAAA;cACVA,CAAA,CAAEgH,eAAA,EAAgB;cAClBhH,CAAA,KAAA,IAAA,IAAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAAoW,cAAA,GAAApW,CAAA,CAAGiH,+EAAHmP,cAAA,CAAgBlP,wBAAA,MAAA,IAAA,IAAAmP,qBAAA,KAAA,KAAA,CAAA,IAAhBA,qBAAA,CAAAnQ,IAAA,CAAAkQ,cAA2C,CAAA;AAC3C,cAAA,IAAM9N,MAAA,GAASG,iBAAA,CACbxD,KAAA,EACAA,MAAM1E,GAAG,CAAA,EACT,IAAA,EACA0D,SAAA,EACAe,IACF,CAAA;AAEA,cAAA,IAAAuR,oBAAA,GAAmCtN,kBAAA,CACjCX,MAAA,EACA3E,QAAA,EACAM,SAAA,EACAe,IAAA,EACAuC,aAAA,EACAtC,KACF,CAAA;gBAPQkE,8CAAAA;cAQRsE,QAAA,CAASnF,MAAA,EAAQ;AACftI,gBAAAA,CAAA,EAAAA,CAAA;AACA6P,gBAAAA,eAAA,EAAiB1G,sBAAA;AACjBgF,gBAAAA,OAAA,EAAS;AACX,eAAC,CAAA;AACDqD,cAAAA,QAAA,aAAAA,QAAA,KAAA,KAAA,CAAA,IAAA,CAAA8E,iBAAA,GAAA9E,QAAA,CAAU9S,OAAA,MAAA,IAAA,IAAA4X,iBAAA,eAAVA,iBAAA,CAAApQ,IAAA,CAAAsL,QAAA,EAAoB;AAAExR,gBAAAA,CAAA,EAAAA;AAAE,eAAC,CAAA;AAEzB+R,cAAAA,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAW;AACT9M,gBAAAA,KAAA,EAAOA,MAAM1E,GAAG,CAAA;AAChB4F,gBAAAA,MAAM;AAAE3B,kBAAAA,KAAA,EAAOmF;kBAAG1E,KAAA,EAAOA,KAAA,CAAM1E,GAAG;iBAAE;AACpCP,gBAAAA,CAAA,EAAAA;AAIF,eAAC,CAAA;AACH,YAAA;AAAA,WAAA,CAAA,EAEC2J,CACH,CAAA;AAEJ,QAAA,CAAC,CAAA;AAAA,MAAA,CAAA;AACP,IAAA;AACA,IAAA,IAAI,OAAOyH,iBAAiB,QAAA,EAAU;AACpC,MAAA,OAAOA,YAAA;AACT,IAAA;AACA,IAAA,IAAIzN,QAAA,EAAU;AACZ,MAAA,OAAO,UAAA6S,KAAA,EAAA;AAAA,QAAA,IAAG9X,OAAA,GAAA8X,KAAA,CAAA9X,OAAA;QAAA,OACR+X,iBAAA,CAAkBrF,cAAc;AAAEnM,UAAAA,KAAA,EAAO4K,eAAA;AAAiBnR,UAAAA,OAAA,EAAAA;AAAQ,SAAC,CAAA;AAAA,MAAA,CAAA;AACvE,IAAA;IACA,OAAO+X,kBAAkBrF,YAAA,EAAc;AACrCnM,MAAAA,KAAA,EAAOiD,aAAA;AACPxJ,MAAAA,OAAA,EAASG;AACX,KAAC,CAAA;EACH,CAAA;AAGA,EAAA,IAAM6X,eAAA,GAAkB,SAAlBA,eAAAA,CAAmBrU,OAAA,EAA4B;AACnD,IAAA,IAAI,CAACA,WAAWsQ,WAAA,EAAa;AAC3B,MAAA;AACF,IAAA;IACA,IAAMgE,oBAAoCtU,OAAA,CAAQuU,aAAA,KAAAnf,MAAA,CAC5CgG,WAAW,EAAA,cAAA,CACjB,CAAA;AACA,IAAA,IAAI,CAACkG,YAAYgT,iBAAA,EAAmB;AAClC,MAAA,IAAAE,iBAAA,GAA0BC,gBAAA,CAAiBH,iBAAiB,CAAA;QAApDjb,aAAA,GAAAmb,iBAAA,CAAAnb,aAAA;AACR,MAAA,IAAAqb,kBAAA,GAAyBD,gBAAA,CAAiBzU,OAAO,CAAA;QAAzC2U,YAAA,GAAAD,kBAAA,CAAAC,YAAA;AACR,MAAA,IAAMC,sBACJC,QAAA,CAASxb,aAAA,EAAe,EAAE,CAAA,GAAIwb,QAAA,CAASF,cAAc,EAAE,CAAA;MAEzD,IAAMG,WAAA,GACJC,uBAAA,CAAwBT,iBAAA,EAAmBtU,OAAO,CAAA,GAClDA,QAAQgV,SAAA,IACPhV,OAAA,CAAQiV,YAAA,GAAeX,iBAAA,CAAkBW,YAAA,CAAA,GAC1CL,mBAAA;AAGFM,MAAAA,UAAA,CAAW,YAAM;QAEflV,OAAA,CAAQ0J,SAAA,GAAYoL,WAAA;AACtB,MAAA,CAAC,CAAA;AACH,IAAA;EACF,CAAA;AAEA,EAAA,IAAQK,YAAA,GAA+B7b,KAAA,CAA/B6b,YAAA;IAAcC,YAAA,GAAiB9b,KAAA,CAAjB8b,YAAA;EAEtB,IAAMC,WAAA,GAAc,SAAdA,WAAAA,CACJC,CAAA,EACA/D,OAAA,EACG;IACH3B,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAA9Z,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAeyb,OAAA,CAAA,EAAA,EAAA,EAAA;AAAS3O,MAAAA,KAAA,EAAAA;AAAA,KAAA,CAAO,CAAA;EACjC,CAAA;AAEA,EAAA,IAAMkG,YAAA,GAAe,SAAfA,YAAAA,CAAAyM,KAAA,EAA6D;AAAA,IAAA,IAA3C5X,CAAA,GAAA4X,KAAA,CAAA5X,CAAA;IACtB4S,iBAAA,CAAkB,IAAI,CAAA;AAEtBJ,IAAAA,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAW;AAAExS,MAAAA,GAAAA;AAAE,KAAC,CAAA;AAChB,IAAA,IAAIyS,gBAAA,EAAkB;AACpB,MAAA,IAAMoF,sBAAA,GAAyBC,QAAA,CAC7B,UAAC9X,EAAAA,EAAAA;AAAAA,QAAAA,OAAMyS,gBAAA,CAAiB;AAAEzS,UAAAA,CAAA,EAAAA;AAAE,SAAC,CAAA;AAAA,MAAA,CAAA,EAC7B,GACF,CAAA;AAEA,MAAA,IAAA+X,SAAA,GACE/X,CAAA,CAAE8L,MAAA;QADIC,SAAA,GAAAgM,SAAA,CAAAhM,SAAA;QAAWuL,YAAA,GAAAS,SAAA,CAAAT,YAAA;QAAchM,YAAA,GAAAyM,SAAA,CAAAzM,YAAA;MAEjC,IAAIgM,YAAA,GAAetL,IAAA,CAAKgM,KAAA,CAAMjM,SAAS,MAAMT,YAAA,EAAc;QACzDuM,sBAAA,CAAuB7X,CAAC,CAAA;AAC1B,MAAA;AACF,IAAA;EACF,CAAA;AAEA,EAAA,sBACEzI,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IACCJ,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcob,IAAI,EAAA,QAAA,CAAA,EAAUzb,SAAS,CAAA;AAChD6D,IAAAA,KAAA,EAAAA,KAAA;AACAuc,IAAAA,YAAA,EAAAA,YAAA;AACAC,IAAAA,YAAA,EAAAA;GAAA,iBAEAlgB,KAAA,CAAAC,aAAA,CAACygB,WAAA,EAAA9f,eAAA,CAAA;IACCgL,SAAA,EAAW,EAAClI,KAAA,KAAA,IAAA,IAAAA,KAAA,eAAAA,KAAA,CAAOyR,KAAA,CAAA,IAASvJ,SAAA;AAC5B7F,IAAAA,GAAA,EAAKmE,WAAA,CAAYnE,GAAA,EAAKgV,cAAc,CAAA;AACpClb,IAAAA,SAAA,EAAWyb,IAAA;AACXhP,IAAAA,QAAA,EAAAA,QAAA;IACAT,WAAWzH,KAAA,CAAMyH,SAAA;AACjB8U,IAAAA,UAAA,EAAYhH,UAAA,IAAcgD,UAAA,CAAWnL,MAAM,CAAA;AAC3CpF,IAAAA,QAAA,EAAAA,QAAA;AACAsB,IAAAA,KAAA,EAAOiD,aAAA;AACPR,IAAAA,OAAA,EAASmI,eAAA;IACTuB,cAAc0E,kBAAA,EAAmB;AACjCxS,IAAAA,SAAA,EAAAA,SAAA;AACAc,IAAAA,QAAA,EAAAA,QAAA;IACAJ,QAAQrI,KAAA,CAAMqI,MAAA;IACdmU,MAAMxc,KAAA,CAAMwc,IAAA;AACZ9U,IAAAA,UAAA,EAAAA,UAAA;AACAmB,IAAAA,KAAA,EAAAA,KAAA;IACA4T,QAAQzc,KAAA,CAAMyc,MAAA;AACdnH,IAAAA,UAAA,EAAAA,UAAA;IACAQ,YAAY4D,gBAAA,EAAiB;IAC7BgD,OAAO1C,aAAA,EAAc;AACrB/R,IAAAA,aACE,CAACD,QAAA,IAAYwJ,SAAA,IAAajF,aAAA,GACtBA,gBACAtE,WAAA,IAAe,oBAAA;AAErBuP,IAAAA,UAAA,EAAAA,UAAA;AACA5B,IAAAA,aAAA,EAAApZ,eAAA,CAAA;AACE+J,MAAAA,IAAA,EAAAA;AAAA,KAAA,EACGqP,aAAA,CACL;AACAC,IAAAA,QAAA,EAAArZ,eAAA,CAAA;AAAY+J,MAAAA,IAAA,EAAAA;AAAA,KAAA,EAASsP,QAAA,CAAS;AAC9BH,IAAAA,UAAA,EAAAlZ,eAAA,CAAA;AACE+J,MAAAA,IAAA,EAAAA;AAAA,KAAA,EACGmP,UAAA,CACL;AACA3N,IAAAA,eAAA,EAAAA,eAAA;AACAyN,IAAAA,cAAA,EAAAA,cAAA;AACAuF,IAAAA,eAAA,EAAAA,eAAA;AACA1F,IAAAA,UAAA,EAAA7Y,eAAA,CAAA;AACEoa,MAAAA,gBAAA,EAAkB,CAAA,EAAA,CAAA9a,MAAA,CAAIob,IAAI,EAAA,YAAA,CAAA,EAAcN,gBAAgB,CAAA;AACxDC,MAAAA,QAAA,EAAUrH;AAAA,KAAA,EACPuH,cAAA,CACL;AACA4F,IAAAA,YAAA,EAAcnL,SAAA;AACd+E,IAAAA,oBAAA,EAAsBqB,eAAA;AACtBG,IAAAA,WAAA,EAAAA,WAAA;AACAT,IAAAA,aAAA,EAAekC,iBAAA;AACfzD,IAAAA,OAAA,EAAAA,OAAA;AACAO,IAAAA,OAAA,EAASyF,WAAA;AACT/F,IAAAA,MAAA,EAAQ,SAARA,MAAAA,CAASgG,CAAA,EAAG/D,OAAA,EAAY;AACtBjC,MAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAS;AACP1M,QAAAA,KAAA,EAAAA,KAAA;QACAjF,GAAG4T,OAAA,CAAQ5T;AACb,OAAC,CAAA;IACH,CAAA;AACA6R,IAAAA,OAAA,EAASuD;GAAA,EACL9D,gBAAA,CACN,CACF,CAAA;AAEJ,CAAA,EACA;AAAE3M,EAAAA,QAAAA;AAAQJ,EAAAA,WAAA,EAAAA;AAAY,CACxB,CAAA;AAEAqM,QAAA,CAAOlP,WAAA,GAAc,QAAA;;ACzrBd,IAAMkP,MAAA,GAAS2H;;ACDf,IAAMC,sBAAA,GAA4C;AACvDxb,EAAAA,QAAA,EAAU,IAAA;AACVyb,EAAAA,MAAA,EAAQ,IAAA;AACRC,EAAAA,MAAA,EAAQ,IAAA;AACRxb,EAAAA,KAAA,EAAO;AACT,CAAA;AAEO,IAAMyb,kBAAA,GAAoC;EAC/CC,iBAAA,EAAmB,KAAA,CAAA;EACnBC,mBAAA,EAAqB,KAAA,CAAA;AACrBC,EAAAA,cAAA,EAAgB,KAAA;AAChBC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,IAAA,EAAM,OAAA;AACNC,EAAAA,SAAA,EAAW,KAAA;AACXC,EAAAA,oBAAA,EAAsB,IAAA;AACtBC,EAAAA,qBAAA,EAAuB,KAAA;AACvBC,EAAAA,WAAA,EAAa,IAAA;AACbC,EAAAA,IAAA,EAAM;AACR,CAAA;;;;;ACFA,IAAMC,kBAAA,GAAqB,SAArBA,kBAAAA,CAAsBC,GAAA,EAAmCC,YAAA,EAA8B;EACzF,IAAIC,MAAA,GAAS,IAAA;AAEb,EAAA,IAAIpT,QAAA,CAASkT,GAAG,CAAA,EAAG;AACfE,IAAAA,MAAA,kBAASliB,KAAA,CAAAC,aAAA,CAACkiB,MAAA,EAAAvhB,eAAA,CAAA,EAAA,EAAWqhB,YAAA,CAAA,EAAeD,GAAI,CAAA;AAC5C,EAAA,CAAA,MAAA,iBAAWpZ,2BAAA,CAAeoZ,GAAG,CAAA,EAAG;AAC5BE,IAAAA,MAAA,GAASF,GAAA;AACb,EAAA,CAAA,MAAA,IAAWI,QAAA,CAASJ,GAAG,CAAA,EAAG;AACtBE,IAAAA,MAAA,kBAASliB,KAAA,CAAAC,aAAA,CAACkiB,MAAA,EAAAvhB,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAWqhB,YAAA,CAAA,EAAmBD,GAAA,CAAY,CAAA;AACxD,EAAA,CAAA,MAAA,IAAWrF,UAAA,CAAWqF,GAAG,CAAA,EAAG;IACxBE,MAAA,GAASF,GAAA,EAAI;AACjB,EAAA;AAEA,EAAA,OAAOE,MAAA;AACX,CAAA;AAEA,IAAMG,YAAA,gBAAavc,uBAAA,CAA4C,UAAC1B,KAAA,EAAO2B,GAAA,EAAQ;AAC3E,EAAA,IAAAC,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AACR,EAAA,IAAMoc,YAAA,GAAA,EAAA,CAAApiB,MAAA,CAAkBgG,WAAW,EAAA,SAAA,CAAA;EACnC,IAAAC,cAAA,GAAmEC,aAAA,CAAc;AAC7EC,MAAAA,SAAA,EAAWC,SAAA;AACXC,MAAAA,oBAAA,EAAsBC,oBAAA;AACtBC,MAAAA,qBAAA,EAAuBC;AAC3B,KAAC,CAAA;IAJOL,WAAA,GAAAF,cAAA,CAAAE,SAAA;IAAWE,sBAAA,GAAAJ,cAAA,CAAAI,oBAAA;IAAsBE,uBAAA,GAAAN,cAAA,CAAAM,qBAAA;EAQzC,IAAM8b,WAAA,GAAc,cAAA;EACpB,IAAMC,UAAA,GAAa,cAAA;AACnB,EAAA,IAAA3b,gBAAA,GAeIC,eAAA,CAAiC1C,KAAA,EAAO6c,sBAAsB,CAAA;IAd9Dtb,KAAA,GAAAkB,gBAAA,CAAAlB,KAAA;IACAwb,MAAA,GAAAta,gBAAA,CAAAsa,MAAA;IACA1b,QAAA,GAAAoB,gBAAA,CAAApB,QAAA;IACAyb,MAAA,GAAAra,gBAAA,CAAAqa,MAAA;IACAuB,IAAA,GAAA5b,gBAAA,CAAA4b,IAAA;IACA/iB,QAAA,GAAAmH,gBAAA,CAAAnH,QAAA;IACAG,SAAA,GAAAgH,gBAAA,CAAAhH,SAAA;IACA6iB,QAAA,GAAA7b,gBAAA,CAAA6b,QAAA;IACAC,SAAA,GAAA9b,gBAAA,CAAA8b,SAAA;IACAC,eAAA,GAAA/b,gBAAA,CAAA+b,eAAA;IAAAC,qBAAA,GAAAhc,gBAAA,CACAic,SAAA;AAAAA,IAAAA,SAAA,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAYL,UAAA,GAAAK,qBAAA;IAAAE,qBAAA,GAAAlc,gBAAA,CACZmc,UAAA;AAAAA,IAAAA,UAAA,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAaR,WAAA,GAAAQ,qBAAA;IACbE,cAAA,GAAApc,gBAAA,CAAAoc,cAAA;AACGC,IAAAA,UAAA,GAAAxiB,wBAAA,CAAAmG,gBAAA,EAAAlG,WAAA,CAAA;AAGP,EAAA,IAAMwiB,sBAAsB,SAAtBA,sBAA4B;AAC9B,IAAA,IAAMhb,OAAA,GAAU;AACZE,MAAAA,qBAAMrI,KAAA,CAAAC,aAAA,CAACsG,sBAAA,EAAA;QAAqB1G,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,UAAA;AAAA,OAAY,CAAA;AACjEqC,MAAAA,wBAASvI,KAAA,CAAAC,aAAA,CAACsG,sBAAA,EAAA;QAAqB1G,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,aAAA;AAAA,OAAe,CAAA;AAAA;AAEvEoC,MAAAA,sBAAOtI,KAAA,CAAAC,aAAA,CAACsG,sBAAA,EAAA;QAAqB1G,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,WAAA;AAAA,OAAa,CAAA;AACnEkd,MAAAA,uBAAQpjB,KAAA,CAAAC,aAAA,CAACsG,sBAAA,EAAA;QAAqB1G,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,WAAA;AAAA,OAAa,CAAA;AACpEkC,MAAAA,wBAASpI,KAAA,CAAAC,aAAA,CAACwG,uBAAA,EAAA;QAAsB5G,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcgG,WAAW,EAAA,aAAA;OAAe;KAC5E;AAEA,IAAA,sBACIlG,KAAA,CAAAC,aAAA,CAAC;MAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcoiB,YAAY,EAAA,kBAAA;AAAA,KAAA,EAC1Bna,OAAA,CAAQxC,KAAK,CAAA,EACbwb,MACL,CAAA;EAER,CAAA;AAEA,EAAA,IAAMkC,iBAAiB,SAAjBA,iBAAuB;IACzB,IAAI,CAAC5d,QAAA,EAAU;AACX,MAAA,OAAO,IAAA;AACX,IAAA;AAEA,IAAA,IAAM6d,YAAY,SAAZA;aAAmB7d,QAAA,KAAa,IAAA,kBAAOzF,KAAA,CAAAC,aAAA,CAACoG,iBAAU,CAAA,GAAKZ,QAAA;AAAA,IAAA,CAAA;AAE7D,IAAA,sBACIzF,KAAA,CAAAC,aAAA,CAAC,MAAA,EAAA;AACGJ,MAAAA,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcoiB,YAAY,EAAA,SAAA,CAAA;AAC1B5e,MAAAA,KAAA,EAAO;AACHH,QAAAA,UAAA,EAAY;OAChB;AACA2F,MAAAA,SAAS,SAATA,QAAUT,CAAA,EAAA;AAAA,QAAA,OAAwCma,eAAA,KAAA,IAAA,IAAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,eAAA,CAAkB;AAAEna,UAAAA,GAAAA;AAAE,SAAC,CAAA;AAAA,MAAA;AAAA,KAAA,EAExE6a,SAAA,EACL,CAAA;EAER,CAAA;AAEA,EAAA,IAAMC,YAAA,GAAe,SAAfA,YAAAA,GAAA;AAAA,IAAA,sBACFvjB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AAAIJ,MAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcoiB,YAAY,EAAA,UAAA,CAAU;KAAA,EAC/Ca,mBAAA,EAAoB,EACpBE,gBACL,CAAA;AAAA,EAAA,CAAA;AAGJ,EAAA,IAAMG,eAAe,SAAfA,eAAqB;AACvB,IAAA,IAAMC,gBAAgB,SAAhBA,gBAAsB;AAAA,MAAA,IAAAC,gBAAA;AACxB,MAAA,IAAMC,eAAA,GAAkB5B,mBAAmBe,SAAA,EAAW;AAClDc,QAAAA,OAAA,EAAS,SAAA;AACT1a,QAAAA,SAAS,SAATA,QAAUT,CAAA,EAAA;AAAA,UAAA,OAA2Cia,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,QAAA,CAAW;AAAEja,YAAAA,GAAAA;AAAE,WAAC,CAAA;AAAA,QAAA,CAAA;QACrE5I,WAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcoiB,YAAY,EAAA,UAAA,CAAA,EAAYQ,SAAA,KAAA,IAAA,IAAAA,SAAA,gBAAAY,gBAAA,GAAAZ,SAAA,CAAW1e,0DAAXsf,gBAAA,CAAkB7jB,SAAS;AAChF,OAAC,CAAA;AACD,MAAA,IAAMgkB,gBAAA,GAAmB9B,mBAAmBiB,UAAA,EAAY;AACpDrd,QAAAA,KAAA,EAAO,SAAA;AACPsG,QAAAA,OAAA,EAASgX,cAAA;AACT/Z,QAAAA,SAAS,SAATA,QAAUT,CAAA,EAAA;AAAA,UAAA,OAA2Cka,SAAA,KAAA,IAAA,IAAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAY;AAAEla,YAAAA,GAAAA;AAAE,WAAC,CAAA;AAAA,QAAA,CAAA;AACtE5I,QAAAA,WAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcoiB,YAAY,EAAA,WAAA,CAAA,EAAaU,uBAAAA,iCAAAA,WAAYnjB,SAAS;AAC3E,OAAC,CAAA;AAED,MAAA,sBACIG,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAwX,QAAA,EAAA,IAAA,EACKmM,iBACAE,gBACL,CAAA;IAER,CAAA;AAEA,IAAA,sBAAO7jB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;MAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcoiB,YAAY,EAAA,UAAA;KAAA,EAAa3Y,UAAA,CAAWuX,MAAA,EAAQ,IAAA,EAAMuC,aAAA,EAAe,CAAE,CAAA;EACjG,CAAA;EAEA,sBACIzjB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAAW,eAAA,CAAAA,eAAA,CAAA;AAAImF,IAAAA,GAAA,EAAAA;AAAA,GAAA,EAAcmd,UAAA,CAAA,EAAA,EAAA,EAAA;IAAYrjB,SAAA,EAAWiK,UAAA,CAAWwY,YAAA,KAAApiB,MAAA,CAAiBoiB,YAAY,EAAA,WAAA,CAAA,EAAaziB,SAAS;MACnG,CAAC,CAACshB,MAAA,IAAUoC,YAAA,EAAa,iBAC1BvjB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcoiB,YAAY,EAAA,QAAA;AAAA,GAAA,EAAWG,IAAA,IAAQ/iB,QAAS,CAAA,EAC1D,CAAC,CAACwhB,MAAA,IAAUsC,cACjB,CAAA;AAER,CAAC,CAAA;AAEDnB,YAAA,CAAWlY,WAAA,GAAc,YAAA;;AC3IzB,IAAM2Z,aAAA,GAAgB,SAAhBA,aAAAA,CAAiB1f,KAAA,EAA2B;AAChD,EAAA,IAAQ2f,aAAA,GAAgC3f,KAAA,CAAhC2f,aAAA;IAAeC,YAAA,GAAiB5f,KAAA,CAAjB4f,YAAA;EAEvB,IAAMC,WAAA,GAAc,CAAA,OAAOC,MAAA,iCAAA9K,OAAA,CAAA8K,MAAA,CAAA,MAAW,QAAA;AACtC,EAAA,IAAMC,eAAeF,WAAA,GACjBC,MAAA,CAAOE,WAAA,IAAeC,QAAA,CAASC,gBAAgBvE,YAAA,GAC/C,KAAA,CAAA;AACJ,EAAA,IAAMwE,cAAcN,WAAA,GAChBC,MAAA,CAAOM,UAAA,IAAcH,QAAA,CAASC,gBAAgBG,WAAA,GAC9C,KAAA,CAAA;EAEJ,IAAMC,aAAaxc,mBAAA,CAAO;AAAEyc,IAAAA,GAAG,CAAA;AAAGC,IAAAA,CAAA,EAAG;AAAE,GAAC,CAAA;EAExCC,aAAA,CAAcd,aAAA,EAAe;AAC3Be,IAAAA,OAAA,EAASd,YAAA;AACTe,IAAAA,MAAA,EAAQ,SAARA,MAAAA,CAAStc,CAAA,EAAM;AACb,MAAA,IACE,CAACwb,WAAA,IACDM,WAAA,KAAgB,UAChBJ,YAAA,KAAiB,KAAA,CAAA,IACjB,CAACJ,aAAA,CAAcnP,OAAA,EAEf;AACF,MAAA,IAAAoQ,qBAAA,GACEjB,aAAA,CAAcnP,OAAA;QADRqQ,UAAA,GAAAD,qBAAA,CAAAC,UAAA;QAAYnF,SAAA,GAAAkF,qBAAA,CAAAlF,SAAA;QAAWoF,oCAAAA;QAAaC,YAAA,GAAAH,qBAAA,CAAAG,YAAA;QAAczhB,KAAA,GAAAshB,qBAAA,CAAAthB,KAAA;AAE1D,MAAA,IAAIwhB,WAAA,GAAcX,WAAA,IAAeY,YAAA,GAAehB,YAAA,EAAc;MAC9DzgB,KAAA,CAAM0hB,MAAA,GAAS,MAAA;MACfV,UAAA,CAAW9P,OAAA,GAAU;AACnB+P,QAAAA,CAAA,EAAGlc,EAAE4c,OAAA,GAAUJ,UAAA;AACfL,QAAAA,CAAA,EAAGnc,EAAE6c,OAAA,GAAUxF;OACjB;IACF,CAAA;AACAyF,IAAAA,MAAA,EAAQ,SAARA,MAAAA,CAAS9c,CAAA,EAAM;AACb,MAAA,IACE,CAACwb,WAAA,IACDM,WAAA,KAAgB,UAChBJ,YAAA,KAAiB,KAAA,CAAA,IACjB,CAACJ,aAAA,CAAcnP,OAAA,EAEf;AACF,MAAA,IAAA4Q,sBAAA,GAA6CzB,aAAA,CAAcnP,OAAA;QAAnDsQ,WAAA,GAAAM,sBAAA,CAAAN,WAAA;QAAaC,YAAA,GAAAK,sBAAA,CAAAL,YAAA;QAAczhB,KAAA,GAAA8hB,sBAAA,CAAA9hB,KAAA;MACnC,IAAI+hB,KAAA,GAAQhd,CAAA,CAAE4c,OAAA,GAAUX,UAAA,CAAW9P,OAAA,CAAQ+P,CAAA;MAC3C,IAAIe,KAAA,GAAQjd,CAAA,CAAE6c,OAAA,GAAUZ,UAAA,CAAW9P,OAAA,CAAQgQ,CAAA;AAE3C,MAAA,IAAIa,KAAA,GAAQ,GAAGA,KAAA,GAAQ,CAAA;AACvB,MAAA,IAAIC,KAAA,GAAQ,GAAGA,KAAA,GAAQ,CAAA;AACvB,MAAA,IAAInB,WAAA,GAAcW,cAAcO,KAAA,GAAQ,CAAA,EACtCA,KAAA,GAAQlB,WAAA,GAAcW,WAAA;AACxB,MAAA,IAAIf,YAAA,GAAegB,eAAeO,KAAA,GAAQ,CAAA,EACxCA,KAAA,GAAQvB,YAAA,GAAegB,YAAA;MACzBzhB,KAAA,CAAMwR,QAAA,GAAW,UAAA;AACjBxR,MAAAA,KAAA,CAAMiiB,IAAA,GAAA,EAAA,CAAAzlB,MAAA,CAAUulB,KAAK,EAAA,IAAA,CAAA;AACrB/hB,MAAAA,KAAA,CAAMjB,GAAA,GAAA,EAAA,CAAAvC,MAAA,CAASwlB,KAAK,EAAA,IAAA,CAAA;IACtB,CAAA;AACAE,IAAAA,MAAM,SAANA,OAAY;AACV,MAAA,IAAI7B,aAAA,CAAcnP,OAAA,EAASmP,aAAA,CAAcnP,OAAA,CAAQlR,MAAM0hB,MAAA,GAAS,SAAA;AAClE,IAAA;AACF,GAAC,CAAA;AACH,CAAA;;AChEA,IAAMS,SAAA,sBAAoDC,GAAA,EAAI;AAE9D,IAAMC,YAAA,GAAe,SAAfA,YAAAA,CACJ9J,OAAA,EACA+J,MAAA,EACG;AACHxX,EAAAA,sBAAA,CAAU,YAAM;AACd,IAAA,IAAIyN,OAAA,EAAS;AAEX,MAAA,IAAI+J,mBAAAA,qBAAAA,OAAQpR,OAAA,EAAS;AAAA,QAAA,IAAAqR,eAAA;AACnBJ,QAAAA,SAAA,CAAUK,IAAIF,MAAM,CAAA;AACpBA,QAAAA,MAAA,KAAA,IAAA,IAAAA,MAAA,KAAA,KAAA,CAAA,IAAA,CAAAC,eAAA,GAAAD,MAAA,CAAQpR,mDAARqR,eAAA,CAAiBE,KAAA,EAAM;AACzB,MAAA;IACF,CAAA,MAAA,IAAWN,SAAA,CAAUxc,GAAA,CAAI2c,MAAM,CAAA,EAAG;AAAA,MAAA,IAAAI,WAAA;MAEhCP,SAAA,CAAA,QAAA,EAAiBG,MAAM,CAAA;AACvB,MAAA,IAAMK,UAAA,GAAA/U,kBAAA,CAAiBuU,SAAS,CAAA;MAEhC,CAAAO,WAAA,GAAAC,UAAA,CAAWA,UAAA,CAAWpd,MAAA,GAAS,CAAC,CAAA,MAAA,IAAA,IAAAmd,WAAA,gBAAAA,WAAA,GAAhCA,WAAA,CAAmCxR,+CAAnCwR,WAAA,CAA4CD,KAAA,EAAM;AACpD,IAAA;AACA,IAAA,OAAO,YAAM;AAEXN,MAAAA,SAAA,CAAUzV,OAAA,CAAQ,UAACtH,IAAA,EAAS;QAC1B,IAAI,CAAAA,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAM8L,aAAY,IAAA,EAAM;UAC1BiR,SAAA,CAAA,QAAA,EAAiB/c,IAAI,CAAA;AACvB,QAAA;AACF,MAAA,CAAC,CAAA;IACH,CAAA;AACF,EAAA,CAAA,EAAG,CAACmT,OAAA,EAAS+J,MAAM,CAAC,CAAA;AACtB,CAAA;;AC5BA,SAAwBM,iBAAAA,CACtBrK,SACA8H,aAAA,EACA;AACA,EAAA,IAAMwC,WAAA,GAAcre,oBAAiB,IAAI,CAAA;AAEzC,EAAA,IAAMse,gBAAA,GAAmB,SAAnBA,gBAAAA,CAAoB/d,CAAA,EAAkB;AAC1C,IAAA,IAAI8d,WAAA,EAAa;MACfA,WAAA,CAAY3R,OAAA,GAAU;QACpB+P,GAAGlc,CAAA,CAAE4c,OAAA;QACLT,GAAGnc,CAAA,CAAE6c;OACP;AACAtF,MAAAA,UAAA,CAAW,YAAM;QACfuG,WAAA,CAAY3R,OAAA,GAAU,IAAA;MACxB,GAAG,GAAG,CAAA;AACR,IAAA;EACF,CAAA;AAEA6R,EAAAA,yBAAA,CAA0B,YAAM;IAC9BpC,QAAA,CAASvP,gBAAA,CAAiB,OAAA,EAAS0R,gBAAA,EAAkB,IAAI,CAAA;AACzD,IAAA,OAAO,YAAM;MACXnC,QAAA,CAASrP,mBAAA,CAAoB,OAAA,EAASwR,gBAAA,EAAkB,IAAI,CAAA;IAC9D,CAAA;EACF,CAAA,EAAG,EAAE,CAAA;AAELhY,EAAAA,sBAAA,CAAU,YAAM;IACd,IAAI,CAACyN,OAAA,EAAS;AAEd,IAAA,IAAIsK,WAAA,CAAY3R,OAAA,IAAWmP,aAAA,CAAcnP,OAAA,EAAS;AAEhDmP,MAAAA,aAAA,CAAcnP,QAAQlR,KAAA,CAAMgjB,eAAA,GAAA,EAAA,CAAAxmB,MAAA,CAAqBqmB,WAAA,CAAY3R,QAAQ+P,CAAA,GAAIZ,aAAA,CAAcnP,OAAA,CAAQqQ,UAAU,EAAA,KAAA,CAAA,CAAA/kB,MAAA,CACvGqmB,WAAA,CAAY3R,OAAA,CAAQgQ,CAAA,GAAIb,aAAA,CAAcnP,QAAQkL,SAChD,EAAA,IAAA,CAAA;AACF,IAAA;AACF,EAAA,CAAA,EAAG,CAAC7D,OAAA,EAAS8H,aAAa,CAAC,CAAA;AAC7B;;AClCA,IAAI/a,GAAA,GAAM,CAAA;AAEV,SAAwB2d,kBAAAA,CAAAhnB,IAAA,EAKG;AAAA,EAAA,IAJzBgiB,oBAAA,GAAAhiB,IAAA,CAAAgiB,oBAAA;IACA1F,OAAA,GAAAtc,IAAA,CAAAsc,OAAA;IACAwF,IAAA,GAAA9hB,IAAA,CAAA8hB,IAAA;IACAG,qBAAA,GAAAjiB,IAAA,CAAAiiB,qBAAA;AAEA,EAAA,IAAMgF,YAAA,GAAe1e,oBAAyB,IAAI,CAAA;AAClD,EAAA,IAAM2e,QAAA,GAAW3e,oBAA6C,IAAI,CAAA;AAElE,EAAA,IAAM4e,cAAA,GAAiBxS,yBAAY,YAAM;IACvC,IAAIuS,SAASjS,OAAA,EAAS;AACpBmS,MAAAA,YAAA,CAAaF,SAASjS,OAAO,CAAA;AAC/B,IAAA;AACAiS,IAAAA,QAAA,CAASjS,OAAA,GAAUoL,WAAW,YAAM;MAAA,IAAAgH,qBAAA,EAAAC,sBAAA;AAClC,MAAA,CAAAD,qBAAA,GAAAJ,YAAA,CAAahS,OAAA,MAAA,IAAA,IAAAoS,qBAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,qBAAA,GAAbA,qBAAA,CAAsBE,UAAA,cAAAF,qBAAA,KAAA,KAAA,CAAA,IAAA,CAAAC,sBAAA,GAAtBD,qBAAA,CAAkCG,WAAA,MAAA,IAAA,IAAAF,sBAAA,KAAA,KAAA,CAAA,IAAlCA,sBAAA,CAAAtY,IAAA,CAAAqY,qBAAA,EAAgDJ,YAAA,CAAahS,OAAO,CAAA;IACtE,GAAG,GAAG,CAAA;EACR,CAAA,EAAG,EAAE,CAAA;AAELwS,EAAAA,yBAAA,CAAgB,YAAM;AACpB,IAAA,IAAI,OAAO/C,QAAA,KAAa,WAAA,IAAe,CAACpI,OAAA,EAAS;AACjD,IAAA,IAAI,CAAC2K,aAAahS,OAAA,EAAS;MACzBgS,YAAA,CAAahS,OAAA,GAAUyP,QAAA,CAASpkB,aAAA,CAAc,OAAO,CAAA;AACvD,IAAA;AACA,IAAA,IAAMonB,YAAA,GACJhD,QAAA,CAASC,eAAA,CAAgBvQ,YAAA,GACzBsQ,SAASC,eAAA,CAAgBvE,YAAA;IAC3B,IAAMuH,cAAA,GAAiBD,YAAA,GAAeE,iBAAA,EAAkB,GAAI,CAAA;IAE5DX,YAAA,CAAahS,OAAA,CAAQ4S,OAAA,CAAQC,EAAA,GAAA,YAAA,CAAAvnB,MAAA,CAAkB,qBAAKwnB,IAAA,EAAM,EAAA,GAAA,CAAA,CAAAxnB,MAAA,CAAK8I,GAAA,IAAO,CAAE,CAAA;IACxE4d,YAAA,CAAahS,QAAQ+S,SAAA,mFAAAznB,MAAA,CAGIonB,cAAc,EAAA,qBAAA,CAAA;AAIvC,IAAA,OAAOR,cAAA;AACT,EAAA,CAAA,EAAG,CAAC7K,OAAA,EAAS6K,cAAc,CAAC,CAAA;AAE5BM,EAAAA,yBAAA,CAAgB,YAAM;AACpB,IAAA,IAAI,OAAO/C,aAAa,WAAA,EAAa;IACrC,IAAI5C,IAAA,KAAS,OAAA,IAAW,CAACE,oBAAA,IAAwBC,qBAAA,EAC/C;AAEF,IAAA,IAAI3F,OAAA,EAAS;AACX,MAAA,IAAI2K,aAAahS,OAAA,EAASyP,QAAA,CAASuD,IAAA,CAAKC,WAAA,CAAYjB,aAAahS,OAAO,CAAA;AAC1E,IAAA,CAAA,MAAO;AACLkS,MAAAA,cAAA,EAAe;AACjB,IAAA;AACF,EAAA,CAAA,EAAG,CACDnF,oBAAA,EACA1F,OAAA,EACAwF,IAAA,EACAG,qBAAA,EACAkF,cAAA,CACD,CAAA;AACH;;AC9DO,SAASgB,eAAepa,KAAA,EAAwB;EACrD,IAAI,OAAOA,KAAA,KAAU,QAAA,EAAU,OAAA,EAAA,CAAAxN,MAAA,CAAUwN,KAAK,EAAA,IAAA,CAAA;AAC9C,EAAA,OAAOA,KAAA;AACT;;;;;;ACqBA,IAAMqa,QAAA,gBAASjiB,uBAAA,CAAwC,UAACyT,aAAA,EAAexT,GAAA,EAAQ;AAC3E,EAAA,IAAM3B,KAAA,GAAQ0C,eAAA,CAA6ByS,aAAA,EAAe6H,kBAAkB,CAAA;AAC5E,EAAA,IAAQ1hB,QAAA,GAA2B0E,KAAA,CAA3B1E,QAAA;AAAaqL,IAAAA,SAAA,GAAArK,wBAAA,CAAc0D,KAAA,EAAAzD,SAAA,CAAA;AACnC,EAAA,IAAAqF,UAAA,GAAwBC,SAAA,EAAU;IAA1BC,WAAA,GAAAF,UAAA,CAAAE,WAAA;AAER,EAAA,IAAMoc,YAAA,GAAA,EAAA,CAAApiB,MAAA,CAAkBgG,WAAW,EAAA,SAAA,CAAA;AACnC,EAAA,IAAM8hB,OAAA,GAAU9f,oBAAoB,IAAI,CAAA;AACxC,EAAA,IAAM+f,OAAA,GAAU/f,oBAAoB,IAAI,CAAA;AACxC,EAAA,IAAMggB,eAAA,GAAkBhgB,oBAAO,KAAK,CAAA;AACpC,EAAA,IAAM6b,aAAA,GAAgB7b,oBAAuB,IAAI,CAAA;AACjD,EAAA,IAAMigB,cAAA,GAAiBjgB,oBAAO,IAAI,CAAA;AAClC,EAAA,IAAMkgB,SAAA,GAAYlgB,oBAAO,IAAI,CAAA;AAC7B,EAAA,IAAAmgB,YAAA,GAA0BC,WAAA,CAAA1nB,eAAA,CAAA;AAA2B2nB,MAAAA,QAAA,EAAU;KAAA,EAAUxd,SAAA,CAAW,CAAA;IAAAyd,aAAA,GAAArlB,cAAA,CAAAklB,YAAA,EAAA,CAAA,CAAA;AAA7EI,IAAAA,KAAA,GAAAD,aAAA,CAAA,CAAA,CAAA;AAAOE,IAAAA,QAAQ,GAAAF,aAAA,CAAA,CAAA,CAAA;AAGtB,EAAA,IACI3oB,SAAA,GA8BA4oB,KAAA,CA9BA5oB,SAAA;IACA8oB,eAAA,GA6BAF,KAAA,CA7BAE,eAAA;IACAjlB,KAAA,GA4BA+kB,KAAA,CA5BA/kB,KAAA;IACAyR,KAAA,GA2BAsT,KAAA,CA3BAtT,KAAA;IACAsM,IAAA,GA0BAgH,KAAA,CA1BAhH,IAAA;IACAmH,MAAA,GAyBAH,KAAA,CAzBAG,MAAA;IACA3M,OAAA,GAwBAwM,KAAA,CAxBAxM,OAAA;IACA4M,MAAA,GAuBAJ,KAAA,CAvBAI,MAAA;IACAC,YAAA,GAsBAL,KAAA,CAtBAK,YAAA;IACAC,aAAA,GAqBAN,KAAA,CArBAM,aAAA;IACAC,QAAA,GAoBAP,KAAA,CApBAO,QAAA;IACAtG,QAAA,GAmBA+F,KAAA,CAnBA/F,QAAA;IACAC,SAAA,GAkBA8F,KAAA,CAlBA9F,SAAA;IACAxb,OAAA,GAiBAshB,KAAA,CAjBAthB,OAAA;IACAE,QAAA,GAgBAohB,KAAA,CAhBAphB,QAAA;IACAkhB,QAAA,GAeAE,KAAA,CAfAF,QAAA;IACA/G,SAAA,GAcAiH,KAAA,CAdAjH,SAAA;IACAyH,cAAA,GAaAR,KAAA,CAbAQ,cAAA;IACAC,YAAA,GAYAT,KAAA,CAZAS,YAAA;IACA7H,iBAAA,GAWAoH,KAAA,CAXApH,iBAAA;IACA8H,cAAA,GAUAV,KAAA,CAVAU,cAAA;IACAtH,WAAA,GASA4G,KAAA,CATA5G,WAAA;IACAD,qBAAA,GAQA6G,KAAA,CARA7G,qBAAA;IACAN,mBAAA,GAOAmH,KAAA,CAPAnH,mBAAA;IACAC,cAAA,GAMAkH,KAAA,CANAlH,cAAA;IACAI,oBAAA,GAKA8G,KAAA,CALA9G,oBAAA;IACAiB,eAAA,GAIA6F,KAAA,CAJA7F,eAAA;IACAwG,WAAA,GAGAX,KAAA,CAHAW,WAAA;IACAtH,IAAA,GAEA2G,KAAA,CAFA3G,IAAA;AACGuH,IAAAA,SAAA,GAAA3oB,wBAAA,CACH+nB,KAAA,EAAAtR,UAAA,CAAA;AAEJ,EAAA,IAAMmS,YAAA,GAAeC,SAAA,CAAU,QAAA,EAAUV,MAAM,CAAA;AAE/CW,EAAAA,kBAAA,CAAa;AAAE7H,IAAAA,oBAAA,EAAAA,oBAAA;AAAsB1F,IAAAA,OAAA,EAAAA,OAAA;AAASwF,IAAAA,IAAA,EAAAA,IAAA;AAAMG,IAAAA,uBAAAA;AAAsB,GAAC,CAAA;AAC3EmE,EAAAA,YAAA,CAAa9J,SAAS+L,OAAO,CAAA;AAC7B1B,EAAAA,iBAAA,CAAkBrK,SAAS8H,aAAa,CAAA;AACxCD,EAAAA,aAAA,CAAc;AACVC,IAAAA,aAAA,EAAAA,aAAA;AACAC,IAAAA,YAAA,EAAcxC,aAAaC,IAAA,KAAS;AACxC,GAAC,CAAA;AAEDjT,EAAAA,sBAAA,CAAU,YAAM;AACZ,IAAA,IAAI+Z,QAAA,EAAU;AACV,MAAA;AACJ,IAAA;IAEAG,QAAA,CAAS,UAACe,SAAA,EAAA;AAAA,MAAA,OAAA7oB,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAoB6oB,SAAA,GAAcrlB;KAAQ,CAAA;EACxD,CAAA,EAAG,CAACA,KAAA,EAAOskB,QAAA,EAAUH,QAAQ,CAAC,CAAA;EAE9BmB,gCAAA,CAAoB3jB,KAAK,YAAA;IAAA,OAAO;MAC5BuY,IAAA,EAAA,SAAAA,IAAAA,GAAO;AACHoK,QAAAA,QAAA,CAAS;AAAEzM,UAAAA,OAAA,EAAS;AAAK,SAAC,CAAA;MAC9B,CAAA;MACA0N,IAAA,EAAA,SAAAA,IAAAA,GAAO;AACHjB,QAAAA,QAAA,CAAS;AAAEzM,UAAAA,OAAA,EAAS;AAAM,SAAC,CAAA;MAC/B,CAAA;AACA2N,MAAAA,iBAAA,EAAmB,SAAnBA,iBAAAA,CAAoB3d,OAAA,EAAqB;AACrCyc,QAAAA,QAAA,CAAS;AAAEzF,UAAAA,cAAA,EAAgBhX;AAAQ,SAAC,CAAA;MACxC,CAAA;MACA4d,OAAA,EAAA,SAAAA,OAAAA,GAAU;AACNnB,QAAAA,QAAA,CAAS;AAAEzM,UAAAA,OAAA,EAAS,KAAA;AAAOsF,UAAAA,cAAA,EAAgB;AAAK,SAAC,CAAA;MACrD,CAAA;AACAuI,MAAAA,iBAAAA,OAAOC,UAAA,EAAY;QACfrB,QAAA,CAAS,UAACe,SAAA,EAAA;AAAA,UAAA,OAAA7oB,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAoB6oB,SAAA,GAAcM;SAAa,CAAA;AAC7D,MAAA;KACJ;AAAA,EAAA,CAAE,CAAA;AAGF,EAAA,IAAI3lB,KAAA,CAAMqd,SAAS,QAAA,EAAU;AACzBjY,IAAAA,OAAA,CAAQlB,KAAA,CAAM,UAAU,wDAAwD,CAAA;IAChF,sBAAOtI,KAAA,CAAAC,aAAA,CAACoiB,YAAA,EAAAzhB,eAAA,CAAA,EAAA,EAAewD,KAAA,CAAO,CAAA;AAClC,EAAA;AAEA,EAAA,IAAM4lB,WAAA,GAAc,SAAdA,WAAAA,CAAevhB,CAAA,EAAwC;IACzD,IAAIoZ,eAAgBP,mBAAA,EAAsB;MAEtC,IAAI4G,gBAAgBtT,OAAA,EAAS;QACzBsT,eAAA,CAAgBtT,OAAA,GAAU,KAAA;MAC9B,CAAA,MAAA,IAAWnM,CAAA,CAAE8L,MAAA,KAAW4T,cAAA,CAAevT,OAAA,EAAS;AAC5CqU,QAAAA,cAAA,KAAA,IAAA,IAAAA,cAAA,KAAA,KAAA,CAAA,IAAAA,cAAA,CAAiB;AAAExgB,UAAAA,GAAAA;AAAE,SAAC,CAAA;AACtBtB,QAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAU;AAAEsB,UAAAA,CAAA,EAAAA,CAAA;AAAGmO,UAAAA,OAAA,EAAS;AAAU,SAAC,CAAA;AACvC,MAAA;AACJ,IAAA;EACJ,CAAA;AAEA,EAAA,IAAMqT,YAAA,GAAe,SAAfA,YAAAA,CAAAtqB,IAAA,EAA0B;AAAA,IAAA,IAAR8I,CAAA,GAAA9I,IAAA,CAAA8I,CAAA;AACpBia,IAAAA,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAW;AAAEja,MAAAA,GAAAA;AAAE,KAAC,CAAA;AAChBtB,IAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAU;AAAEsB,MAAAA,CAAA,EAAAA,CAAA;AAAGmO,MAAAA,OAAA,EAAS;AAAS,KAAC,CAAA;EACtC,CAAA;AAEA,EAAA,IAAMpO,WAAA,GAAc,SAAdA,WAAAA,CAAAzF,KAAA,EAAyB;AAAA,IAAA,IAAR0F,CAAA,GAAA1F,KAAA,CAAA0F,CAAA;AACnBma,IAAAA,eAAA,KAAA,IAAA,IAAAA,eAAA,KAAA,KAAA,CAAA,IAAAA,eAAA,CAAkB;AAAEna,MAAAA,GAAAA;AAAE,KAAC,CAAA;AACvBtB,IAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAU;AAAEsB,MAAAA,CAAA,EAAAA,CAAA;AAAGmO,MAAAA,OAAA,EAAS;AAAY,KAAC,CAAA;EACzC,CAAA;AAEA,EAAA,IAAMsT,aAAA,GAAgB,SAAhBA,aAAAA,CAAiBzhB,CAAA,EAA2C;AAE9D,IAAA,IAAIA,CAAA,CAAEO,QAAQ,QAAA,EAAU;MACpBP,CAAA,CAAEgH,eAAA,EAAgB;AAClByZ,MAAAA,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,IAAAA,YAAA,CAAe;AAAEzgB,QAAAA,GAAAA;AAAE,OAAC,CAAA;AACpB,MAAA,IAAI4Y,iBAAA,EAAmB;AACnBla,QAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,IAAAA,OAAA,CAAU;AAAEsB,UAAAA,CAAA,EAAAA,CAAA;AAAGmO,UAAAA,OAAA,EAAS;AAAM,SAAC,CAAA;AACnC,MAAA;AACJ,IAAA,WAAWnO,CAAA,CAAEO,GAAA,KAAQ,OAAA,IAAWP,CAAA,CAAEO,QAAQ,aAAA,EAAe;MAErDP,CAAA,CAAEgH,eAAA,EAAgB;AAClB0Z,MAAAA,cAAA,KAAkBxG,SAAA,KAAA,IAAA,IAAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAY;AAAEla,QAAAA,CAAA,EAAAA;AAAE,OAAC,CAAA,CAAA;AACvC,IAAA;EACJ,CAAA;AAEA,EAAA,IAAM0hB,iBAAiB,SAAjBA,iBAAuB;AACzB9iB,IAAAA,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,EAAW;AAEX,IAAA,IAAI,CAAC2gB,QAAQpT,OAAA,EAAS;AACtBoT,IAAAA,OAAA,CAAQpT,OAAA,CAAQlR,MAAM0mB,OAAA,GAAU,MAAA;EACpC,CAAA;AAEA,EAAA,IAAMC,iBAAiB,SAAjBA,iBAAuB;AACzB,IAAA,IAAI,CAACrC,QAAQpT,OAAA,EAAS;AACtBkU,IAAAA,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,IAAAA,YAAA,EAAe;AACfd,IAAAA,OAAA,CAAQpT,OAAA,CAAQlR,MAAM0mB,OAAA,GAAU,OAAA;EACpC,CAAA;AAEA,EAAA,IAAME,sBAAsB,SAAtBA,sBAA4B;AAC9B,IAAA,IAAI,CAACvG,cAAcnP,OAAA,EAAS;AAC5BmP,IAAAA,aAAA,CAAcnP,OAAA,CAAQlR,MAAM0mB,OAAA,GAAU,OAAA;EAC1C,CAAA;AAEA,EAAA,IAAMG,sBAAsB,SAAtBA,sBAA4B;AAC9B,IAAA,IAAI,CAACxG,cAAcnP,OAAA,EAAS;AAC5BmP,IAAAA,aAAA,CAAcnP,OAAA,CAAQlR,MAAM0mB,OAAA,GAAU,MAAA;EAC1C,CAAA;AAEA,EAAA,IAAMI,aAAa,SAAbA,aAAmB;AACrB,IAAA,IAAI/I,IAAA,KAAS,SAAS,OAAO,IAAA;IAE7B,OAAOI,WAAA,kBACH7hB,KAAA,CAAAC,aAAA,CAAC2J,aAAA,EAAA;AACG,MAAA,IAAA,EAAIqS,OAAA;AACJwO,MAAAA,MAAA,EAAM,IAAA;AACNzgB,MAAAA,OAAA,EAAS,GAAA;AACTF,MAAAA,UAAA,EAAA,EAAA,CAAA5J,MAAA,CAAeoiB,YAAY,EAAA,OAAA,CAAA;AAC3BoI,MAAAA,YAAA,EAAY,IAAA;AACZ7gB,MAAAA,aAAA,EAAa,IAAA;AACb5B,MAAAA,OAAA,EAASggB;AAAA,KAAA,qCAER,KAAA,EAAA;AAAIliB,MAAAA,GAAA,EAAKkiB;MAASpoB,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcoiB,YAAY,EAAA,QAAA;KAAU,CAC3D,CAAA,GACA,IAAA;EACR,CAAA;AACA,EAAA,sBACItiB,KAAA,CAAAC,aAAA,CAAC2J,aAAA,EAAA;AACG,IAAA,IAAA,EAAIqS,OAAA;AACJwO,IAAAA,MAAA,EAAM,IAAA;AACNzgB,IAAAA,OAAA,EAAS,GAAA;IACT0gB,YAAA,EAAcC,WAAA,CAAYvB,WAAW,CAAA,GAAItH,OAAO,CAACsH,WAAA;AACjDvf,IAAAA,aAAA,EAAe0X,cAAA;AACftZ,IAAAA,OAAA,EAASmgB,SAAA;AACT1N,IAAAA,OAAA,EAAS2P,cAAA;AACTO,IAAAA,SAAA,EAAW5B,QAAA;IACX6B,MAAA,EAAQ,SAARA,MAAAA,GAAA;AAAA,MAAA,OAAc9B,aAAA,KAAA,IAAA,IAAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,aAAA,EAAgB;AAAA,IAAA,CAAA;AAC9B9e,IAAAA,QAAA,EAAUkgB;AAAA,GAAA,iBAEVnqB,KAAA,CAAAC,aAAA,CAAC6qB,MAAA,EAAA;AAAOjC,IAAAA,MAAA,EAAQS,YAAA;AAAcvjB,IAAAA,KAAKqiB;AAAA,GAAA,iBAC/BpoB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACG8F,IAAAA,GAAA,EAAKiiB,OAAA;AACLnoB,IAAAA,SAAA,EAAWiK,UAAA,CAAWjK,SAAA,KAAAK,MAAA,CAAcoiB,YAAY,EAAA,OAAA,CAAA,EAAA,EAAA,CAAApiB,MAAA,CAAYoiB,YAAY,EAAA,IAAA,CAAA,CAAApiB,MAAA,CAAKuhB,IAAI,CAAA,EAAAvU,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAhN,MAAA,CACzEoiB,YAAY,EAAA,cAAA,CAAA,EAAiB,CAACV,qBAAA,CAAA,EAAA,EAAA,CAAA1hB,MAAA,CAC9BoiB,YAAY,EAAA,iBAAA,CAAA,EAAoBV,qBAAA,CACvC,CAAA;AACDle,IAAAA,KAAA,EAAO;AAAEklB,MAAAA,MAAA,EAAAA,MAAA;AAAQwB,MAAAA,OAAA,EAAS;KAAO;AACjCW,IAAAA,SAAA,EAAWb,aAAA;AACXc,IAAAA,QAAA,EAAU;GAAA,EAETR,UAAA,EAAW,iBACZxqB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;IAAIJ,SAAA,EAAA,EAAA,CAAAK,MAAA,CAAcoiB,YAAY,EAAA,QAAA;AAAA,GAAA,iBAC3BtiB,KAAA,CAAAC,aAAA,CAAC,KAAA,EAAA;AACG8F,IAAAA,GAAA,EAAKoiB,cAAA;AACLtoB,IAAAA,SAAA,EAAWiK,UAAA,CAAA,EAAA,CAAA5J,MAAA,CAAcoiB,YAAY,iBAAApV,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAhN,MAAA,CAC7BoiB,YAAY,EAAA,OAAA,CAAA,EAAU,CAAC,CAACle,KAAA,CAAM3B,GAAA,IAAO2B,KAAA,CAAMsd,SAAA,KAAc,KAAA,MAAAxhB,MAAA,CACzDoiB,YAAY,EAAA,UAAA,CAAA,EAAale,KAAA,CAAMsd,SAAA,KAAc,QAAA,IAAY,CAACtd,KAAA,CAAM3B,GAAA,CACvE,CAAA;AACDiB,IAAAA,OAAO;AAAEQ,MAAAA,UAAA,EAAY4jB,cAAA,CAAe1jB,KAAA,CAAM3B,GAAG;KAAE;AAC/CyG,IAAAA,OAAA,EAAS8gB;AAAA,GAAA,iBAEThqB,KAAA,CAAAC,aAAA,CAAC2J,aAAA,EAAA;AACG,IAAA,IAAA,EAAIqS,OAAA;AACJwO,IAAAA,MAAA,EAAM,IAAA;AACNzgB,IAAAA,OAAA,EAAS,GAAA;AACTF,IAAAA,UAAA,EAAA,EAAA,CAAA5J,MAAA,CAAeoiB,YAAY,EAAA,OAAA,CAAA;AAC3Bra,IAAAA,OAAA,EAAS8b,aAAA;AACTrJ,IAAAA,OAAA,EAAS4P,mBAAA;AACTrgB,IAAAA,QAAA,EAAUsgB;GAAA,iBAEVvqB,KAAA,CAAAC,aAAA,CAACoiB,YAAA,EAAAzhB,eAAA,CAAAA,eAAA,CAAA;AACGmF,IAAAA,GAAA,EAAKge;AAAA,GAAA,EACDsF,SAAA,CAAA,EAAA,EAAA,EAAA;AACJxpB,IAAAA,SAAA,EAAW8oB,eAAA;AACXjlB,IAAAA,KAAA,EAAA9C,eAAA,CAAAA,eAAA,KAAY8C,KAAA,CAAA,EAAA,EAAA,EAAA;MAAOyR,OAAO2S,cAAA,CAAe3S,KAAA,KAASzR,KAAA,KAAA,IAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAOyR,KAAK,CAAA;KAAA,CAAE;AAChEwN,IAAAA,SAAA,EAAAA,SAAA;AACAD,IAAAA,QAAA,EAAUuH,YAAA;AACVrH,IAAAA,eAAA,EAAiBpa;AAAA,GAAA,CAAA,EAEhB9I,QACL,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CAAA;AAER,CAAC,CAAA;AAEDqoB,QAAA,CAAO5d,WAAA,GAAc,QAAA;;;;ACjPrB,IAAM8gB,YAAA,GAAiC,SAAjCA,YAAAA,CAAkC7mB,KAAA,EAAyC;AAC7E,EAAA,IAAM8mB,SAAA,gBAAYlrB,MAAMmrB,SAAA,EAA0B;AAClD,EAAA,IAAMhb,OAAA,GAAAvP,aAAA,CAAA,EAAA,EAAewD,KAAA,CAAM;AAC3B,EAAA,IAAAgnB,gBAAA,GAA2Bjb,OAAA,CAAnB8L,OAAA;AAAAA,IAAAA,OAAA,GAAAmP,gBAAA,KAAA,KAAA,CAAA,GAAU,IAAA,GAAAA,gBAAA;AAElB,EAAA,IAAMC,QAAA,GAAWhH,SAASiH,sBAAA,EAAuB;AAEjD,EAAA,IAAMC,aAAA,GAAgBC,eAAeC,eAAA,EAAgB;AACrDC,EAAAA,MAAA,gBAAO1rB,KAAA,CAAAC,aAAA,CAAC0rB,eAAA,EAAA;AAAgBC,IAAAA,YAAA,EAAcL;AAAA,GAAA,qCAAgBM,QAAA,EAAAjrB,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAqBuP,OAAA,CAAA,EAAA,EAAA,EAAA;AAAyB8L,IAAAA,OAAA,EAAAA,OAAA;AAAkBlW,IAAAA,KAAKmlB,SAAA;AAAW3C,IAAAA,QAAA,EAAQ;AAAA,GAAA,CAAC,CAAE,GAAoB8C,QAAQ,CAAA;AAAG,EAAA,IAAMS,SAAA,GAAYC,SAAA,CAAU5b,OAAA,CAAQ0Y,MAAM,CAAA;AAE1N,EAAA,IAAIiD,SAAA,EAAW;AACXA,IAAAA,SAAA,CAAUjE,YAAYwD,QAAQ,CAAA;AAClC,EAAA,CAAA,MAAO;AACH7hB,IAAAA,OAAA,CAAQlB,KAAA,CAAM,UAAU,qBAAqB,CAAA;AACjD,EAAA;AAEA,EAAA,IAAM0jB,UAAA,GAA6B;AAC/B1N,IAAAA,MAAM,SAANA,OAAY;AACR2N,MAAAA,qBAAA,CAAsB,YAAM;AAAA,QAAA,IAAAC,kBAAA;QACxBJ,SAAA,KAAA,IAAA,IAAAA,SAAA,KAAA,KAAA,CAAA,IAAAA,SAAA,CAAWjE,YAAYwD,QAAQ,CAAA;AAC/B,QAAA,CAAAa,kBAAA,GAAAhB,SAAA,CAAUtW,sDAAVsX,kBAAA,CAAmB5N,IAAA,EAAK;AAC5B,MAAA,CAAC,CAAA;IACL,CAAA;AACAqL,IAAAA,MAAM,SAANA,OAAY;AACRsC,MAAAA,qBAAA,CAAsB,YAAM;AAAA,QAAA,IAAAE,mBAAA;AACxB,QAAA,CAAAA,mBAAA,GAAAjB,SAAA,CAAUtW,uDAAVuX,mBAAA,CAAmBtC,OAAA,EAAQ;AAC/B,MAAA,CAAC,CAAA;IACL,CAAA;AACAD,IAAAA,iBAAA,EAAmB,SAAnBA,iBAAAA,CAAoB3d,OAAA,EAAqB;AACrCggB,MAAAA,qBAAA,CAAsB,YAAM;AAAA,QAAA,IAAAG,mBAAA;AACxB,QAAA,CAAAA,mBAAA,GAAAlB,SAAA,CAAUtW,OAAA,MAAA,IAAA,IAAAwX,mBAAA,KAAA,KAAA,CAAA,IAAVA,mBAAA,CAAmBxC,kBAAkB3d,OAAO,CAAA;AAChD,MAAA,CAAC,CAAA;IACL,CAAA;AACA6d,IAAAA,MAAA,EAAQ,SAARA,MAAAA,CAASuC,aAAA,EAAiC;AACtCJ,MAAAA,qBAAA,CAAsB,YAAM;AAAA,QAAA,IAAAK,mBAAA;AACxB,QAAA,CAAAA,mBAAA,GAAApB,SAAA,CAAUtW,OAAA,MAAA,IAAA,IAAA0X,mBAAA,KAAA,KAAA,CAAA,IAAVA,mBAAA,CAAmBxC,OAAOuC,aAAa,CAAA;AAC3C,MAAA,CAAC,CAAA;IACL,CAAA;AACAxC,IAAAA,SAAS,SAATA,UAAe;AACXoC,MAAAA,qBAAA,CAAsB,YAAM;AAAA,QAAA,IAAAM,mBAAA;AACxB,QAAA,CAAAA,mBAAA,GAAArB,SAAA,CAAUtW,uDAAV2X,mBAAA,CAAmB1C,OAAA,EAAQ;AAC/B,MAAA,CAAC,CAAA;AACL,IAAA;GACJ;AACA,EAAA,OAAOmC,UAAA;AACX,CAAA;AAEA,IAAMQ,OAAA,GAA+B,SAA/BA,OAAAA,CAAgCpoB,KAAA,EAAA;EAAA,OAAyB6mB,YAAA,CAAa7mB,KAAK,CAAA;AAAA,CAAA;AAEjF,IAAMqoB,KAAA,GAA2B,SAA3BA,KAAAA,CAA4BroB,KAAA,EAA6C;AAC3E,EAAA,IAAM+L,OAAA,GAAAvP,aAAA,CAAA,EAAA,EAAewD,KAAA,CAAM;EAC3B+L,OAAA,CAAQ2S,SAAA,GAAY,IAAA;EACpB,OAAOmI,aAAa9a,OAAO,CAAA;AAC/B,CAAA;AAEA8a,YAAA,CAAawB,KAAA,GAAQA,KAAA;AACrBxB,YAAA,CAAauB,OAAA,GAAUA,OAAA;AAEhB,IAAME,cAAA,GAAezB,YAAA;;ACjErB,IAAMlD,MAAA,GAAS4E;AACf,IAAMtK,UAAA,GAAauK;AAEnB,IAAM5G,MAAA,GAAS6G;AACf,IAAMH,YAAA,GAAeG;;;;"}