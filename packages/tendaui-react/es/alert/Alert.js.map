{"version":3,"file":"Alert.js","sources":["../../../components/alert/defaultProps.ts","../../../components/alert/Alert.tsx"],"sourcesContent":["import { TdAlertProps } from './type';\r\n\r\nexport const alertDefaultProps: TdAlertProps = { closeBtn: false, maxLine: 0, theme: 'info' };\r\n","import React, { forwardRef, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport {\r\n  IconClose as TdCloseIcon,\r\n  IconInfoCircle as TdInfoCircleFilledIcon,\r\n  IconCheckCircleStroked as TdCheckCircleFilledIcon,\r\n  IconAlertTriangle as TdErrorCircleFilledIcon\r\n} from 'tendaui-react-icons';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport parseTNode from '../utils/parseTNode';\r\nimport noop from '../utils/noop';\r\n\r\nimport useConfig from '../hooks/useConfig';\r\nimport useGlobalIcon from '../hooks/useGlobalIcon';\r\nimport { TdAlertProps } from './type';\r\nimport { StyledProps } from '../common';\r\nimport { alertDefaultProps } from './defaultProps';\r\nimport composeRefs from '../utils/composeRefs';\r\nimport useDefaultProps from '../hooks/useDefaultProps';\r\n\r\nconst transitionTime = 200;\r\n\r\nexport interface AlertProps extends TdAlertProps, StyledProps {}\r\n\r\nconst Alert = forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\r\n  const { classPrefix } = useConfig();\r\n  // const [local, t] = useLocaleReceiver('alert');\r\n  const {\r\n    CloseIcon,\r\n    InfoCircleFilledIcon,\r\n    CheckCircleFilledIcon,\r\n    ErrorCircleFilledIcon\r\n  } = useGlobalIcon({\r\n    CloseIcon: TdCloseIcon,\r\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\r\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\r\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon\r\n  });\r\n\r\n  const {\r\n    message,\r\n    title,\r\n    operation,\r\n    theme,\r\n    icon,\r\n    closeBtn,\r\n    maxLine,\r\n    onClose,\r\n    className,\r\n    onClosed = noop,\r\n    ...alertProps\r\n  } = useDefaultProps(props, alertDefaultProps);\r\n\r\n  const [closed, setClosed] = React.useState(false);\r\n  const [collapsed, setCollapsed] = React.useState(true);\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n\r\n  const iconMap = {\r\n    success: CheckCircleFilledIcon,\r\n    info: InfoCircleFilledIcon,\r\n    error: ErrorCircleFilledIcon,\r\n    warning: ErrorCircleFilledIcon\r\n  };\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setClosed(true);\r\n    onClose?.({ e });\r\n  };\r\n\r\n  const handleCollapse = () => {\r\n    setCollapsed(collapsed => !collapsed);\r\n  };\r\n\r\n  const renderIconNode = () => {\r\n    if (React.isValidElement(icon)) return icon;\r\n    return React.createElement(iconMap[theme], { className: 't-icon' });\r\n  };\r\n\r\n  const renderMessage = () => {\r\n    if (+maxLine > 0 && Array.isArray(message)) {\r\n      return (\r\n        <div className={`${classPrefix}-alert__description`}>\r\n          {message.map((item, index) => {\r\n            if (collapsed) {\r\n              if (index < +maxLine) {\r\n                return <div key={index}>{item}</div>;\r\n              }\r\n            } else {\r\n              return <div key={index}>{item}</div>;\r\n            }\r\n            return true;\r\n          })}\r\n          {+maxLine < message.length && (\r\n            <div\r\n              className={`${classPrefix}-alert__collapse`}\r\n              onClick={handleCollapse}\r\n            >\r\n              {collapsed ? '展开' : '收起'}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return <div className={`${classPrefix}-alert__description`}>{message}</div>;\r\n  };\r\n\r\n  // close 属性变更为 closeBtn，close废弃后可删除。（需兼容标签上直接写close和closeBtn的场景）\r\n  const isUsingClose = Reflect.has(props, 'close');\r\n  const closeNode = isUsingClose ? close : closeBtn;\r\n  if (isUsingClose) {\r\n    console.warn(\r\n      'TAlert',\r\n      'prop `close` is going to be deprecated, please use `closeBtn` instead.'\r\n    );\r\n  }\r\n  const renderClose = () => {\r\n    if (closeNode === false) return null;\r\n    return (\r\n      <div className={`${classPrefix}-alert__close`} onClick={handleClose}>\r\n        {parseTNode(\r\n          closeNode as any,\r\n          undefined,\r\n          <CloseIcon className=\"t-icon\"></CloseIcon>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={!closed}\r\n      unmountOnExit\r\n      classNames={{\r\n        exitActive: `${classPrefix}-alert--closing`\r\n      }}\r\n      nodeRef={nodeRef}\r\n      timeout={transitionTime}\r\n      onExited={onClosed}\r\n    >\r\n      <div\r\n        ref={composeRefs(ref, nodeRef)}\r\n        className={classNames(\r\n          `${classPrefix}-alert`,\r\n          `${classPrefix}-alert--${theme}`,\r\n          className\r\n        )}\r\n        {...alertProps}\r\n      >\r\n        <div className={`${classPrefix}-alert__icon`}>{renderIconNode()}</div>\r\n        <div className={`${classPrefix}-alert__content`}>\r\n          {title ? (\r\n            <div className={`${classPrefix}-alert__title`}>{title}</div>\r\n          ) : null}\r\n          <div className={`${classPrefix}-alert__message`}>\r\n            {renderMessage()}\r\n            {operation ? (\r\n              <div className={`${classPrefix}-alert__operation`}>\r\n                {parseTNode(operation)}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        {renderClose()}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n});\r\n\r\nAlert.displayName = 'Alert';\r\n\r\nexport default Alert;\r\n"],"names":["alertDefaultProps","closeBtn","maxLine","theme","transitionTime","Alert","forwardRef","props","ref","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","_useDefaultProps","useDefaultProps","message","title","operation","icon","onClose","className","_useDefaultProps$onCl","onClosed","noop","alertProps","_objectWithoutProperties","_excluded","_React$useState","React","useState","_React$useState2","_slicedToArray","closed","setClosed","_React$useState3","_React$useState4","collapsed","setCollapsed","nodeRef","useRef","iconMap","success","info","error","warning","handleClose","e","handleCollapse","renderIconNode","isValidElement","createElement","renderMessage","Array","isArray","concat","map","item","index","key","length","onClick","isUsingClose","Reflect","has","closeNode","close","console","warn","renderClose","parseTNode","undefined","CSSTransition","unmountOnExit","classNames","exitActive","timeout","onExited","_extends","composeRefs","displayName"],"mappings":"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"}