{"version":3,"file":"dep-BlRTpQ02.js","sources":["../../../components/hooks/useDomRefCallback.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\n// https://reactjs.org/docs/hooks-faq.html#how-can-i-measure-a-dom-node\r\nexport default function useDomRefCallback(): [\r\n  HTMLElement,\r\n  React.Dispatch<React.SetStateAction<HTMLElement>>,\r\n] {\r\n  const [refCurrent, setRefCurrent] = useState<HTMLElement>();\r\n\r\n  useCallback((dom: HTMLElement) => {\r\n    if (dom) setRefCurrent(dom);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return [refCurrent, setRefCurrent];\r\n}\r\n"],"names":["useDomRefCallback","_useState","useState","_useState2","_slicedToArray","refCurrent","setRefCurrent","useCallback","dom"],"mappings":";;;AAEA;AACe,SAASA,iBAAiBA,GAGvC;AACA,EAAA,IAAAC,SAAA,GAAoCC,QAAQ,EAAe;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAApDI,IAAAA,UAAU,GAAAF,UAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,aAAa,GAAAH,UAAA,CAAA,CAAA,CAAA;EAEhCI,WAAW,CAAC,UAACC,GAAgB,EAAK;AAChC,IAAA,IAAIA,GAAG,EAAEF,aAAa,CAACE,GAAG,CAAC;;AAE3B;EACF,CAAC,EAAE,EAAE,CAAC;AAEN,EAAA,OAAO,CAACH,UAAU,EAAEC,aAAa,CAAC;AACpC;;;;"}