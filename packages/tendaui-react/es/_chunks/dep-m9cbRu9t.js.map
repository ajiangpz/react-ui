{"version":3,"file":"dep-m9cbRu9t.js","sources":["../../../components/form/const.ts","../../../components/form/hooks/useFormItemStyle.tsx"],"sourcesContent":["export const enum ValidateStatus {\r\n  SUCCESS = 'success',\r\n  WARNING = 'warning',\r\n  ERROR = 'error',\r\n  VALIDATING = 'validating',\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport useConfig from '../../hooks/useConfig';\r\nimport parseTNode from '../../utils/parseTNode';\r\nimport { ValidateStatus } from '../const';\r\n\r\nexport default function useFormItemStyle(props) {\r\n  const { classPrefix } = useConfig();\r\n\r\n  const {\r\n    className,\r\n    help,\r\n    tips,\r\n    snakeName,\r\n    status,\r\n    successBorder,\r\n    errorList,\r\n    successList,\r\n    layout,\r\n    verifyStatus,\r\n    label,\r\n    labelWidth,\r\n    labelAlign,\r\n    requiredMark,\r\n    requiredMarkPosition,\r\n    showErrorMessage,\r\n    innerRules,\r\n  } = props;\r\n\r\n  // 传入 status 时受控\r\n  const renderStatus = status || verifyStatus;\r\n\r\n  // help 文本\r\n  const helpNode = help && <div className={`${classPrefix}-input__help`}>{parseTNode(help)}</div>;\r\n\r\n  // 判断是否有星号\r\n  const needRequiredMark = requiredMark || (requiredMark ?? innerRules.filter((rule: any) => rule.required).length > 0);\r\n\r\n  // 提示文本\r\n  const extraNode = useMemo(() => {\r\n    let extra = tips ? (\r\n      <div className={`${classPrefix}-input__extra`} title={tips}>\r\n        {tips}\r\n      </div>\r\n    ) : null;\r\n\r\n    if (showErrorMessage && errorList?.[0]?.message) {\r\n      extra = (\r\n        <div className={`${classPrefix}-input__extra`} title={errorList[0].message}>\r\n          {errorList[0].message}\r\n        </div>\r\n      );\r\n    } else if (successList.length) {\r\n      extra = (\r\n        <div className={`${classPrefix}-input__extra`} title={successList[0].message}>\r\n          {successList[0].message}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return extra;\r\n  }, [showErrorMessage, errorList, successList, tips, classPrefix]);\r\n\r\n  // snake 在dom上显示的名字改成下划线拼接\r\n  const formSnakeName = snakeName.split(',').join('_');\r\n\r\n  const formItemClass = classNames(`${classPrefix}-form__item`, className, {\r\n    [`${classPrefix}-form-item__${formSnakeName}`]: formSnakeName,\r\n    [`${classPrefix}-form__item-with-help`]: helpNode,\r\n    [`${classPrefix}-form__item-with-extra`]: extraNode,\r\n  });\r\n\r\n  const formItemLabelClass = classNames(`${classPrefix}-form__label`, {\r\n    [`${classPrefix}-form__label--required`]: needRequiredMark,\r\n    [`${classPrefix}-form__label--required-right`]: needRequiredMark && requiredMarkPosition === 'right',\r\n    [`${classPrefix}-form__label--top`]: labelAlign === 'top' || !labelWidth,\r\n    [`${classPrefix}-form__label--left`]: labelAlign === 'left' && labelWidth,\r\n    [`${classPrefix}-form__label--right`]: labelAlign === 'right' && labelWidth,\r\n  });\r\n\r\n  const contentClass = () => {\r\n    const controlCls = `${classPrefix}-form__controls`;\r\n    if (!showErrorMessage) return controlCls;\r\n\r\n    const isSuccess = renderStatus === ValidateStatus.SUCCESS;\r\n    if (isSuccess) {\r\n      return classNames(controlCls, `${classPrefix}-is-success`, {\r\n        [`${classPrefix}-form--success-border`]: successBorder,\r\n      });\r\n    }\r\n\r\n    return classNames(controlCls, {\r\n      [`${classPrefix}-is-warning`]: renderStatus === 'warning',\r\n      [`${classPrefix}-is-error`]: ['fail', 'error'].includes(renderStatus),\r\n      [`${classPrefix}-form--has-error`]:\r\n        renderStatus === ValidateStatus.ERROR || renderStatus === ValidateStatus.WARNING,\r\n    });\r\n  };\r\n\r\n  let labelStyle = {};\r\n  let contentStyle = {};\r\n  if (label && labelWidth && labelAlign !== 'top') {\r\n    if (typeof labelWidth === 'number') {\r\n      labelStyle = { width: `${labelWidth}px` };\r\n      contentStyle = { marginLeft: layout !== 'inline' ? `${labelWidth}px` : '' };\r\n    } else {\r\n      labelStyle = { width: labelWidth };\r\n      contentStyle = { marginLeft: layout !== 'inline' ? labelWidth : '' };\r\n    }\r\n  }\r\n\r\n  return {\r\n    formItemClass,\r\n    formItemLabelClass,\r\n    contentClass,\r\n    labelStyle,\r\n    contentStyle,\r\n    helpNode,\r\n    extraNode,\r\n  };\r\n}\r\n"],"names":["ValidateStatus","useFormItemStyle","props","_useConfig","useConfig","classPrefix","className","help","tips","snakeName","status","successBorder","errorList","successList","layout","verifyStatus","label","labelWidth","labelAlign","requiredMark","requiredMarkPosition","showErrorMessage","innerRules","renderStatus","helpNode","React","createElement","concat","parseTNode","needRequiredMark","filter","rule","required","length","extraNode","useMemo","_errorList$","extra","title","message","formSnakeName","split","join","formItemClass","classNames","_defineProperty","formItemLabelClass","contentClass","controlCls","isSuccess","SUCCESS","includes","ERROR","WARNING","labelStyle","contentStyle","width","marginLeft"],"mappings":"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"}