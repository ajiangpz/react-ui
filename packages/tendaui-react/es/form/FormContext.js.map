{"version":3,"file":"FormContext.js","sources":["../../../components/form/FormContext.tsx"],"sourcesContent":["import React from 'react';\r\nimport { TdFormProps, TdFormListProps, NamePath } from './type';\r\nimport { FormItemInstance } from './FormItem';\r\nimport { InternalFormInstance } from './hooks/interface';\r\n\r\nconst FormContext = React.createContext<{\r\n  form?: InternalFormInstance;\r\n  labelWidth?: TdFormProps['labelWidth'];\r\n  statusIcon?: TdFormProps['statusIcon'];\r\n  labelAlign: TdFormProps['labelAlign'];\r\n  layout: TdFormProps['layout'];\r\n  colon: TdFormProps['colon'];\r\n  initialData: TdFormProps['initialData'];\r\n  requiredMark: TdFormProps['requiredMark'];\r\n  requiredMarkPosition: TdFormProps['requiredMarkPosition'];\r\n  scrollToFirstError: TdFormProps['scrollToFirstError'];\r\n  showErrorMessage: TdFormProps['showErrorMessage'];\r\n  resetType: TdFormProps['resetType'];\r\n  disabled: TdFormProps['disabled'];\r\n  rules: TdFormProps['rules'];\r\n  errorMessage: TdFormProps['errorMessage'];\r\n  formMapRef: React.RefObject<Map<any, React.RefObject<FormItemInstance>>>;\r\n  floatingFormDataRef: React.RefObject<Record<any, any>>;\r\n  onFormItemValueChange: (changedValue: Record<string, unknown>) => void;\r\n}>({\r\n  form: undefined,\r\n  labelWidth: '100px',\r\n  labelAlign: 'right',\r\n  layout: 'vertical',\r\n  colon: false,\r\n  initialData: {},\r\n  requiredMark: undefined,\r\n  requiredMarkPosition: undefined,\r\n  scrollToFirstError: undefined,\r\n  showErrorMessage: undefined,\r\n  resetType: 'empty',\r\n  disabled: undefined,\r\n  rules: undefined,\r\n  errorMessage: undefined,\r\n  statusIcon: undefined,\r\n  onFormItemValueChange: undefined,\r\n  formMapRef: undefined,\r\n  floatingFormDataRef: undefined,\r\n});\r\n\r\nexport const useFormContext = () => React.useContext(FormContext);\r\n\r\nexport default FormContext;\r\n\r\nexport const FormListContext = React.createContext<{\r\n  name: NamePath;\r\n  rules: TdFormListProps['rules'];\r\n  formListMapRef: React.RefObject<Map<any, React.RefObject<FormItemInstance>>>;\r\n  initialData: TdFormListProps['initialData'];\r\n  form?: InternalFormInstance;\r\n}>({\r\n  name: undefined,\r\n  rules: undefined,\r\n  formListMapRef: undefined,\r\n  initialData: [],\r\n  form: undefined,\r\n});\r\n\r\nexport const useFormListContext = () => React.useContext(FormListContext);\r\n"],"names":["FormContext","React","createContext","form","undefined","labelWidth","labelAlign","layout","colon","initialData","requiredMark","requiredMarkPosition","scrollToFirstError","showErrorMessage","resetType","disabled","rules","errorMessage","statusIcon","onFormItemValueChange","formMapRef","floatingFormDataRef","useFormContext","useContext","FormListContext","name","formListMapRef","useFormListContext"],"mappings":";;AAKA,IAAMA,WAAW,gBAAGC,KAAK,CAACC,aAAa,CAmBpC;AACDC,EAAAA,IAAI,EAAEC,SAAS;AACfC,EAAAA,UAAU,EAAE,OAAO;AACnBC,EAAAA,UAAU,EAAE,OAAO;AACnBC,EAAAA,MAAM,EAAE,UAAU;AAClBC,EAAAA,KAAK,EAAE,KAAK;EACZC,WAAW,EAAE,EAAE;AACfC,EAAAA,YAAY,EAAEN,SAAS;AACvBO,EAAAA,oBAAoB,EAAEP,SAAS;AAC/BQ,EAAAA,kBAAkB,EAAER,SAAS;AAC7BS,EAAAA,gBAAgB,EAAET,SAAS;AAC3BU,EAAAA,SAAS,EAAE,OAAO;AAClBC,EAAAA,QAAQ,EAAEX,SAAS;AACnBY,EAAAA,KAAK,EAAEZ,SAAS;AAChBa,EAAAA,YAAY,EAAEb,SAAS;AACvBc,EAAAA,UAAU,EAAEd,SAAS;AACrBe,EAAAA,qBAAqB,EAAEf,SAAS;AAChCgB,EAAAA,UAAU,EAAEhB,SAAS;AACrBiB,EAAAA,mBAAmB,EAAEjB;AACvB,CAAC;AAEM,IAAMkB,cAAc,GAAG,SAAjBA,cAAcA,GAAA;AAAA,EAAA,OAASrB,KAAK,CAACsB,UAAU,CAACvB,WAAW,CAAC;AAAA;IAIpDwB,eAAe,gBAAGvB,KAAK,CAACC,aAAa,CAM/C;AACDuB,EAAAA,IAAI,EAAErB,SAAS;AACfY,EAAAA,KAAK,EAAEZ,SAAS;AAChBsB,EAAAA,cAAc,EAAEtB,SAAS;AACzBK,EAAAA,WAAW,EAAE,EAAE;AACfN,EAAAA,IAAI,EAAEC;AACR,CAAC;AAEM,IAAMuB,kBAAkB,GAAG,SAArBA,kBAAkBA,GAAA;AAAA,EAAA,OAAS1B,KAAK,CAACsB,UAAU,CAACC,eAAe,CAAC;AAAA;;;;"}