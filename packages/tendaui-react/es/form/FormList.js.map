{"version":3,"file":"FormList.js","sources":["../../../components/form/FormList.tsx"],"sourcesContent":["import React, { useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { flattenDeep, get, merge, set, unset } from 'lodash-es';\r\n// import log from '@tdesign/common-js/log/index';\r\nimport { FormListContext, useFormContext } from './FormContext';\r\nimport type { FormItemInstance } from './FormItem';\r\nimport { HOOK_MARK } from './hooks/useForm';\r\nimport type { FormListField, FormListFieldOperation, TdFormListProps } from './type';\r\nimport { calcFieldValue } from './utils';\r\n\r\nlet key = 0;\r\n\r\nconst FormList: React.FC<TdFormListProps> = (props) => {\r\n  const {\r\n    formMapRef,\r\n    form,\r\n    onFormItemValueChange,\r\n    initialData: initialDataFromForm,\r\n    resetType: resetTypeFromContext,\r\n  } = useFormContext();\r\n  const { name, rules, children } = props;\r\n\r\n  const initialData = props.initialData || get(initialDataFromForm, name) || [];\r\n\r\n  const [formListValue, setFormListValue] = useState(initialData);\r\n  const [fields, setFields] = useState<Array<FormListField>>(() =>\r\n    initialData.map((data, index) => ({\r\n      data: { ...data },\r\n      key: (key += 1),\r\n      name: index,\r\n      isListField: true,\r\n    })),\r\n  );\r\n  const formListMapRef = useRef(new Map()); // 收集 formItem 实例\r\n  const formListRef = useRef<FormItemInstance>(null); // 当前 formList 实例\r\n  const fieldsTaskQueueRef = useRef([]); // 记录更改 fields 数据后 callback 队列\r\n  const snakeName = []\r\n    .concat(name)\r\n    .filter((item) => item !== undefined)\r\n    .toString(); // 转化 name\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      isMounted.current = false;\r\n    },\r\n    [],\r\n  );\r\n\r\n  const operation: FormListFieldOperation = {\r\n    add(defaultValue?: any, insertIndex?: number) {\r\n      const cloneFields = [...fields];\r\n      const index = insertIndex ?? cloneFields.length;\r\n      cloneFields.splice(index, 0, {\r\n        key: (key += 1),\r\n        name: index,\r\n        isListField: true,\r\n      });\r\n      cloneFields.forEach((field, index) => Object.assign(field, { name: index }));\r\n      setFields(cloneFields);\r\n\r\n      const nextFormListValue = [...formListValue];\r\n      if (typeof defaultValue !== 'undefined') {\r\n        nextFormListValue[index] = defaultValue;\r\n        setFormListValue(nextFormListValue);\r\n      }\r\n\r\n      set(form?.store, flattenDeep([name, index]), nextFormListValue);\r\n\r\n      const fieldValue = calcFieldValue(name, nextFormListValue);\r\n      requestAnimationFrame(() => {\r\n        onFormItemValueChange?.({ ...fieldValue });\r\n      });\r\n    },\r\n    remove(index: number | number[]) {\r\n      const nextFields = fields\r\n        .filter((item) => {\r\n          if (Array.isArray(index)) return !index.includes(item.name);\r\n          return item.name !== index;\r\n        })\r\n        .map((field, i) => ({ ...field, name: i }));\r\n      setFields(nextFields);\r\n\r\n      const nextFormListValue = formListValue.filter((_, idx) => idx !== index);\r\n      setFormListValue(nextFormListValue);\r\n\r\n      unset(form?.store, flattenDeep([name, index]));\r\n\r\n      const fieldValue = calcFieldValue(name, nextFormListValue);\r\n      requestAnimationFrame(() => {\r\n        onFormItemValueChange?.({ ...fieldValue });\r\n      });\r\n    },\r\n    move(from: number, to: number) {\r\n      const cloneFields = [...fields];\r\n      const fromItem = { ...cloneFields[from] };\r\n      const toItem = { ...cloneFields[to] };\r\n      cloneFields[to] = fromItem;\r\n      cloneFields[from] = toItem;\r\n      set(form?.store, name, []);\r\n      setFields(cloneFields);\r\n    },\r\n  };\r\n\r\n  // 外部设置 fields 优先级最高，可以更改渲染的节点\r\n  function setListFields(fieldData: any[], callback: Function, originData) {\r\n    setFields(\r\n      fieldData.map((_, index) => ({\r\n        key: (key += 1),\r\n        name: index,\r\n        isListField: true,\r\n      })),\r\n    );\r\n    // 添加至队列中 等待下次渲染完成执行对应逻辑\r\n    fieldsTaskQueueRef.current.push({ callback, fieldData, originData });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!name || !formMapRef) return;\r\n    formMapRef.current.set(name, formListRef);\r\n\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      formMapRef.current.delete(name);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [snakeName]);\r\n\r\n  useEffect(() => {\r\n    [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n      if (!formItemRef.current) return;\r\n      const { name, isUpdated } = formItemRef.current;\r\n      if (isUpdated) return; // 内部更新过值则跳过\r\n\r\n      const data = get(formListValue, name);\r\n      formItemRef.current.setField({ value: data, status: 'not' });\r\n    });\r\n  }, [formListValue]);\r\n\r\n  useEffect(() => {\r\n    if (!isMounted.current) {\r\n      isMounted.current = true;\r\n      return;\r\n    }\r\n    // fields 变化通知 watch 事件\r\n    form?.getInternalHooks?.(HOOK_MARK)?.notifyWatch?.(name);\r\n\r\n    // 等待子节点渲染完毕\r\n    Promise.resolve().then(() => {\r\n      if (!fieldsTaskQueueRef.current.length) return;\r\n\r\n      // fix multiple formlist stuck\r\n      const currentQueue = fieldsTaskQueueRef.current.pop();\r\n      const { fieldData, callback, originData } = currentQueue;\r\n\r\n      [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n        if (!formItemRef.current) return;\r\n\r\n        const { name: itemName } = formItemRef.current;\r\n        const data = get(fieldData, itemName);\r\n        callback(formItemRef, data);\r\n      });\r\n\r\n      // formList 嵌套 formList\r\n      if (!formMapRef || !formMapRef.current) return;\r\n      [...formMapRef.current.values()].forEach((formItemRef) => {\r\n        if (!formItemRef.current) return;\r\n\r\n        const { name: itemName, isFormList } = formItemRef.current;\r\n        if (String(itemName) === String(name) || !isFormList) return;\r\n        const data = get(originData, itemName);\r\n        if (data) callback(formItemRef, data);\r\n      });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [form, snakeName, fields, formMapRef]);\r\n\r\n  useImperativeHandle(\r\n    formListRef,\r\n    (): FormItemInstance => ({\r\n      name,\r\n      isFormList: true,\r\n      getValue() {\r\n        const formListValue = [];\r\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n          if (!formItemRef.current) return;\r\n\r\n          const { name, getValue } = formItemRef.current;\r\n          const fieldValue = calcFieldValue(name, getValue());\r\n          merge(formListValue, fieldValue);\r\n        });\r\n        return formListValue;\r\n      },\r\n      validate: (trigger = 'all') => {\r\n        const resultList = [];\r\n        const validates = [...formListMapRef.current.values()].map((formItemRef) =>\r\n          formItemRef?.current?.validate?.(trigger),\r\n        );\r\n        return new Promise((resolve) => {\r\n          Promise.all(validates).then((validateResult) => {\r\n            validateResult.forEach((result) => {\r\n              const errorValue = Object.values(result)[0];\r\n              merge(resultList, errorValue);\r\n            });\r\n            const errorItems = validateResult.filter((item) => Object.values(item)[0] !== true);\r\n            if (errorItems.length) {\r\n              resolve({ [snakeName]: resultList });\r\n            } else {\r\n              resolve({ [snakeName]: true });\r\n            }\r\n          });\r\n        });\r\n      },\r\n      // TODO 支持局部更新数据\r\n      setValue: (fieldData: any[], originData) => {\r\n        setListFields(\r\n          fieldData,\r\n          (formItemRef, data) => {\r\n            formItemRef?.current?.setValue?.(data);\r\n          },\r\n          originData,\r\n        );\r\n      },\r\n      setField: (fieldData: { value?: any[]; status?: string }, originData) => {\r\n        const { value, status } = fieldData;\r\n        setListFields(\r\n          value,\r\n          (formItemRef, data) => {\r\n            formItemRef?.current?.setField?.({ value: data, status });\r\n          },\r\n          originData,\r\n        );\r\n      },\r\n      resetField: (type: string) => {\r\n        const resetType = type || resetTypeFromContext;\r\n\r\n        if (resetType === 'initial') {\r\n          setFormListValue(initialData);\r\n\r\n          const newFields = initialData.map((data, index) => ({\r\n            data: { ...data },\r\n            key: (key += 1),\r\n            name: index,\r\n            isListField: true,\r\n          }));\r\n          setFields(newFields);\r\n          set(form?.store, flattenDeep([name]), initialData);\r\n\r\n          requestAnimationFrame(() => {\r\n            [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n              if (!formItemRef.current) return;\r\n              const { name: itemName } = formItemRef.current;\r\n              const itemValue = get(initialData, itemName);\r\n              if (itemValue !== undefined) {\r\n                formItemRef.current.setField({ value: itemValue, status: 'not' });\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          // 重置为空\r\n          [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n            formItemRef?.current?.resetField?.();\r\n          });\r\n\r\n          fieldsTaskQueueRef.current = [];\r\n\r\n          setFormListValue([]);\r\n          setFields([]);\r\n          unset(form?.store, flattenDeep([name]));\r\n        }\r\n      },\r\n      setValidateMessage: (fieldData) => {\r\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n          if (!formItemRef.current) return;\r\n\r\n          const { name } = formItemRef.current;\r\n          const data = get(fieldData, name);\r\n\r\n          formItemRef?.current?.setValidateMessage?.(data);\r\n        });\r\n      },\r\n      resetValidate: () => {\r\n        [...formListMapRef.current.values()].forEach((formItemRef) => {\r\n          formItemRef?.current?.resetValidate?.();\r\n        });\r\n      },\r\n    }),\r\n  );\r\n\r\n  if (typeof children !== 'function') {\r\n    console.error('Form', `FormList's children must be a function!`);\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <FormListContext.Provider value={{ name, rules, formListMapRef, initialData, form }}>\r\n      {children(fields, operation)}\r\n    </FormListContext.Provider>\r\n  );\r\n};\r\n\r\nFormList.displayName = 'FormList';\r\n\r\nexport default FormList;\r\n"],"names":["key","FormList","props","_useFormContext","useFormContext","formMapRef","form","onFormItemValueChange","initialDataFromForm","initialData","resetTypeFromContext","resetType","name","rules","children","get","_useState","useState","_useState2","_slicedToArray","formListValue","setFormListValue","_useState3","map","data","index","_objectSpread","isListField","_useState4","fields","setFields","formListMapRef","useRef","Map","formListRef","fieldsTaskQueueRef","snakeName","concat","filter","item","undefined","toString","isMounted","useEffect","current","operation","add","defaultValue","insertIndex","cloneFields","_toConsumableArray","length","splice","forEach","field","Object","assign","nextFormListValue","set","store","flattenDeep","fieldValue","calcFieldValue","requestAnimationFrame","remove","nextFields","Array","isArray","includes","i","_","idx","unset","move","from","to","fromItem","toItem","setListFields","fieldData","callback","originData","push","values","formItemRef","_formItemRef$current","isUpdated","setField","value","status","_form$getInternalHook","_form$getInternalHook2","getInternalHooks","call","HOOK_MARK","notifyWatch","Promise","resolve","then","currentQueue","pop","itemName","_formItemRef$current2","isFormList","String","useImperativeHandle","getValue","_formItemRef$current3","merge","validate","trigger","arguments","resultList","validates","_formItemRef$current4","_formItemRef$current5","all","validateResult","result","errorValue","errorItems","_defineProperty","setValue","_formItemRef$current6","_formItemRef$current7","_formItemRef$current8","_formItemRef$current9","resetField","type","newFields","itemValue","_formItemRef$current0","_formItemRef$current1","setValidateMessage","_formItemRef$current10","_formItemRef$current11","resetValidate","_formItemRef$current12","_formItemRef$current13","console","error","React","createElement","FormListContext","Provider","displayName"],"mappings":"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"}