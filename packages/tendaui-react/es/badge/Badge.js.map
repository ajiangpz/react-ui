{"version":3,"file":"Badge.js","sources":["../../../components/badge/defaultProps.ts","../../../components/badge/Badge.tsx"],"sourcesContent":["\r\nimport { TdBadgeProps } from './type';\r\n\r\nexport const badgeDefaultProps: TdBadgeProps = {\r\n  count: 0,\r\n  dot: false,\r\n  maxCount: 99,\r\n  shape: 'circle',\r\n  showZero: false,\r\n  size: 'medium',\r\n};\r\n","import React, { forwardRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport { StyledProps } from '../common';\r\nimport useConfig from '../hooks/useConfig';\r\nimport { TdBadgeProps } from './type';\r\nimport { badgeDefaultProps } from './defaultProps';\r\nimport useDefaultProps from '../hooks/useDefaultProps';\r\n\r\nexport interface BadgeProps extends TdBadgeProps, StyledProps { }\r\n\r\nconst Badge = forwardRef<HTMLSpanElement, BadgeProps>((props, ref) => {\r\n  const {\r\n    color,\r\n    dot,\r\n    maxCount,\r\n    count,\r\n    size,\r\n    shape,\r\n    showZero,\r\n    offset,\r\n    className,\r\n    content,\r\n    children,\r\n    style,\r\n    ...restProps\r\n  } = useDefaultProps<BadgeProps>(props, badgeDefaultProps);\r\n  const { classPrefix } = useConfig();\r\n\r\n  const childNode = content || children;\r\n\r\n  const badgeClassName = classNames(\r\n    !childNode && `${classPrefix}-badge--static`,\r\n    dot ? `${classPrefix}-badge--dot` : `${classPrefix}-badge--${shape}`,\r\n    size === 'small' && `${classPrefix}-size-s`,\r\n    !childNode && className,\r\n  );\r\n  const getDisplayCount = () => {\r\n    if (typeof count === 'number' && count > maxCount) {\r\n      return `${maxCount}+`;\r\n    }\r\n    return count;\r\n  };\r\n\r\n  let isHidden = !count;\r\n  if (typeof count === 'number') {\r\n    isHidden = count < 1 && !showZero;\r\n  }\r\n\r\n  const getStyle = () => {\r\n    const mergedStyle: React.CSSProperties = { ...style };\r\n    if (color) {\r\n      mergedStyle.backgroundColor = color;\r\n    }\r\n    if (offset) {\r\n      if (offset[0]) {\r\n        mergedStyle.right = +offset[0];\r\n      }\r\n      if (offset[1]) {\r\n        mergedStyle.marginTop = +offset[1];\r\n      }\r\n    }\r\n    return mergedStyle;\r\n  };\r\n\r\n  const badge = !isHidden ? (\r\n    <span {...(childNode ? {} : restProps)} className={badgeClassName} style={getStyle()}>\r\n      {!dot ? getDisplayCount() : null}\r\n    </span>\r\n  ) : null;\r\n\r\n  if (!childNode) {\r\n    return badge;\r\n  }\r\n\r\n  return (\r\n    <span {...restProps} className={classNames(`${classPrefix}-badge`, className)} ref={ref}>\r\n      {childNode}\r\n      {badge}\r\n    </span>\r\n  );\r\n});\r\n\r\nBadge.displayName = 'Badge';\r\n\r\nexport default Badge;\r\n"],"names":["badgeDefaultProps","count","dot","maxCount","shape","showZero","size","Badge","forwardRef","props","ref","_useDefaultProps","useDefaultProps","color","offset","className","content","children","style","restProps","_objectWithoutProperties","_excluded","_useConfig","useConfig","classPrefix","childNode","badgeClassName","classNames","concat","getDisplayCount","isHidden","getStyle","mergedStyle","_objectSpread","backgroundColor","right","marginTop","badge","React","createElement","_extends","displayName"],"mappings":"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"}