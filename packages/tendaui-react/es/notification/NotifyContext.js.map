{"version":3,"file":"NotifyContext.js","sources":["../../../components/notification/NotifyContext.tsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useContext,\r\n} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport NotifyContainer from './NotifyContainer';\r\n\r\n// 1. 定义类型\r\ntype NotificationType = 'success' | 'error' | 'warning' | 'info';\r\n\r\ninterface Notification {\r\n  id: string;\r\n  type: NotificationType;\r\n  message: string;\r\n  createdAt: number;\r\n  isRemoved: boolean;\r\n  title: string\r\n}\r\n\r\n// 2. 定义 Context 类型\r\ninterface NotificationContextType {\r\n  notify: (type: NotificationType, message: Message) => void;\r\n  success: (message: Message) => void;\r\n  error: (message: Message) => void;\r\n  warning: (message: Message) => void;\r\n  info: (message: Message) => void;\r\n  removeNotification: (id: string) => void;\r\n}\r\n\r\n// 3. 创建 Context\r\nconst NotificationContext = createContext<NotificationContextType | null>(null);\r\n\r\n// 4. 生成唯一 ID 的辅助函数\r\nconst generateId = () => Math.random().toString(36).substr(2, 9);\r\n\r\n// 5. Provider 组件\r\ninterface NotificationProviderProps {\r\n  children: React.ReactNode;\r\n  maxStack?: number;\r\n  displayDuration?: number;\r\n  position?: string;\r\n}\r\n\r\ntype Message = {\r\n  title: string,\r\n  message: string\r\n}\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({\r\n  children,\r\n  maxStack = 5,\r\n  displayDuration = 3000,\r\n  position = 'top-right',\r\n}) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const timersRef = useRef<Map<string, NodeJS.Timeout>>(new Map());\r\n  const pausedAtRef = useRef<Map<string, number>>(new Map());\r\n\r\n  // 定时器相关函数\r\n  const clearNotificationTimer = useCallback((id: string) => {\r\n    const timer = timersRef.current.get(id);\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timersRef.current.delete(id);\r\n    }\r\n  }, []);\r\n\r\n  const startTimer = useCallback(\r\n    (notification: Notification, remainingTime?: number) => {\r\n      const duration = remainingTime ?? displayDuration;\r\n      const timer = setTimeout(() => {\r\n        setNotifications((prev) =>\r\n          prev.map((n) =>\r\n            n.id === notification.id ? { ...n, isRemoved: true } : n,\r\n          ),\r\n        );\r\n        setTimeout(() => {\r\n          setNotifications((prev) =>\r\n            prev.filter((t) => t.id !== notification.id),\r\n          );\r\n          clearNotificationTimer(notification.id);\r\n          pausedAtRef.current.delete(notification.id);\r\n        }, 400);\r\n      }, duration);\r\n      timersRef.current.set(notification.id, timer);\r\n    },\r\n    [displayDuration],\r\n  );\r\n\r\n\r\n\r\n  // 6. 核心通知函数\r\n  const addNotification = useCallback(\r\n    (type: NotificationType, message: Message) => {\r\n      const newNotification: Notification = {\r\n        id: generateId(),\r\n        type,\r\n        title: message.title,\r\n        message: message.message,\r\n        createdAt: Date.now(),\r\n        isRemoved: false,\r\n      };\r\n\r\n      setNotifications((prev) => {\r\n        const newNotifications = [newNotification, ...prev];\r\n        const removedNotifications = newNotifications.slice(maxStack);\r\n\r\n        removedNotifications.forEach((notification) => {\r\n          clearNotificationTimer(notification.id);\r\n          pausedAtRef.current.delete(notification.id);\r\n        });\r\n\r\n        return newNotifications.slice(0, maxStack);\r\n      });\r\n\r\n      startTimer(newNotification);\r\n    },\r\n    [maxStack, startTimer, clearNotificationTimer],\r\n  );\r\n\r\n  // 7. 提供的 Context 值\r\n  const contextValue = React.useMemo(\r\n    () => ({\r\n      notify: addNotification,\r\n      success: (message: Message) => addNotification('success', message),\r\n      error: (message: Message) => addNotification('error', message),\r\n      warning: (message: Message) => addNotification('warning', message),\r\n      info: (message: Message) => addNotification('info', message),\r\n      removeNotification: (id: string) => {\r\n        setNotifications((prev) => prev.filter((t) => t.id !== id));\r\n        clearNotificationTimer(id);\r\n        pausedAtRef.current.delete(id);\r\n      },\r\n    }),\r\n    [addNotification, clearNotificationTimer],\r\n  );\r\n\r\n  // 悬停处理\r\n  const clearAllTimers = useCallback(() => {\r\n    const now = Date.now();\r\n    notifications.forEach((notification) => {\r\n      pausedAtRef.current.set(notification.id, now);\r\n      clearNotificationTimer(notification.id);\r\n    });\r\n  }, [notifications]);\r\n\r\n  const restartAllTimers = useCallback(() => {\r\n    notifications.forEach((notification) => {\r\n      const pausedAt = pausedAtRef.current.get(notification.id);\r\n      if (pausedAt) {\r\n        const elapsedTime = pausedAt - notification.createdAt;\r\n        const remainingTime = Math.max(0, displayDuration - elapsedTime);\r\n        startTimer(notification, remainingTime);\r\n        pausedAtRef.current.delete(notification.id);\r\n      }\r\n    });\r\n  }, [notifications, displayDuration, startTimer]);\r\n\r\n  return (\r\n    <NotificationContext.Provider value={contextValue}>\r\n      {children}\r\n      {createPortal(\r\n        <NotifyContainer\r\n          notifications={notifications}\r\n          onRemove={(id) => contextValue.removeNotification(id)}\r\n          onHoverStart={clearAllTimers}\r\n          onHoverEnd={restartAllTimers}\r\n          data-testid=\"notification-container\"\r\n          maxStack={maxStack}\r\n          position={position}\r\n        />,\r\n        document.body,\r\n      )}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\n// 8. 创建自定义 Hook\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error(\r\n      'useNotification must be used within a NotificationProvider',\r\n    );\r\n  }\r\n  return context;\r\n};\r\n"],"names":["NotificationContext","createContext","generateId","Math","random","toString","substr","NotificationProvider","_ref","children","_ref$maxStack","maxStack","_ref$displayDuration","displayDuration","_ref$position","position","_useState","useState","_useState2","_slicedToArray","notifications","setNotifications","timersRef","useRef","Map","pausedAtRef","clearNotificationTimer","useCallback","id","timer","current","get","clearTimeout","startTimer","notification","remainingTime","duration","setTimeout","prev","map","n","_objectSpread","isRemoved","filter","t","set","addNotification","type","message","newNotification","title","createdAt","Date","now","newNotifications","concat","_toConsumableArray","removedNotifications","slice","forEach","contextValue","React","useMemo","notify","success","error","warning","info","removeNotification","clearAllTimers","restartAllTimers","pausedAt","elapsedTime","max","createElement","Provider","value","createPortal","NotifyContainer","onRemove","onHoverStart","onHoverEnd","document","body","useNotification","context","useContext","Error"],"mappings":"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"}